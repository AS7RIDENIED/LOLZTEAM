{
  "openapi": "3.0.2",
  "info": {
    "title": "Lolzteam Public API: Market",
    "description": "\n[Forum API](https://docs.api.zelenka.guru/?forum)\n\n\n**API free libraries**\n\n\n+ [Node.js](https://github.com/NztForum/node-lzt) \n+ [Python](https://github.com/AS7RIDENIED/Lolzteam_Python_Api)\n+ [C#](https://github.com/fanidamn/LolzMarketAPI)\n\n**Rate limit**\n\n\n+ 20 requests per minute for only **Category Search** methods (3 seconds delay between per request)\nIf you exceed the limit, the response code 429 will be returned to you.\n\n**Authorization**\n\n\nFor using this api you need to create API Client and get Access Token with **market** scope.\n\n**Content-Type**\n\napplication/x-www-form-urlencoded.\n\nYou can import the API into Postman using [this](https://docs.api.zelenka.guru/swagger/market.json) file.\n\n**Is for free access?**\n\nTo use the market api, you need to have 200 sympathies, or you can purchase monthly subscription [here](https://zelenka.guru/account/upgrades).",
    "version": "1.1.20"
  },
  "servers": [
    {
      "url": "https://api.lzt.market",
      "description": "Production."
    },
    {
      "url": "https://api.zelenka.guru/market",
      "description": "Production."
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "Get Last Accounts",
        "description": "Displays a list of latest accounts.",
        "operationId": "Category.Latest",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/steam": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "Steam",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.Steam",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "name": "email_type[]",
            "in": "query",
            "description": "Email type.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email Type",
              "description": "Email type.",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "autoreg",
                  "native",
                  "no",
                  "no_market"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/item_domain"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "$ref": "#/components/parameters/game_int"
          },
          {
            "name": "hours_played",
            "in": "query",
            "description": "List of minimum hours played by game.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Hours Played",
              "type": "array",
              "description": "List of minimum hours played by game.",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "hours_played_max",
            "in": "query",
            "description": "List of maximum hours played by game.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Hours Played Max",
              "type": "array",
              "description": "List of maximum hours played by game.",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "eg",
            "in": "query",
            "description": "Guarantee type.\n+ **-1** - 12 hours\n+ **0** - 24 hours\n+ **1** - 3 days",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Extended Guarantee",
              "type": "integer",
              "description": "Guarantee type.\n+ **-1** - 12 hours\n+ **0** - 24 hours\n+ **1** - 3 days",
              "enum": [
                -1,
                0,
                1
              ]
            }
          },
          {
            "name": "vac[]",
            "in": "query",
            "description": "List of VAC bans by game.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Vac",
              "type": "array",
              "description": "List of VAC bans by game.",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "rt",
            "in": "query",
            "description": "Has community ban.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Rt",
              "description": "Has community ban.",
              "type": "string",
              "enum": [
                "yes",
                "no",
                "nomatter"
              ],
              "default": "no"
            }
          },
          {
            "name": "trade_ban",
            "in": "query",
            "description": "Has lifetime trade ban.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Trade Ban",
              "description": "Has lifetime trade ban.",
              "$ref": "#/components/schemas/YesNoNM"
            }
          },
          {
            "name": "trade_limit",
            "in": "query",
            "description": "Has temporary trade limit.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Trade Limit",
              "description": "Has temporary trade limit.",
              "$ref": "#/components/schemas/YesNoNM"
            }
          },
          {
            "$ref": "#/components/parameters/daybreak"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Has 5 $ limit.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Limit",
              "description": "Has 5 $ limit.",
              "$ref": "#/components/schemas/YesNoNM"
            }
          },
          {
            "name": "mafile",
            "in": "query",
            "description": "Has .mafile (Steam Guard Authenticator).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Mafile",
              "description": "Has .mafile (Steam Guard Authenticator).",
              "$ref": "#/components/schemas/YesNoNM"
            }
          },
          {
            "$ref": "#/components/parameters/reg"
          },
          {
            "$ref": "#/components/parameters/reg_period"
          },
          {
            "$ref": "#/components/parameters/lmin"
          },
          {
            "$ref": "#/components/parameters/lmax"
          },
          {
            "name": "rmin",
            "in": "query",
            "description": "Minimum rank in CS2 Matchmaking.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Rmin",
              "type": "integer",
              "minimum": 1,
              "maximum": 18,
              "description": "Minimum rank in CS2 Matchmaking."
            }
          },
          {
            "name": "rmax",
            "in": "query",
            "description": "Maximum rank in CS2 Matchmaking.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Rmax",
              "type": "integer",
              "minimum": 1,
              "maximum": 18,
              "description": "Maximum rank in CS2 Matchmaking."
            }
          },
          {
            "name": "wingman_rmin",
            "in": "query",
            "description": "Minimum rank in CS2 Wingman.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Wingman Rmin",
              "type": "integer",
              "minimum": 1,
              "maximum": 18,
              "description": "Minimum rank in CS2 Wingman."
            }
          },
          {
            "name": "wingman_rmax",
            "in": "query",
            "description": "Maximum rank in CS2 Wingman.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Wingman Rmax",
              "type": "integer",
              "minimum": 1,
              "maximum": 18,
              "description": "Maximum rank in CS2 Wingman."
            }
          },
          {
            "name": "no_vac",
            "in": "query",
            "description": "Has no VAC ban.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "No Vac",
              "description": "Has no VAC ban.",
              "type": "integer",
              "enum": [
                1
              ]
            }
          },
          {
            "name": "mm_ban",
            "in": "query",
            "description": "Has CS2 Matchmaking ban.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Mm Ban",
              "description": "Has CS2 Matchmaking ban.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "$ref": "#/components/parameters/balance_min"
          },
          {
            "$ref": "#/components/parameters/balance_max"
          },
          {
            "name": "inv_game",
            "in": "query",
            "description": "Game ID to check inventory price.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Inv Game",
              "type": "integer",
              "description": "Game ID to check inventory price."
            }
          },
          {
            "name": "inv_min",
            "in": "query",
            "description": "Minimum inventory price for game.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Inv Min",
              "type": "integer",
              "minimum": 0,
              "description": "Minimum inventory price for game."
            }
          },
          {
            "name": "inv_max",
            "in": "query",
            "description": "Maximum inventory price for game.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Inv Max",
              "type": "integer",
              "minimum": 0,
              "description": "Maximum inventory price for game."
            }
          },
          {
            "name": "friend_min",
            "in": "query",
            "description": "Minimum number of friends.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Friend Min",
              "type": "integer",
              "minimum": 0,
              "description": "Minimum number of friends."
            }
          },
          {
            "name": "friend_max",
            "in": "query",
            "description": "Maximum number of friends.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Friend Max",
              "type": "integer",
              "minimum": 0,
              "description": "Maximum number of friends."
            }
          },
          {
            "name": "gmin",
            "in": "query",
            "description": "Minimum number of games.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Gmin",
              "type": "integer",
              "minimum": 0,
              "description": "Minimum number of games."
            }
          },
          {
            "name": "gmax",
            "in": "query",
            "description": "Maximum number of games.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Gmax",
              "type": "integer",
              "minimum": 0,
              "description": "Maximum number of games."
            }
          },
          {
            "name": "win_count_min",
            "in": "query",
            "description": "Minimum number of wins.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Win Count Min",
              "type": "integer",
              "minimum": 0,
              "description": "Minimum number of wins."
            }
          },
          {
            "name": "win_count_max",
            "in": "query",
            "description": "Maximum number of wins.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Win Count Max",
              "type": "integer",
              "minimum": 0,
              "description": "Maximum number of wins."
            }
          },
          {
            "name": "medal_id[]",
            "in": "query",
            "description": "List of medal IDs.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Medal Ids",
              "type": "array",
              "description": "List of medal IDs.",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "medal_min",
            "in": "query",
            "description": "Minimum number of medals.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Medal Min",
              "type": "integer",
              "minimum": 0,
              "description": "Minimum number of medals."
            }
          },
          {
            "name": "medal_max",
            "in": "query",
            "description": "Maximum number of medals.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Medal Max",
              "type": "integer",
              "minimum": 0,
              "description": "Maximum number of medals."
            }
          },
          {
            "name": "gift[]",
            "in": "query",
            "description": "List of gifts.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Gift",
              "type": "array",
              "description": "List of gifts.",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "gift_min",
            "in": "query",
            "description": "Minimum number of gifts.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Gift Min",
              "type": "integer",
              "minimum": 0,
              "description": "Minimum number of gifts."
            }
          },
          {
            "name": "gift_max",
            "in": "query",
            "description": "Maximum number of gifts.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Gift Max",
              "type": "integer",
              "minimum": 0,
              "description": "Maximum number of gifts."
            }
          },
          {
            "name": "recently_hours_min",
            "in": "query",
            "description": "Minimum number of recently played hours.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Recently Hours Min",
              "type": "integer",
              "minimum": 0,
              "description": "Minimum number of recently played hours."
            }
          },
          {
            "name": "recently_hours_max",
            "in": "query",
            "description": "Maximum number of recently played hours.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Recently Hours Max",
              "type": "integer",
              "minimum": 0,
              "description": "Maximum number of recently played hours."
            }
          },
          {
            "$ref": "#/components/parameters/country"
          },
          {
            "$ref": "#/components/parameters/not_country"
          },
          {
            "name": "csgo_profile_rank_min",
            "in": "query",
            "description": "Minimum CS2 rank.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Cs2 Profile Rank Min",
              "type": "integer",
              "minimum": 1,
              "maximum": 40,
              "description": "Minimum CS2 rank."
            }
          },
          {
            "name": "csgo_profile_rank_max",
            "in": "query",
            "description": "Maximum CS2 rank.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Cs2 Profile Rank Max",
              "type": "integer",
              "minimum": 1,
              "maximum": 40,
              "description": "Maximum CS2 rank."
            }
          },
          {
            "name": "solommr_min",
            "in": "query",
            "description": "Minimum number of Dota 2 MMR.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "SoloMMR Min",
              "type": "integer",
              "minimum": 0,
              "description": "Minimum number of Dota 2 MMR."
            }
          },
          {
            "name": "solommr_max",
            "in": "query",
            "description": "Maximum number of Dota 2 MMR.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "SoloMMR Max",
              "type": "integer",
              "minimum": 0,
              "description": "Maximum number of Dota 2 MMR."
            }
          },
          {
            "name": "d2_game_count_min",
            "in": "query",
            "description": "Minimum number of Dota 2 games.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "D2 Game Count Min",
              "type": "integer",
              "minimum": 0,
              "description": "Minimum number of Dota 2 games."
            }
          },
          {
            "name": "d2_game_count_max",
            "in": "query",
            "description": "Maximum number of Dota 2 games.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "D2 Game Count Max",
              "type": "integer",
              "minimum": 0,
              "description": "Maximum number of Dota 2 games."
            }
          },
          {
            "name": "d2_win_count_min",
            "in": "query",
            "description": "Minimum number of Dota 2 wins.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "D2 Win Count Min",
              "type": "integer",
              "minimum": 0,
              "description": "Minimum number of Dota 2 wins."
            }
          },
          {
            "name": "d2_win_count_max",
            "in": "query",
            "description": "Maximum number of Dota 2 wins.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "D2 Win Count Max",
              "type": "integer",
              "minimum": 0,
              "description": "Maximum number of Dota 2 wins."
            }
          },
          {
            "name": "d2_behavior_min",
            "in": "query",
            "description": "Minimum number of Dota 2 behavior.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "D2 Behavior Min",
              "type": "integer",
              "minimum": 0,
              "maximum": 12000,
              "description": "Minimum number of Dota 2 behavior."
            }
          },
          {
            "name": "d2_behavior_max",
            "in": "query",
            "description": "Maximum number of Dota 2 behavior.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "D2 Behavior Max",
              "type": "integer",
              "minimum": 0,
              "maximum": 12000,
              "description": "Maximum number of Dota 2 behavior."
            }
          },
          {
            "name": "faceit_lvl_min",
            "in": "query",
            "description": "Minimum FACEIT level.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Faceit Lvl Min",
              "type": "integer",
              "minimum": 1,
              "maximum": 10,
              "description": "Minimum FACEIT level."
            }
          },
          {
            "name": "faceit_lvl_max",
            "in": "query",
            "description": "Maximum FACEIT level.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Faceit Lvl Max",
              "type": "integer",
              "minimum": 1,
              "maximum": 10,
              "description": "Maximum FACEIT level."
            }
          },
          {
            "name": "points_min",
            "in": "query",
            "description": "Minimum number of Steam points.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Points Min",
              "type": "integer",
              "minimum": 0,
              "description": "Minimum number of Steam points."
            }
          },
          {
            "name": "points_max",
            "in": "query",
            "description": "Maximum number of Steam points.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Points Max",
              "type": "integer",
              "minimum": 0,
              "description": "Maximum number of Steam points."
            }
          },
          {
            "name": "relevant_gmin",
            "in": "query",
            "description": "Minimum number of relevant games.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Relevant Gmin",
              "type": "integer",
              "minimum": 0,
              "description": "Minimum number of relevant games."
            }
          },
          {
            "name": "relevant_gmax",
            "in": "query",
            "description": "Maximum number of relevant games.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Relevant Gmax",
              "type": "integer",
              "minimum": 0,
              "description": "Maximum number of relevant games."
            }
          },
          {
            "$ref": "#/components/parameters/last_trans_date"
          },
          {
            "$ref": "#/components/parameters/last_trans_date_period"
          },
          {
            "name": "last_trans_date_later",
            "in": "query",
            "description": "How new is last transaction.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Last Trans Date Later",
              "type": "integer",
              "minimum": 0,
              "description": "How new is last transaction."
            }
          },
          {
            "name": "last_trans_date_period_later",
            "in": "query",
            "description": "In what notation is time measured.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Last Trans Date Period Later",
              "$ref": "#/components/schemas/DatePeriodModel"
            }
          },
          {
            "$ref": "#/components/parameters/no_trans"
          },
          {
            "name": "trans",
            "in": "query",
            "description": "Has transactions.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Trans",
              "type": "integer",
              "description": "Has transactions.",
              "enum": [
                1
              ]
            }
          },
          {
            "name": "has_activated_keys",
            "in": "query",
            "description": "Has activated keys.",
            "required": false,
            "schema": {
              "type": "integer",
              "enum": [
                1
              ]
            }
          },
          {
            "name": "elo_min",
            "in": "query",
            "description": "Minimum Premier ELO in CS2.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Elo Min",
              "type": "integer",
              "minimum": 0,
              "maximum": 50000,
              "description": "Minimum Premier ELO in CS2."
            }
          },
          {
            "name": "elo_max",
            "in": "query",
            "description": "Maximum Premier ELO in CS2.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Elo Max",
              "type": "integer",
              "minimum": 0,
              "maximum": 50000,
              "description": "Maximum Premier ELO in CS2."
            }
          },
          {
            "name": "cs2_map_rank",
            "in": "query",
            "description": "Map for rank in CS2.\n+ 1 - Dust II\n+ 2 - Mirage\n+ 3 - Train\n+ 4 - Nuke\n+ 5 - Overpass\n+ 6 - Inferno\n+ 7 - Ancient\n+ 8 - Vertigo\n+ 9 - Anubis\n+ 10 - Office",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Cs2 Map Rank",
              "type": "integer",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
              ]
            }
          },
          {
            "name": "cs2_map_rmin",
            "in": "query",
            "description": "Minimum rank in CS2 on a certain map.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Cs2 Map Rank Min",
              "type": "integer",
              "minimum": 1,
              "maximum": 18,
              "description": "Minimum rank in CS2 on a certain map."
            }
          },
          {
            "name": "cs2_map_rmax",
            "in": "query",
            "description": "Maximum rank in CS2 on a certain map.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Cs2 Map Rank Max",
              "type": "integer",
              "minimum": 1,
              "maximum": 18,
              "description": "Maximum rank in CS2 on a certain map."
            }
          },
          {
            "name": "rust_deaths_min",
            "in": "query",
            "description": "Minimum number of Rust deaths",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "description": "Minimum number of Rust deaths"
            }
          },
          {
            "name": "rust_deaths_max",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Maximum number of Rust deaths",
            "schema": {
              "type": "integer",
              "description": "Maximum number of Rust deaths"
            }
          },
          {
            "name": "rust_kills_min",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Minimum number of Rust kills",
            "schema": {
              "type": "integer",
              "description": "Minimum number of Rust kills"
            }
          },
          {
            "name": "rust_kills_max",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Maximum number of Rust kills",
            "schema": {
              "type": "integer",
              "description": "Maximum number of Rust kills"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/fortnite": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "Fortnite",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.Fortnite",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "name": "email_type[]",
            "in": "query",
            "description": "Email type.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email Type",
              "description": "Email type.",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "market",
                  "autoreg",
                  "native",
                  "no"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/temp_email"
          },
          {
            "$ref": "#/components/parameters/item_domain"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "name": "eg",
            "in": "query",
            "description": "Guarantee type.\n+ **-1** - 12 hours\n+ **0** - 24 hours\n+ **1** - 3 days\n+ **2** - Guarantee at the time of purchase",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Extended Guarantee",
              "type": "integer",
              "description": "Guarantee type.\n+ **-1** - 12 hours\n+ **0** - 24 hours\n+ **1** - 3 days\n+ **2** - Guarantee at the time of purchase",
              "enum": [
                -1,
                0,
                1,
                2
              ]
            }
          },
          {
            "$ref": "#/components/parameters/smin"
          },
          {
            "$ref": "#/components/parameters/smax"
          },
          {
            "name": "vbmin",
            "in": "query",
            "description": "Minimum number of V-Bucks.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Vbmin",
              "type": "integer",
              "minimum": 0,
              "description": "Minimum number of V-Bucks."
            }
          },
          {
            "name": "vbmax",
            "in": "query",
            "description": "Maximum number of V-Bucks.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Vbmax",
              "type": "integer",
              "minimum": 0,
              "description": "Maximum number of V-Bucks."
            }
          },
          {
            "name": "skin[]",
            "in": "query",
            "description": "Skins.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Skin",
              "type": "array",
              "description": "Skins.",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pickaxe[]",
            "in": "query",
            "description": "Pickaxes.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Pickaxe",
              "type": "array",
              "description": "Pickaxes.",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "glider[]",
            "in": "query",
            "description": "Gliders.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Glider",
              "type": "array",
              "description": "Gliders.",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "dance[]",
            "in": "query",
            "description": "Dances.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Dance",
              "type": "array",
              "description": "Pickaxes.",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "$ref": "#/components/parameters/change_email"
          },
          {
            "name": "platform[]",
            "in": "query",
            "description": "Platform.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Platform",
              "type": "string",
              "description": "Platform.",
              "enum": [
                "Epic",
                "EpicAndroid",
                "EpicPC",
                "EpicPCKorea",
                "GooglePlay",
                "IOSAppStore",
                "Live",
                "Nintendo",
                "PSN",
                "Samsung",
                "xbl"
              ]
            }
          },
          {
            "name": "bp",
            "in": "query",
            "description": "Has Battle Pass.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Bp",
              "description": "Has Battle Pass.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "$ref": "#/components/parameters/lmin"
          },
          {
            "$ref": "#/components/parameters/lmax"
          },
          {
            "name": "bp_lmin",
            "in": "query",
            "description": "Minimum level of Battle Pass.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Bp Lmin",
              "description": "Minimum level of Battle Pass.",
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "bp_lmax",
            "in": "query",
            "description": "Maximum level of Battle Pass.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Bp Lmax",
              "description": "Maximum level of Battle Pass.",
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "$ref": "#/components/parameters/last_trans_date"
          },
          {
            "$ref": "#/components/parameters/last_trans_date_period"
          },
          {
            "$ref": "#/components/parameters/no_trans"
          },
          {
            "name": "xbox_linkable",
            "in": "query",
            "description": "Can be linked to Xbox.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Xbox Linkable",
              "description": "Can be linked to Xbox.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "name": "psn_linkable",
            "in": "query",
            "description": "Can be linked to PSN.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Psn Linkable",
              "description": "Can be linked to PSN.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "$ref": "#/components/parameters/daybreak"
          },
          {
            "name": "rl_purchases",
            "in": "query",
            "description": "Has Rocket League purchases.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "RL Purchases",
              "type": "integer",
              "description": "Has Rocket League purchases.",
              "enum": [
                1
              ]
            }
          },
          {
            "$ref": "#/components/parameters/reg"
          },
          {
            "$ref": "#/components/parameters/reg_period"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/vkontakte": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "Vkontakte",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.VK",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "name": "vk_country[]",
            "in": "query",
            "description": "List of allowed countries.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Vk Country",
              "type": "array",
              "description": "List of allowed countries.",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "vk_city[]",
            "in": "query",
            "description": "List of allowed cities.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Vk City",
              "type": "array",
              "description": "List of allowed cities.",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "vk_friend_min",
            "in": "query",
            "description": "Minimum number of friends.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Vk Friend Min",
              "description": "Minimum number of friends.",
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "vk_friend_max",
            "in": "query",
            "description": "Maximum number of friends.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Vk Friend Max",
              "description": "Maximum number of friends.",
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "vk_follower_min",
            "in": "query",
            "description": "Minimum number of followers.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Vk Follower Min",
              "type": "integer",
              "description": "Minimum number of followers.",
              "minimum": 0
            }
          },
          {
            "name": "vk_follower_max",
            "in": "query",
            "description": "Maximum number of followers.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Vk Follower Max",
              "type": "integer",
              "description": "Maximum number of followers.",
              "minimum": 0
            }
          },
          {
            "name": "vk_vote_min",
            "in": "query",
            "description": "Minimum number of votes.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Vk Vote Min",
              "type": "integer",
              "description": "Minimum number of votes.",
              "minimum": 0
            }
          },
          {
            "name": "vk_vote_max",
            "in": "query",
            "description": "Maximum number of votes.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Vk Vote Max",
              "type": "integer",
              "description": "Maximum number of votes.",
              "minimum": 0
            }
          },
          {
            "name": "sex",
            "in": "query",
            "description": "Sex of account.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Sex",
              "type": "string",
              "description": "Sex of account.",
              "enum": [
                "man",
                "woman"
              ]
            }
          },
          {
            "name": "tel",
            "in": "query",
            "description": "Has linked mobile.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Tel",
              "type": "string",
              "description": "Has linked mobile.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "$ref": "#/components/parameters/email"
          },
          {
            "name": "tfa",
            "in": "query",
            "description": "Has enabled 2FA.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Tfa",
              "type": "string",
              "description": "Has enabled 2FA.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "name": "relation[]",
            "in": "query",
            "description": "Relationship.\n+ 0 - Not specified\n+ 1 - Not married\n+ 2 - There is a friend/girlfriend\n+ 3 - Engaged\n+ 4 - Married\n+ 5 - Everything is complicated\n+ 6 - In active search\n+ 7 - In love\n+ 8 - In a civil marriage",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Relation",
              "type": "array",
              "description": "Relationship.",
              "uniqueItems": true,
              "items": {
                "type": "integer",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7,
                  8
                ]
              }
            }
          },
          {
            "name": "token_auth_only",
            "in": "query",
            "description": "Login into account by token only.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Token Auth Only",
              "type": "string",
              "description": "Login into account by token only.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "name": "group_follower_min",
            "in": "query",
            "description": "Minimum number of group followers.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Group Follower Min",
              "type": "integer",
              "description": "Minimum number of group followers.",
              "minimum": 1
            }
          },
          {
            "name": "group_follower_max",
            "in": "query",
            "description": "Maximum number of group followers.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Group Follower Max",
              "type": "integer",
              "description": "Maximum number of group followers.",
              "minimum": 1
            }
          },
          {
            "name": "groups_min",
            "in": "query",
            "description": "Minimum number of groups.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Groups Min",
              "type": "integer",
              "description": "Minimum number of groups.",
              "minimum": 0
            }
          },
          {
            "name": "groups_max",
            "in": "query",
            "description": "Maximum number of groups.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Groups Max",
              "type": "integer",
              "description": "Maximum number of groups.",
              "minimum": 0
            }
          },
          {
            "name": "admin_level",
            "in": "query",
            "description": "Admin level.\n+ 1 - Moderator\n+ 2 - Editor\n+ 3 - Admin\n+ 4 - Owner",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Admin Level",
              "type": "integer",
              "description": "Admin level.",
              "enum": [
                1,
                2,
                3,
                4
              ]
            }
          },
          {
            "name": "min_age",
            "in": "query",
            "description": "Minimum age.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Min Age",
              "type": "integer",
              "description": "Minimum age.",
              "minimum": 0
            }
          },
          {
            "name": "max_age",
            "in": "query",
            "description": "Maximum age.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Max Age",
              "type": "integer",
              "description": "Maximum age.",
              "minimum": 0
            }
          },
          {
            "name": "dig_min",
            "in": "query",
            "description": "Minimum number of digits in ID.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Dig Min",
              "type": "integer",
              "description": "Minimum number of digits in ID.",
              "minimum": 4,
              "maximum": 13
            }
          },
          {
            "name": "dig_max",
            "in": "query",
            "description": "Maximum number of digits in ID.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Dig Max",
              "type": "integer",
              "description": "Maximum number of digits in ID.",
              "minimum": 4,
              "maximum": 14
            }
          },
          {
            "name": "conversations_min",
            "in": "query",
            "description": "Minimum number of conversations.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Conversations Min",
              "type": "integer",
              "description": "Minimum number of conversations.",
              "minimum": 0
            }
          },
          {
            "name": "conversations_max",
            "in": "query",
            "description": "Maximum number of conversations.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Conversations Max",
              "type": "integer",
              "description": "Maximum number of conversations.",
              "minimum": 0
            }
          },
          {
            "$ref": "#/components/parameters/reg"
          },
          {
            "$ref": "#/components/parameters/reg_period"
          },
          {
            "name": "mcountry[]",
            "in": "query",
            "description": "List of allowed countries of phone number.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "M Country",
              "type": "array",
              "description": "List of allowed countries of phone number.",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "not_mcountry[]",
            "in": "query",
            "description": "List of excluded countries of phone number.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Not M Country",
              "type": "array",
              "description": "List of excluded countries of phone number.",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "opened_profile",
            "in": "query",
            "description": "Opened account profile.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Opened Profile",
              "type": "integer",
              "description": "Opened account profile.",
              "enum": [
                1
              ]
            }
          },
          {
            "$ref": "#/components/parameters/verified"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/mihoyo": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "miHoYo",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.MiHoYo",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "name": "email_type[]",
            "in": "query",
            "description": "Email type.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email Type",
              "description": "Email type.",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "autoreg",
                  "native",
                  "no"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/item_domain"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "$ref": "#/components/parameters/email"
          },
          {
            "name": "ea",
            "in": "query",
            "description": "Has linked external accounts.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Ea",
              "description": "Has linked external accounts.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Region.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Region",
              "type": "string",
              "description": "Region.",
              "enum": [
                "asia",
                "cht",
                "eu",
                "usa"
              ]
            }
          },
          {
            "name": "genshin_character[]",
            "in": "query",
            "description": "List of characters.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Character",
              "type": "array",
              "description": "List of characters.",
              "items": {
                "type": "integer",
                "enum": [
                  10000002,
                  10000003,
                  10000005,
                  10000006,
                  10000007,
                  10000014,
                  10000015,
                  10000016,
                  10000020,
                  10000021,
                  10000022,
                  10000023,
                  10000024,
                  10000025,
                  10000026,
                  10000027,
                  10000029,
                  10000030,
                  10000031,
                  10000032,
                  10000033,
                  10000034,
                  10000035,
                  10000036,
                  10000037,
                  10000038,
                  10000039,
                  10000041,
                  10000042,
                  10000043,
                  10000044,
                  10000045,
                  10000046,
                  10000047,
                  10000048,
                  10000049,
                  10000050,
                  10000051,
                  10000052,
                  10000053,
                  10000054,
                  10000055,
                  10000056,
                  10000057,
                  10000058,
                  10000059,
                  10000060,
                  10000061,
                  10000062,
                  10000063,
                  10000064,
                  10000065,
                  10000066,
                  10000067,
                  10000068,
                  10000069,
                  10000070,
                  10000071,
                  10000072,
                  10000073,
                  10000074,
                  10000075,
                  10000076,
                  10000077,
                  10000078,
                  10000079,
                  10000080,
                  10000081,
                  10000082,
                  10000083,
                  10000084,
                  10000085,
                  10000086,
                  10000087,
                  10000088,
                  10000089,
                  10000090,
                  10000091,
                  10000092,
                  10000093
                ]
              }
            }
          },
          {
            "name": "genshin_weapon[]",
            "in": "query",
            "description": "List of weapons.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Weapon",
              "type": "array",
              "description": "List of weapons.",
              "items": {
                "type": "integer",
                "enum": [
                  11101,
                  11201,
                  11301,
                  11302,
                  11303,
                  11304,
                  11305,
                  11306,
                  11401,
                  11402,
                  11403,
                  11404,
                  11405,
                  11406,
                  11407,
                  11408,
                  11409,
                  11410,
                  11412,
                  11413,
                  11414,
                  11415,
                  11416,
                  11417,
                  11418,
                  11422,
                  11424,
                  11425,
                  11426,
                  11427,
                  11428,
                  11501,
                  11502,
                  11503,
                  11504,
                  11505,
                  11509,
                  11510,
                  11511,
                  11512,
                  11513,
                  12101,
                  12201,
                  12301,
                  12302,
                  12303,
                  12305,
                  12306,
                  12401,
                  12402,
                  12403,
                  12404,
                  12405,
                  12406,
                  12407,
                  12408,
                  12409,
                  12410,
                  12411,
                  12412,
                  12414,
                  12415,
                  12416,
                  12417,
                  12418,
                  12424,
                  12425,
                  12426,
                  12427,
                  12501,
                  12502,
                  12503,
                  12504,
                  12510,
                  12511,
                  12512,
                  13101,
                  13201,
                  13301,
                  13302,
                  13303,
                  13401,
                  13402,
                  13403,
                  13404,
                  13405,
                  13406,
                  13407,
                  13408,
                  13409,
                  13414,
                  13415,
                  13416,
                  13417,
                  13419,
                  13424,
                  13425,
                  13427,
                  13501,
                  13502,
                  13504,
                  13505,
                  13507,
                  13509,
                  13511,
                  14101,
                  14201,
                  14301,
                  14302,
                  14303,
                  14304,
                  14305,
                  14401,
                  14402,
                  14403,
                  14404,
                  14405,
                  14406,
                  14407,
                  14408,
                  14409,
                  14410,
                  14412,
                  14413,
                  14414,
                  14415,
                  14416,
                  14417,
                  14424,
                  14425,
                  14426,
                  14501,
                  14502,
                  14504,
                  14505,
                  14506,
                  14509,
                  14511,
                  14512,
                  14513,
                  14514,
                  14515,
                  15101,
                  15201,
                  15301,
                  15302,
                  15303,
                  15304,
                  15305,
                  15401,
                  15402,
                  15403,
                  15404,
                  15405,
                  15406,
                  15407,
                  15408,
                  15409,
                  15410,
                  15411,
                  15412,
                  15413,
                  15414,
                  15415,
                  15416,
                  15417,
                  15418,
                  15419,
                  15424,
                  15425,
                  15427,
                  15501,
                  15502,
                  15503,
                  15507,
                  15508,
                  15509,
                  15511,
                  15512
                ]
              }
            }
          },
          {
            "name": "genshin_char_min",
            "in": "query",
            "description": "Minimum number of characters.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Char Min",
              "type": "integer",
              "description": "Minimum number of characters.",
              "minimum": 1
            }
          },
          {
            "name": "genshin_char_max",
            "in": "query",
            "description": "Maximum number of characters.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Char Max",
              "type": "integer",
              "description": "Maximum number of characters.",
              "minimum": 1
            }
          },
          {
            "name": "genshin_legendary_min",
            "in": "query",
            "description": "Minimum number of legendary characters.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Legendary Min",
              "type": "integer",
              "description": "Minimum number of legendary characters.",
              "minimum": 0
            }
          },
          {
            "name": "genshin_legendary_max",
            "in": "query",
            "description": "Maximum number of legendary characters.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Legendary Max",
              "type": "integer",
              "description": "Maximum number of legendary characters.",
              "minimum": 0
            }
          },
          {
            "name": "genshin_level_min",
            "in": "query",
            "description": "Minimum level.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Level Min",
              "type": "integer",
              "description": "Minimum level.",
              "minimum": 1
            }
          },
          {
            "name": "genshin_level_max",
            "in": "query",
            "description": "Maximum level.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Level Max",
              "type": "integer",
              "description": "Maximum level.",
              "minimum": 1
            }
          },
          {
            "name": "genshin_legendary_weapon_min",
            "in": "query",
            "description": "Minimum number of legendary weapon characters.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Legendary Weapon Min",
              "type": "integer",
              "description": "Minimum number of legendary weapon characters.",
              "minimum": 0
            }
          },
          {
            "name": "genshin_legendary_weapon_max",
            "in": "query",
            "description": "Maximum number of legendary weapon characters.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Legendary Weapon Max",
              "type": "integer",
              "description": "Maximum number of legendary weapon characters.",
              "minimum": 0
            }
          },
          {
            "name": "constellations_min",
            "in": "query",
            "description": "Minimum number of constellations on legendary characters.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Constellations Min",
              "type": "integer",
              "description": "Minimum number of constellations on legendary characters.",
              "minimum": 0
            }
          },
          {
            "name": "constellations_max",
            "in": "query",
            "description": "Maximum number of constellations on legendary characters.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Constellations Max",
              "type": "integer",
              "description": "Maximum number of constellations on legendary characters.",
              "minimum": 0
            }
          },
          {
            "name": "genshin_achievement_min",
            "in": "query",
            "description": "Minimum number of achievements.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Achievements Min",
              "type": "integer",
              "description": "Minimum number of achievements.",
              "minimum": 0
            }
          },
          {
            "name": "genshin_achievement_max",
            "in": "query",
            "description": "Maximum number of achievements.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Achievements Max",
              "type": "integer",
              "description": "Maximum number of achievements.",
              "minimum": 0
            }
          },
          {
            "name": "honkai_character[]",
            "in": "query",
            "description": "List of characters.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Character",
              "type": "array",
              "description": "List of characters.",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "honkai_weapon[]",
            "in": "query",
            "description": "List of weapons.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Weapon",
              "type": "array",
              "description": "List of weapons.",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "honkai_char_min",
            "in": "query",
            "description": "Minimum number of characters.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Char Min",
              "type": "integer",
              "description": "Minimum number of characters.",
              "minimum": 1
            }
          },
          {
            "name": "honkai_char_max",
            "in": "query",
            "description": "Maximum number of characters.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Char Max",
              "type": "integer",
              "description": "Maximum number of characters.",
              "minimum": 1
            }
          },
          {
            "name": "honkai_legendary_min",
            "in": "query",
            "description": "Minimum number of legendary characters.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Legendary Min",
              "type": "integer",
              "description": "Minimum number of legendary characters.",
              "minimum": 0
            }
          },
          {
            "name": "honkai_legendary_max",
            "in": "query",
            "description": "Maximum number of legendary characters.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Legendary Max",
              "type": "integer",
              "description": "Maximum number of legendary characters.",
              "minimum": 0
            }
          },
          {
            "name": "honkai_level_min",
            "in": "query",
            "description": "Minimum level.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Level Min",
              "type": "integer",
              "description": "Minimum level.",
              "minimum": 1
            }
          },
          {
            "name": "honkai_level_max",
            "in": "query",
            "description": "Maximum level.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Level Max",
              "type": "integer",
              "description": "Maximum level.",
              "minimum": 1
            }
          },
          {
            "name": "honkai_legendary_weapon_min",
            "in": "query",
            "description": "Minimum number of legendary weapon characters.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Legendary Weapon Min",
              "type": "integer",
              "description": "Minimum number of legendary weapon characters.",
              "minimum": 0
            }
          },
          {
            "name": "honkai_legendary_weapon_max",
            "in": "query",
            "description": "Maximum number of legendary weapon characters.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Legendary Weapon Max",
              "type": "integer",
              "description": "Maximum number of legendary weapon characters.",
              "minimum": 0
            }
          },
          {
            "name": "eidolons_min",
            "in": "query",
            "description": "Minimum number of constellations on Honkai: Star Rail legendary characters.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Constellations Max",
              "type": "integer",
              "description": "Minimum number of constellations on Honkai: Star Rail legendary characters.",
              "minimum": 0
            }
          },
          {
            "name": "eidolons_max",
            "in": "query",
            "description": "Maximum number of legendary Honkai: Star Rail weapon characters.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Achievements Min",
              "type": "integer",
              "description": "Maximum number of legendary Honkai: Star Rail weapon characters.",
              "minimum": 0
            }
          },
          {
            "name": "honkai_achievement_min",
            "in": "query",
            "description": "Minimum number of achievements.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Achievements Min",
              "type": "integer",
              "description": "Minimum number of achievements.",
              "minimum": 0
            }
          },
          {
            "name": "honkai_achievement_max",
            "in": "query",
            "description": "Maximum number of achievements.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Achievements Max",
              "type": "integer",
              "description": "Maximum number of achievements.",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/valorant": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "Valorant",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.Valorant",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "name": "email_type[]",
            "in": "query",
            "description": "Email type.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email Type",
              "description": "Email type.",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "autoreg",
                  "native",
                  "no"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/item_domain"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "name": "weaponSkin[]",
            "in": "query",
            "description": "List of weapon skins.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Weapon Skin",
              "type": "array",
              "description": "List of weapon skins.",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "knife",
            "in": "query",
            "description": "Has any knife.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Knife",
              "type": "integer",
              "description": "Has any knife.",
              "enum": [
                1,
                0
              ]
            }
          },
          {
            "name": "buddy[]",
            "in": "query",
            "description": "List of buddies.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Buddy",
              "type": "array",
              "description": "List of buddies.",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "agent[]",
            "in": "query",
            "description": "List of agents.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Agent",
              "type": "array",
              "description": "List of agents.",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "$ref": "#/components/parameters/country"
          },
          {
            "$ref": "#/components/parameters/not_country"
          },
          {
            "$ref": "#/components/parameters/daybreak"
          },
          {
            "name": "level_min",
            "in": "query",
            "description": "Minimum level.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Level Min",
              "type": "integer",
              "description": "Minimum level.",
              "minimum": 1
            }
          },
          {
            "name": "level_max",
            "in": "query",
            "description": "Maximum level.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Level Max",
              "type": "integer",
              "description": "Maximum level.",
              "minimum": 1
            }
          },
          {
            "name": "inv_min",
            "in": "query",
            "description": "Minimum inventory value.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Inv Min",
              "type": "integer",
              "description": "Minimum inventory value.",
              "minimum": 0
            }
          },
          {
            "name": "inv_max",
            "in": "query",
            "description": "Maximum inventory value.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Inv Max",
              "type": "integer",
              "description": "Maximum inventory value.",
              "minimum": 0
            }
          },
          {
            "name": "vp_min",
            "in": "query",
            "description": "Minimum number of Valorant points.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Vp Min",
              "type": "integer",
              "description": "Minimum number of Valorant points.",
              "minimum": 0
            }
          },
          {
            "name": "vp_max",
            "in": "query",
            "description": "Maximum number of Valorant points.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Vp Max",
              "type": "integer",
              "description": "Maximum number of Valorant points.",
              "minimum": 0
            }
          },
          {
            "$ref": "#/components/parameters/smin"
          },
          {
            "$ref": "#/components/parameters/smax"
          },
          {
            "name": "rmin",
            "in": "query",
            "description": "Minimum rank.\n+ 3/4/5 - Iron 1/2/3\n+ 6/7/8 - Bronze 1/2/3\n+ 9/10/11 - Silver 1/2/3\n+ 12/13/14 - Gold 1/2/3\n+ 15/16/17 - Platinum 1/2/3\n+ 18/19/20 - Diamond 1/2/3\n+ 21/22/23 - Ascendant 1/2/3\n+ 24/25/26 - Immortal 1/2/3\n+ 27 - Radiant",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "R Min",
              "type": "integer",
              "description": "Minimum rank.\n+ 3/4/5 - Iron 1/2/3\n+ 6/7/8 - Bronze 1/2/3\n+ 9/10/11 - Silver 1/2/3\n+ 12/13/14 - Gold 1/2/3\n+ 15/16/17 - Platinum 1/2/3\n+ 18/19/20 - Diamond 1/2/3\n+ 21/22/23 - Ascendant 1/2/3\n+ 24/25/26 - Immortal 1/2/3\n+ 27 - Radiant",
              "minimum": 3,
              "maximum": 27
            }
          },
          {
            "name": "rmax",
            "in": "query",
            "description": "Maximum rank.\n+ 3/4/5 - Iron 1/2/3\n+ 6/7/8 - Bronze 1/2/3\n+ 9/10/11 - Silver 1/2/3\n+ 12/13/14 - Gold 1/2/3\n+ 15/16/17 - Platinum 1/2/3\n+ 18/19/20 - Diamond 1/2/3\n+ 21/22/23 - Ascendant 1/2/3\n+ 24/25/26 - Immortal 1/2/3\n+ 27 - Radiant",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "R Max",
              "type": "integer",
              "description": "Maximum rank.\n+ 3/4/5 - Iron 1/2/3\n+ 6/7/8 - Bronze 1/2/3\n+ 9/10/11 - Silver 1/2/3\n+ 12/13/14 - Gold 1/2/3\n+ 15/16/17 - Platinum 1/2/3\n+ 18/19/20 - Diamond 1/2/3\n+ 21/22/23 - Ascendant 1/2/3\n+ 24/25/26 - Immortal 1/2/3\n+ 27 - Radiant",
              "minimum": 3,
              "maximum": 27
            }
          },
          {
            "name": "last_rmin",
            "in": "query",
            "description": "Last minimum rank.\n+ 3/4/5 - Iron 1/2/3\n+ 6/7/8 - Bronze 1/2/3\n+ 9/10/11 - Silver 1/2/3\n+ 12/13/14 - Gold 1/2/3\n+ 15/16/17 - Platinum 1/2/3\n+ 18/19/20 - Diamond 1/2/3\n+ 21/22/23 - Ascendant 1/2/3\n+ 24/25/26 - Immortal 1/2/3\n+ 27 - Radiant",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Last R Min",
              "type": "integer",
              "description": "Last minimum rank.\n+ 3/4/5 - Iron 1/2/3\n+ 6/7/8 - Bronze 1/2/3\n+ 9/10/11 - Silver 1/2/3\n+ 12/13/14 - Gold 1/2/3\n+ 15/16/17 - Platinum 1/2/3\n+ 18/19/20 - Diamond 1/2/3\n+ 21/22/23 - Ascendant 1/2/3\n+ 24/25/26 - Immortal 1/2/3\n+ 27 - Radiant",
              "minimum": 3,
              "maximum": 27
            }
          },
          {
            "name": "last_rmax",
            "in": "query",
            "description": "Last maximum rank.\n+ 3/4/5 - Iron 1/2/3\n+ 6/7/8 - Bronze 1/2/3\n+ 9/10/11 - Silver 1/2/3\n+ 12/13/14 - Gold 1/2/3\n+ 15/16/17 - Platinum 1/2/3\n+ 18/19/20 - Diamond 1/2/3\n+ 21/22/23 - Ascendant 1/2/3\n+ 24/25/26 - Immortal 1/2/3\n+ 27 - Radiant",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Last R Max",
              "type": "integer",
              "description": "Maximum rank.\n+ 3/4/5 - Iron 1/2/3\n+ 6/7/8 - Bronze 1/2/3\n+ 9/10/11 - Silver 1/2/3\n+ 12/13/14 - Gold 1/2/3\n+ 15/16/17 - Platinum 1/2/3\n+ 18/19/20 - Diamond 1/2/3\n+ 21/22/23 - Ascendant 1/2/3\n+ 24/25/26 - Immortal 1/2/3\n+ 27 - Radiant",
              "minimum": 3,
              "maximum": 27
            }
          },
          {
            "name": "rank_type",
            "in": "query",
            "description": "Rank type.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Rank Type",
              "type": "string",
              "description": "Rank type.",
              "enum": [
                "ranked",
                "ranked_ready",
                "unrated"
              ]
            }
          },
          {
            "name": "amin",
            "in": "query",
            "description": "Minimum amount of agents.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "A Min",
              "type": "integer",
              "description": "Minimum amount of agents.",
              "minimum": 0
            }
          },
          {
            "name": "amax",
            "in": "query",
            "description": "Maximum amount of agents.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "A Max",
              "type": "integer",
              "description": "Maximum amount of agents.",
              "minimum": 0
            }
          },
          {
            "name": "region[]",
            "in": "query",
            "description": "Region.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Region",
              "type": "array",
              "description": "Region.",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "eu",
                  "ap",
                  "kr",
                  "na",
                  "br",
                  "la"
                ]
              }
            }
          },
          {
            "name": "not_region[]",
            "in": "query",
            "description": "Exclude region.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Not Region",
              "type": "array",
              "description": "Exclude region.",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "eu",
                  "ap",
                  "kr",
                  "na",
                  "br",
                  "la"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/email"
          },
          {
            "$ref": "#/components/parameters/tel"
          },
          {
            "$ref": "#/components/parameters/changeable_email"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/league-of-legends": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "League of Legends",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.LoL",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "name": "email_type[]",
            "in": "query",
            "description": "Email type.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email Type",
              "description": "Email type.",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "autoreg",
                  "native",
                  "no"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/item_domain"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "name": "lvl_min",
            "in": "query",
            "description": "Minimum level.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Lvl Min",
              "type": "integer",
              "description": "Minimum level.",
              "minimum": 1
            }
          },
          {
            "name": "lvl_max",
            "in": "query",
            "description": "Maximum level.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Lvl Max",
              "type": "integer",
              "description": "Maximum level.",
              "minimum": 1
            }
          },
          {
            "name": "winrate_min",
            "in": "query",
            "description": "Minimum winrate.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Winrate Min",
              "type": "integer",
              "description": "Minimum winrate.",
              "minimum": 0
            }
          },
          {
            "name": "winrate_max",
            "in": "query",
            "description": "Maximum winrate.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Winrate Max",
              "type": "integer",
              "description": "Maximum winrate.",
              "minimum": 0
            }
          },
          {
            "name": "wallet_blue_min",
            "in": "query",
            "description": "Minimum wallet blue balance.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Wallet Blue Min",
              "type": "integer",
              "description": "Minimum wallet blue balance.",
              "minimum": 0
            }
          },
          {
            "name": "wallet_blue_max",
            "in": "query",
            "description": "Maximum wallet blue balance.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Wallet Blue Max",
              "type": "integer",
              "description": "Maximum wallet blue balance.",
              "minimum": 0
            }
          },
          {
            "name": "wallet_orange_min",
            "in": "query",
            "description": "Minimum wallet orange balance.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Wallet Orange Min",
              "type": "integer",
              "description": "Minimum wallet orange balance.",
              "minimum": 0
            }
          },
          {
            "name": "wallet_orange_max",
            "in": "query",
            "description": "Maximum wallet orange balance.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Wallet Orange Max",
              "type": "integer",
              "description": "Maximum wallet orange balance.",
              "minimum": 0
            }
          },
          {
            "name": "wallet_mythic_min",
            "in": "query",
            "description": "Minimum wallet mythic balance.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Wallet Mythic Min",
              "type": "integer",
              "description": "Minimum wallet mythic balance.",
              "minimum": 0
            }
          },
          {
            "name": "wallet_mythic_max",
            "in": "query",
            "description": "Maximum wallet mythic balance.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Wallet Mythic Max",
              "type": "integer",
              "description": "Maximum wallet mythic balance.",
              "minimum": 0
            }
          },
          {
            "name": "wallet_riot_min",
            "in": "query",
            "description": "Minimum wallet riot balance.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Wallet Riot Min",
              "type": "integer",
              "description": "Minimum wallet riot balance.",
              "minimum": 0
            }
          },
          {
            "name": "wallet_riot_max",
            "in": "query",
            "description": "Maximum wallet riot balance.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Wallet Riot Max",
              "type": "integer",
              "description": "Maximum wallet riot balance.",
              "minimum": 0
            }
          },
          {
            "name": "skin[]",
            "in": "query",
            "description": "List of skins.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Skin",
              "type": "array",
              "description": "List of skins.",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "champion[]",
            "in": "query",
            "description": "List of champions.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Champion",
              "type": "array",
              "description": "List of champions.",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "$ref": "#/components/parameters/country"
          },
          {
            "name": "region[]",
            "in": "query",
            "description": "Region.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Region",
              "type": "array",
              "description": "Region.",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "la1",
                  "la2",
                  "br1",
                  "euw1",
                  "tr1",
                  "na1",
                  "eun1",
                  "ru",
                  "oc1",
                  "jp1",
                  "ph2",
                  "vn2",
                  "th2",
                  "sg2"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/daybreak"
          },
          {
            "$ref": "#/components/parameters/tel"
          },
          {
            "name": "mail",
            "in": "query",
            "description": "Has confirmed email.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Mail",
              "description": "Has confirmed email.",
              "$ref": "#/components/schemas/YesNoNM"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/telegram": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "Telegram",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.Telegram",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "name": "spam",
            "in": "query",
            "description": "Has a spam ban.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Spam",
              "description": "Has a spam ban.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "Has a cloud password.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Password",
              "type": "string",
              "description": "Has a cloud password.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "$ref": "#/components/parameters/premium"
          },
          {
            "name": "premium_expiration",
            "in": "query",
            "description": "When premium subscription will be active",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Premium Expiration",
              "type": "integer",
              "description": "When premium subscription will be active"
            }
          },
          {
            "name": "premium_expiration_period",
            "in": "query",
            "description": "In what notation is time measured",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Premium Expiration",
              "type": "string",
              "description": "In what notation is time measured",
              "enum": [
                "day",
                "month",
                "year"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/country"
          },
          {
            "$ref": "#/components/parameters/not_country"
          },
          {
            "$ref": "#/components/parameters/daybreak"
          },
          {
            "name": "min_channels",
            "in": "query",
            "description": "Minimum number of channels.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Min Channels",
              "type": "integer",
              "description": "Minimum number of channels.",
              "minimum": 0
            }
          },
          {
            "name": "max_channels",
            "in": "query",
            "description": "Maximum number of channels.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Max Channels",
              "type": "integer",
              "description": "Maximum number of channels.",
              "minimum": 0
            }
          },
          {
            "name": "min_chats",
            "in": "query",
            "description": "Minimum number of chats.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Min Chats",
              "type": "integer",
              "description": "Minimum number of chats.",
              "minimum": 0
            }
          },
          {
            "name": "max_chats",
            "in": "query",
            "description": "Maximum number of chats.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Max Chats",
              "type": "integer",
              "description": "Maximum number of chats.",
              "minimum": 0
            }
          },
          {
            "name": "min_conversations",
            "in": "query",
            "description": "Minimum number of conversations.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Min Conversations",
              "type": "integer",
              "description": "Minimum number of conversations.",
              "minimum": 0
            }
          },
          {
            "name": "max_conversations",
            "in": "query",
            "description": "Maximum number of conversations.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Max Conversations",
              "type": "integer",
              "description": "Maximum number of conversations.",
              "minimum": 0
            }
          },
          {
            "name": "min_admin",
            "in": "query",
            "description": "Minimum number of channels, where account is administrator/owner.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Min Admin",
              "type": "integer",
              "description": "Minimum number of channels, where account is administrator/owner.",
              "minimum": 0
            }
          },
          {
            "name": "max_admin",
            "in": "query",
            "description": "Maximum number of channels, where account is administrator/owner.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Max Admin",
              "type": "integer",
              "description": "Maximum number of channels, where account is administrator/owner.",
              "minimum": 0
            }
          },
          {
            "name": "min_admin_sub",
            "in": "query",
            "description": "Minimum number of subscribers in channel, where account is administrator/owner.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Min Admin Sub",
              "type": "integer",
              "description": "Minimum number of subscribers in channel, where account is administrator/owner.",
              "minimum": 1
            }
          },
          {
            "name": "max_admin_sub",
            "in": "query",
            "description": "Maximum number of subscribers in channel, where account is administrator/owner.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Max Admin Sub",
              "type": "integer",
              "description": "Maximum number of subscribers in channel, where account is administrator/owner.",
              "minimum": 1
            }
          },
          {
            "name": "dig_min",
            "in": "query",
            "description": "Minimum number of digits in ID.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Dig Min",
              "type": "integer",
              "description": "Minimum number of digits in ID.",
              "minimum": 1
            }
          },
          {
            "name": "dig_max",
            "in": "query",
            "description": "Maximum number of digits in ID.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Dig Max",
              "type": "integer",
              "description": "Maximum number of digits in ID.",
              "minimum": 1
            }
          },
          {
            "name": "min_contacts",
            "in": "query",
            "description": "Minimum number of contacts.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Minimum number of contacts",
              "type": "integer",
              "description": "Minimum number of contacts.",
              "minimum": 0
            }
          },
          {
            "name": "max_contacts",
            "in": "query",
            "description": "Maximum number of contacts.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Maximum number of contacts",
              "type": "integer",
              "description": "Maximum number of contacts.",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/supercell": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "Supercell",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.Supercell",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "$ref": "#/components/parameters/daybreak"
          },
          {
            "name": "email_type[]",
            "in": "query",
            "description": "Email type.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email Type",
              "description": "Email type.",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "autoreg",
                  "native",
                  "no"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/item_domain"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "name": "eg",
            "in": "query",
            "description": "Guarantee type.\n+ **-1** - 12 hours\n+ **0** - 24 hours\n+ **1** - 3 days\n+ **2** - Guarantee at the time of purchase",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Extended Guarantee",
              "type": "integer",
              "description": "Guarantee type.\n+ **-1** - 12 hours\n+ **0** - 24 hours\n+ **1** - 3 days\n+ **2** - Guarantee at the time of purchase",
              "enum": [
                -1,
                0,
                1,
                2
              ]
            }
          },
          {
            "name": "system",
            "in": "query",
            "description": "Account service.\n+ laser - Brawl Stars\n+ scroll - Clash Royale\n+ magic - Clash Of Clans",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "System",
              "type": "string",
              "description": "Account service.",
              "enum": [
                "laser",
                "scroll",
                "magic"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/lmin"
          },
          {
            "$ref": "#/components/parameters/lmax"
          },
          {
            "name": "cup_min",
            "in": "query",
            "description": "Minimum number of cups.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Cup Min",
              "type": "integer",
              "description": "Minimum number of cups.",
              "minimum": 1
            }
          },
          {
            "name": "cup_max",
            "in": "query",
            "description": "Maximum number of cups.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Cup Max",
              "type": "integer",
              "description": "Maximum number of cups.",
              "minimum": 1
            }
          },
          {
            "name": "brawlers_min",
            "in": "query",
            "description": "Minimum number of brawlers.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Brawlers Min",
              "type": "integer",
              "description": "Minimum number of brawlers.",
              "minimum": 1
            }
          },
          {
            "name": "brawlers_max",
            "in": "query",
            "description": "Maximum number of brawlers.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Brawlers Max",
              "type": "integer",
              "description": "Maximum number of brawlers.",
              "minimum": 1
            }
          },
          {
            "name": "brawler[]",
            "in": "query",
            "description": "List of brawlers.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Brawler",
              "type": "array",
              "description": "List of brawlers.",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "LARRY & LAWRIE",
                  "KIT",
                  "MICO",
                  "CHARLIE",
                  "CHUCK",
                  "PEARL",
                  "DOUG",
                  "CORDELIUS",
                  "HANK",
                  "MAISIE",
                  "WILLOW",
                  "R-T",
                  "MANDY",
                  "GRAY",
                  "CHESTER",
                  "BUSTER",
                  "GUS",
                  "SAM",
                  "OTIS",
                  "BONNIE",
                  "JANET",
                  "EVE",
                  "FANG",
                  "LOLA",
                  "MEG",
                  "ASH",
                  "GRIFF",
                  "BUZZ",
                  "GROM",
                  "SQUEAK",
                  "BELLE",
                  "STU",
                  "RUFFS",
                  "EDGAR",
                  "BYRON",
                  "LOU",
                  "AMBER",
                  "COLETTE",
                  "SURGE",
                  "SPROUT",
                  "NANI",
                  "GALE",
                  "JACKY",
                  "MAX",
                  "MR. P",
                  "EMZ",
                  "BEA",
                  "SANDY",
                  "8-BIT",
                  "BIBI",
                  "CARL",
                  "ROSA",
                  "LEON",
                  "TICK",
                  "GENE",
                  "FRANK",
                  "PENNY",
                  "DARRYL",
                  "TARA",
                  "PAM",
                  "PIPER",
                  "BO",
                  "POCO",
                  "CROW",
                  "MORTIS",
                  "EL PRIMO",
                  "DYNAMIKE",
                  "NITA",
                  "JESSIE",
                  "BARLEY",
                  "SPIKE",
                  "RICO",
                  "BROCK",
                  "BULL",
                  "COLT",
                  "SHELLY"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/origin": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "Origin",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.Origin",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "name": "email_type[]",
            "in": "query",
            "description": "Email type.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email Type",
              "description": "Email type.",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "autoreg",
                  "native",
                  "no"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/item_domain"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "$ref": "#/components/parameters/game_int"
          },
          {
            "$ref": "#/components/parameters/country"
          },
          {
            "$ref": "#/components/parameters/not_country"
          },
          {
            "name": "al_rank_group[]",
            "in": "query",
            "description": "List of Apex Legends rank groups.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Al Rank Group",
              "type": "array",
              "description": "List of Apex Legends rank groups.",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "Rookie",
                  "Bronze",
                  "Silver",
                  "Gold",
                  "Platinum",
                  "Diamond",
                  "Master"
                ]
              }
            }
          },
          {
            "name": "al_level_min",
            "in": "query",
            "description": "Minimum level in Apex Legends.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Al Level Min",
              "type": "integer",
              "description": "Minimum level in Apex Legends.",
              "minimum": 1
            }
          },
          {
            "name": "al_level_max",
            "in": "query",
            "description": "Maximum level in Apex Legends.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Al Level Max",
              "type": "integer",
              "description": "Maximum level in Apex Legends.",
              "minimum": 1
            }
          },
          {
            "name": "xbox_connected",
            "in": "query",
            "description": "Xbox connected to account.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Xbox Connected",
              "type": "string",
              "description": "Xbox connected to account.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "name": "steam_connected",
            "in": "query",
            "description": "Steam connected to account.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Steam Connected",
              "type": "string",
              "description": "Steam connected to account.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "name": "subscription",
            "in": "query",
            "description": "Name of subscription.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Subscription",
              "type": "string",
              "description": "Name of subscription.",
              "enum": [
                "EA Play",
                "EA Play Pro"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/subscription_length"
          },
          {
            "$ref": "#/components/parameters/subscription_period"
          },
          {
            "$ref": "#/components/parameters/daybreak"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/world-of-tanks": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "World of Tanks",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.WoT",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "name": "email_type[]",
            "in": "query",
            "description": "Email type.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email Type",
              "description": "Email type.",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "autoreg",
                  "native",
                  "no"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/item_domain"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "$ref": "#/components/parameters/tel"
          },
          {
            "$ref": "#/components/parameters/daybreak"
          },
          {
            "$ref": "#/components/parameters/wargaming_battles_min"
          },
          {
            "$ref": "#/components/parameters/wargaming_battles_max"
          },
          {
            "$ref": "#/components/parameters/wargaming_gold_min"
          },
          {
            "$ref": "#/components/parameters/wargaming_gold_max"
          },
          {
            "$ref": "#/components/parameters/wargaming_silver_min"
          },
          {
            "$ref": "#/components/parameters/wargaming_silver_max"
          },
          {
            "$ref": "#/components/parameters/wargaming_top_min"
          },
          {
            "$ref": "#/components/parameters/wargaming_top_max"
          },
          {
            "$ref": "#/components/parameters/wargaming_prem_min"
          },
          {
            "$ref": "#/components/parameters/wargaming_prem_max"
          },
          {
            "$ref": "#/components/parameters/wargaming_top_prem_min"
          },
          {
            "$ref": "#/components/parameters/wargaming_top_prem_max"
          },
          {
            "$ref": "#/components/parameters/wargaming_win_pmin"
          },
          {
            "$ref": "#/components/parameters/wargaming_win_pmax"
          },
          {
            "$ref": "#/components/parameters/wargaming_tank"
          },
          {
            "$ref": "#/components/parameters/wargaming_region"
          },
          {
            "$ref": "#/components/parameters/wargaming_not_region"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/wot-blitz": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "WoT Blitz",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.WoTBlitz",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "name": "email_type[]",
            "in": "query",
            "description": "Email type.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email Type",
              "description": "Email type.",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "autoreg",
                  "native",
                  "no"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/item_domain"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "$ref": "#/components/parameters/tel"
          },
          {
            "$ref": "#/components/parameters/daybreak"
          },
          {
            "$ref": "#/components/parameters/wargaming_battles_min"
          },
          {
            "$ref": "#/components/parameters/wargaming_battles_max"
          },
          {
            "$ref": "#/components/parameters/wargaming_gold_min"
          },
          {
            "$ref": "#/components/parameters/wargaming_gold_max"
          },
          {
            "$ref": "#/components/parameters/wargaming_silver_min"
          },
          {
            "$ref": "#/components/parameters/wargaming_silver_max"
          },
          {
            "$ref": "#/components/parameters/wargaming_top_min"
          },
          {
            "$ref": "#/components/parameters/wargaming_top_max"
          },
          {
            "$ref": "#/components/parameters/wargaming_prem_min"
          },
          {
            "$ref": "#/components/parameters/wargaming_prem_max"
          },
          {
            "$ref": "#/components/parameters/wargaming_top_prem_min"
          },
          {
            "$ref": "#/components/parameters/wargaming_top_prem_max"
          },
          {
            "$ref": "#/components/parameters/wargaming_win_pmin"
          },
          {
            "$ref": "#/components/parameters/wargaming_win_pmax"
          },
          {
            "$ref": "#/components/parameters/wargaming_tank"
          },
          {
            "$ref": "#/components/parameters/wargaming_region"
          },
          {
            "$ref": "#/components/parameters/wargaming_not_region"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/epicgames": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "Epic Games",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.EpicGames",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "name": "email_type[]",
            "in": "query",
            "description": "Email type.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email Type",
              "description": "Email type.",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "market",
                  "autoreg",
                  "native",
                  "no"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/item_domain"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "name": "eg",
            "in": "query",
            "description": "Guarantee type.\n+ **-1** - 12 hours\n+ **0** - 24 hours\n+ **1** - 3 days\n+ **2** - Guarantee at the time of purchase",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Extended Guarantee",
              "type": "integer",
              "description": "Guarantee type.\n+ **-1** - 12 hours\n+ **0** - 24 hours\n+ **1** - 3 days\n+ **2** - Guarantee at the time of purchase",
              "enum": [
                -1,
                0,
                1,
                2
              ]
            }
          },
          {
            "$ref": "#/components/parameters/game"
          },
          {
            "$ref": "#/components/parameters/change_email"
          },
          {
            "name": "rl_purchases",
            "in": "query",
            "description": "Has Rocket League purchases.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "RL Purchases",
              "type": "integer",
              "description": "Has Rocket League purchases.",
              "enum": [
                1
              ]
            }
          },
          {
            "name": "sc",
            "in": "query",
            "description": "Has login data for Social Club account.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Sc",
              "type": "integer",
              "description": "Has login data for Social Club account.",
              "enum": [
                1
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/escape-from-tarkov": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "Escape from Tarkov",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.EscapeFromTarkov",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "name": "email_type[]",
            "in": "query",
            "description": "Email type.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email Type",
              "description": "Email type.",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "autoreg",
                  "native",
                  "no"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/item_domain"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "name": "region",
            "in": "query",
            "description": "Region.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Region",
              "type": "string",
              "description": "Region.",
              "enum": [
                "cis",
                "eu",
                "as",
                "us"
              ]
            }
          },
          {
            "name": "version[]",
            "in": "query",
            "description": "List of versions.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Version",
              "type": "array",
              "description": "List of versions.",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "standard",
                  "left_behind",
                  "prepare_for_escape",
                  "edge_of_darkness"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/socialclub": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "Social Club",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.SocialClub",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "name": "rdr2",
            "in": "query",
            "description": "Has Red Dead Redemption 2.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Rdr2",
              "type": "string",
              "description": "Has Red Dead Redemption 2.",
              "enum": [
                "on"
              ]
            }
          },
          {
            "name": "gtav",
            "in": "query",
            "description": "Has GTA 5.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Gtav",
              "type": "string",
              "description": "Has GTA 5.",
              "enum": [
                "on"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/daybreak"
          },
          {
            "name": "level_min",
            "in": "query",
            "description": "Minimum number of Social Club level.",
            "schema": {
              "type": "integer",
              "description": "Minimum number of Social Club level."
            }
          },
          {
            "name": "level_max",
            "in": "query",
            "description": "Maximum number of Social Club level.",
            "schema": {
              "type": "integer",
              "description": "Maximum number of Social Club level."
            }
          },
          {
            "name": "cash_min",
            "in": "query",
            "description": "Minimum number of GTA V cash",
            "schema": {
              "type": "integer",
              "description": "inimum number of GTA V cash"
            }
          },
          {
            "name": "cash_max",
            "in": "query",
            "description": "Maximum number of GTA V cash",
            "schema": {
              "type": "integer",
              "description": "Maximum number of GTA V cash"
            }
          },
          {
            "name": "bank_cash_min",
            "in": "query",
            "description": "Minimum number of GTA V bank cash",
            "schema": {
              "type": "integer",
              "description": "Minimum number of GTA V bank cash"
            }
          },
          {
            "name": "bank_cash_max",
            "in": "query",
            "description": "Maximum number of GTA V bank cash",
            "schema": {
              "type": "integer",
              "description": "Maximum number of GTA V bank cash"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/uplay": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "Uplay",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.Uplay",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "name": "email_type[]",
            "in": "query",
            "description": "Email type.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email Type",
              "description": "Email type.",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "autoreg",
                  "native",
                  "no"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/item_domain"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "$ref": "#/components/parameters/game_int"
          },
          {
            "$ref": "#/components/parameters/country"
          },
          {
            "$ref": "#/components/parameters/not_country"
          },
          {
            "$ref": "#/components/parameters/daybreak"
          },
          {
            "name": "r6_level_min",
            "in": "query",
            "description": "Minimum level in Tom Clancy's Rainbow Six Siege.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "R6 Level Min",
              "type": "integer",
              "description": "Minimum level in Tom Clancy's Rainbow Six Siege.",
              "minimum": 0
            }
          },
          {
            "name": "r6_level_max",
            "in": "query",
            "description": "Maximum level in Tom Clancy's Rainbow Six Siege.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "R6 Level Max",
              "type": "integer",
              "description": "Maximum level in Tom Clancy's Rainbow Six Siege.",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/war-thunder": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "War Thunder",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.WarThunder",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "name": "email_type[]",
            "in": "query",
            "description": "Email type.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email Type",
              "description": "Email type.",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "autoreg",
                  "native",
                  "no"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/item_domain"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "$ref": "#/components/parameters/daybreak"
          },
          {
            "$ref": "#/components/parameters/wargaming_gold_min"
          },
          {
            "$ref": "#/components/parameters/wargaming_gold_max"
          },
          {
            "$ref": "#/components/parameters/wargaming_silver_min"
          },
          {
            "$ref": "#/components/parameters/wargaming_silver_max"
          },
          {
            "$ref": "#/components/parameters/rank_min"
          },
          {
            "$ref": "#/components/parameters/rank_max"
          },
          {
            "name": "eliteUnits_min",
            "in": "query",
            "description": "Minimum number of elite units.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "EliteUnits Min",
              "type": "integer",
              "description": "Minimum number of elite units.",
              "minimum": 0
            }
          },
          {
            "name": "eliteUnits_max",
            "in": "query",
            "description": "Maximum number of elite units.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "EliteUnits Max",
              "type": "integer",
              "description": "Maximum number of elite units.",
              "minimum": 0
            }
          },
          {
            "name": "played_min",
            "in": "query",
            "description": "Minimum number of played games.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Played Min",
              "type": "integer",
              "description": "Minimum number of played games.",
              "minimum": 0
            }
          },
          {
            "name": "played_max",
            "in": "query",
            "description": "Maximum number of played games.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Played Max",
              "type": "integer",
              "description": "Maximum number of played games.",
              "minimum": 0
            }
          },
          {
            "name": "wins_min",
            "in": "query",
            "description": "Minimum number of wins.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Wins Min",
              "type": "integer",
              "description": "Minimum number of wins.",
              "minimum": 0
            }
          },
          {
            "name": "wins_max",
            "in": "query",
            "description": "Maximum number of wins.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Wins Max",
              "type": "integer",
              "description": "Maximum number of wins.",
              "minimum": 0
            }
          },
          {
            "name": "phone_verified",
            "in": "query",
            "description": "Has verified mobile.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Phone Verified",
              "description": "Has verified mobile.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "name": "email_verified",
            "in": "query",
            "description": "Has verified email.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email Verified",
              "description": "Has verified email.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "$ref": "#/components/parameters/premium"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/discord": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "Discord",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.Discord",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "name": "email_type[]",
            "in": "query",
            "description": "Email type.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email Type",
              "description": "Email type.",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "autoreg",
                  "native",
                  "no"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/item_domain"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "$ref": "#/components/parameters/tel"
          },
          {
            "name": "nitro",
            "in": "query",
            "description": "Has Nitro.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Nitro",
              "description": "Has Nitro.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "name": "billing",
            "in": "query",
            "description": "Has billing.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Billing",
              "description": "Has billing.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "name": "gifts",
            "in": "query",
            "description": "Has gifts.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Gifts",
              "description": "Has gifts.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "name": "quarantined",
            "in": "query",
            "description": "Is quarantined.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Quarantined",
              "description": "Is quarantined.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "name": "condition[]",
            "in": "query",
            "description": "List of account conditions.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Condition",
              "type": "array",
              "description": "List of account conditions.",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "empty",
                  "nospam",
                  "spam",
                  "cleaned"
                ]
              }
            }
          },
          {
            "name": "chat_min",
            "in": "query",
            "description": "Minimum number of chats.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Chat Min",
              "type": "integer",
              "description": "Minimum number of chats.",
              "minimum": 0
            }
          },
          {
            "name": "chat_max",
            "in": "query",
            "description": "Maximum number of chats.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Chat Max",
              "type": "integer",
              "description": "Maximum number of chats.",
              "minimum": 0
            }
          },
          {
            "$ref": "#/components/parameters/reg"
          },
          {
            "$ref": "#/components/parameters/reg_period"
          },
          {
            "name": "locale[]",
            "in": "query",
            "description": "List of regions.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Locale",
              "type": "array",
              "description": "List of regions.",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "not_locale[]",
            "in": "query",
            "description": "List of regions that won't be included.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Not Locale",
              "type": "array",
              "description": "List of regions that won't be included.",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/tiktok": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "TikTok",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.TikTok",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "name": "email_type[]",
            "in": "query",
            "description": "Email type.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email Type",
              "description": "Email type.",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "autoreg",
                  "native",
                  "no"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/item_domain"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "$ref": "#/components/parameters/tel"
          },
          {
            "$ref": "#/components/parameters/fmin"
          },
          {
            "$ref": "#/components/parameters/fmax"
          },
          {
            "$ref": "#/components/parameters/post_min"
          },
          {
            "$ref": "#/components/parameters/post_max"
          },
          {
            "name": "like_min",
            "in": "query",
            "description": "Minimum number of likes.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Like Min",
              "type": "integer",
              "description": "Minimum number of likes.",
              "minimum": 0
            }
          },
          {
            "name": "like_max",
            "in": "query",
            "description": "Maximum number of likes.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Like Max",
              "type": "integer",
              "description": "Maximum number of likes.",
              "minimum": 0
            }
          },
          {
            "name": "cookie_login",
            "in": "query",
            "description": "Login by cookies.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Cookie Login",
              "description": "Login by cookies.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "name": "verified",
            "in": "query",
            "description": "Has a verified badge.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Verified",
              "description": "Has a verified badge.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/instagram": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "Instagram",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.Instagram",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "name": "email_type[]",
            "in": "query",
            "description": "Email type.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email Type",
              "description": "Email type.",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "autoreg",
                  "native",
                  "no"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/item_domain"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "$ref": "#/components/parameters/tel"
          },
          {
            "$ref": "#/components/parameters/country"
          },
          {
            "$ref": "#/components/parameters/not_country"
          },
          {
            "$ref": "#/components/parameters/cookies"
          },
          {
            "name": "login_without_cookies",
            "in": "query",
            "description": "Login without cookies.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Login Without Cookies",
              "description": "Login without cookies.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "$ref": "#/components/parameters/fmin"
          },
          {
            "$ref": "#/components/parameters/fmax"
          },
          {
            "$ref": "#/components/parameters/post_min"
          },
          {
            "$ref": "#/components/parameters/post_max"
          },
          {
            "$ref": "#/components/parameters/reg"
          },
          {
            "$ref": "#/components/parameters/reg_period"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/battlenet": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "BattleNet",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.BattleNet",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "name": "email_type[]",
            "in": "query",
            "description": "Email type.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email Type",
              "description": "Email type.",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "native",
                  "no"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/item_domain"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "name": "eg",
            "in": "query",
            "description": "Guarantee type.\n+ **-1** - 12 hours\n+ **0** - 24 hours\n+ **1** - 3 days\n+ **2** - Guarantee at the time of purchase",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Extended Guarantee",
              "type": "integer",
              "description": "Guarantee type.\n+ **0** - 24 hours\n+ **1** - 3 days",
              "enum": [
                0,
                1
              ]
            }
          },
          {
            "$ref": "#/components/parameters/game_int"
          },
          {
            "$ref": "#/components/parameters/daybreak"
          },
          {
            "$ref": "#/components/parameters/country"
          },
          {
            "$ref": "#/components/parameters/not_country"
          },
          {
            "$ref": "#/components/parameters/tel"
          },
          {
            "name": "edit_btag",
            "in": "query",
            "description": "Can edit BattleTag.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Edit Btag",
              "description": "Can edit BattleTag.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "name": "changeable_fn",
            "in": "query",
            "description": "Can edit full name.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Changeable Fn",
              "description": "Can edit full name.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "name": "real_id",
            "in": "query",
            "description": "Real id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Real Id",
              "type": "string",
              "description": "Real id.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "name": "parent_control",
            "in": "query",
            "description": "Has disabled parent control.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Parent Control",
              "description": "Has disabled parent control.",
              "type": "integer",
              "enum": [
                0
              ]
            }
          },
          {
            "$ref": "#/components/parameters/lmin"
          },
          {
            "$ref": "#/components/parameters/lmax"
          },
          {
            "$ref": "#/components/parameters/balance_min"
          },
          {
            "$ref": "#/components/parameters/balance_max"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/vpn": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "VPN",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.Vpn",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "name": "service_id[]",
            "in": "query",
            "description": "List of allowed VPN services.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Service Id",
              "type": "array",
              "description": "List of allowed VPN services.",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "AdguardVPN",
                  "PIAVPN",
                  "mullvadVPN",
                  "pureVPN",
                  "ultraVPN",
                  "vanishVPN",
                  "windscribeVPN",
                  "zenmateVPN",
                  "zenmateVPNUltimate"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/subscription_length"
          },
          {
            "$ref": "#/components/parameters/subscription_period"
          },
          {
            "name": "renewable",
            "in": "query",
            "description": "Is renewable enabled.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Renewable",
              "description": "Is renewable enabled.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/cinema": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "Cinema",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.Cinema",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "name": "service_id[]",
            "in": "query",
            "description": "List of allowed cinema services.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Service Id",
              "type": "array",
              "description": "List of allowed cinema services.",
              "items": {
                "type": "string",
                "enum": [
                  "start"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/subscription_length"
          },
          {
            "$ref": "#/components/parameters/subscription_period"
          },
          {
            "name": "autorenewal",
            "in": "query",
            "description": "Is auto renewal enabled.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Renewable",
              "description": "Is auto renewal enabled.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/spotify": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "Spotify",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.Spotify",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "$ref": "#/components/parameters/country"
          },
          {
            "$ref": "#/components/parameters/not_country"
          },
          {
            "name": "family",
            "in": "query",
            "description": "Has family subscription.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Family",
              "description": "Has family subscription.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "name": "family_manager",
            "in": "query",
            "description": "Has family manager permissions.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Family",
              "description": "Has family manager permissions.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "name": "family_member_count_min",
            "in": "query",
            "description": "Minimum count of members in family.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Family Member Count Min",
              "type": "integer",
              "description": "Minimum count of members in family.",
              "minimum": 1
            }
          },
          {
            "name": "family_member_count_max",
            "in": "query",
            "description": "Maximum count of members in family.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Family Member Count Max",
              "type": "integer",
              "description": "Maximum count of members in family.",
              "minimum": 1
            }
          },
          {
            "$ref": "#/components/parameters/subscription_length"
          },
          {
            "$ref": "#/components/parameters/subscription_period"
          },
          {
            "name": "recurring",
            "in": "query",
            "description": "Is auto renewal enabled.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Recurring",
              "description": "Is auto renewal enabled.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "name": "trial",
            "in": "query",
            "description": "Trial subscription.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Trial",
              "description": "Trial subscription.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "name": "plan_name[]",
            "in": "query",
            "description": "List of allowed plans.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Plan Name",
              "type": "array",
              "description": "List of allowed plans.",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "Premium Fallback",
                  "Premium Student",
                  "Premium Duo",
                  "Premium Individual",
                  "Premium Family"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/warface": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "Warface",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.Warface",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "$ref": "#/components/parameters/rank_min"
          },
          {
            "$ref": "#/components/parameters/rank_max"
          },
          {
            "name": "bonus_rank_min",
            "in": "query",
            "description": "Minimum bonus rank.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Bonus Rank Min",
              "type": "integer",
              "description": "Minimum bonus rank.",
              "minimum": 0
            }
          },
          {
            "name": "bonus_rank_max",
            "in": "query",
            "description": "Maximum bonus rank.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Bonus Rank Max",
              "type": "integer",
              "description": "Maximum bonus rank.",
              "minimum": 0
            }
          },
          {
            "$ref": "#/components/parameters/tel"
          },
          {
            "$ref": "#/components/parameters/daybreak"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/youtube": {
      "get": {
        "tags": [
          "Category Search"
        ],
        "summary": "Youtube",
        "description": "Displays a list of accounts in a specific category according to your parameters.",
        "operationId": "Category.Youtube",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          },
          {
            "name": "brand",
            "in": "query",
            "description": "Is brand account.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Brand",
              "description": "Is brand account.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "name": "monetization",
            "in": "query",
            "description": "Has monetization.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Monetization",
              "description": "Has monetization.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "name": "artist",
            "in": "query",
            "description": "Has status artist.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Artist",
              "description": "Has status artist.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "$ref": "#/components/parameters/verified"
          },
          {
            "name": "password",
            "in": "query",
            "description": "Has password.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Password",
              "type": "string",
              "description": "Has password.",
              "$ref": "#/components/schemas/YesNoNoMatterScheme"
            }
          },
          {
            "name": "subscribes_min",
            "in": "query",
            "description": "Minimum subscribes.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Subscribes Min",
              "type": "integer",
              "description": "Minimum subscribes.",
              "minimum": 0
            }
          },
          {
            "name": "subscribes_max",
            "in": "query",
            "description": "Maximum subscribes.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Subscribes Max",
              "type": "integer",
              "description": "Maximum subscribes.",
              "minimum": 0
            }
          },
          {
            "name": "viewcount_min",
            "in": "query",
            "description": "Minimum views count.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "View Count Min",
              "type": "integer",
              "description": "Minimum views count.",
              "minimum": 0
            }
          },
          {
            "name": "viewcount_max",
            "in": "query",
            "description": "Maximum views count.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "View Count Max",
              "type": "integer",
              "description": "Maximum views count.",
              "minimum": 0
            }
          },
          {
            "name": "videocount_min",
            "in": "query",
            "description": "Minimum video count.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Video Count Min",
              "type": "integer",
              "description": "Minimum video count.",
              "minimum": 0
            }
          },
          {
            "name": "videocount_max",
            "in": "query",
            "description": "Maximum video count.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Video Count Max",
              "type": "integer",
              "description": "Maximum video count.",
              "minimum": 0
            }
          },
          {
            "$ref": "#/components/parameters/reg"
          },
          {
            "$ref": "#/components/parameters/reg_period"
          },
          {
            "name": "locale[]",
            "in": "query",
            "description": "List of regions.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Locale",
              "type": "array",
              "description": "List of regions.",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "BR",
                  "IT",
                  "RU",
                  "US"
                ]
              }
            }
          },
          {
            "name": "not_locale[]",
            "in": "query",
            "description": "List of regions that won't be included.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Not Locale",
              "type": "array",
              "description": "List of regions that won't be included.",
              "items": {
                "type": "string",
                "enum": [
                  "BR",
                  "IT",
                  "RU",
                  "US"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemListResponse"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/category": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get Categories",
        "description": "Display category list.",
        "operationId": "Category.List",
        "parameters": [
          {
            "name": "top_queries",
            "in": "query",
            "description": "Display top queries for per category.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Top Queries",
              "type": "boolean",
              "description": "Display top queries for per category."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Categories",
                  "required": [
                    "category",
                    "system_info"
                  ],
                  "type": "object",
                  "properties": {
                    "0": {
                      "title": "Category",
                      "required": [
                        "category_description",
                        "category_id",
                        "category_title",
                        "links",
                        "permissions"
                      ],
                      "type": "object",
                      "properties": {
                        "category_id": {
                          "title": "Category Id",
                          "type": "integer"
                        },
                        "category_title": {
                          "title": "Category Title",
                          "type": "string"
                        },
                        "category_description": {
                          "title": "Category Description",
                          "type": "string"
                        },
                        "links": {
                          "title": "Links",
                          "required": [
                            "detail",
                            "permalink",
                            "sub-categories",
                            "sub-forums"
                          ],
                          "type": "object",
                          "properties": {
                            "permalink": {
                              "title": "Permalink",
                              "type": "string"
                            },
                            "detail": {
                              "title": "Detail",
                              "type": "string"
                            },
                            "sub-categories": {
                              "title": "Sub-Categories",
                              "type": "string"
                            },
                            "sub-forums": {
                              "title": "Sub-Forums",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{categoryName}/params": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get Category Search Params",
        "description": "Displays search parameters for a category.",
        "operationId": "Category.Params",
        "parameters": [
          {
            "$ref": "#/components/parameters/categoryName"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Category",
                  "type": "object",
                  "properties": {
                    "category": {
                      "title": "Category",
                      "type": "object",
                      "properties": {
                        "category_id": {
                          "title": "Category",
                          "type": "integer"
                        },
                        "sub_category_id": {
                          "title": "Sub",
                          "type": "integer"
                        },
                        "category_order": {
                          "title": "Category",
                          "type": "integer"
                        },
                        "category_title": {
                          "title": "Category",
                          "type": "string"
                        },
                        "category_name": {
                          "title": "Category",
                          "type": "string"
                        },
                        "category_url": {
                          "title": "Category",
                          "type": "string"
                        },
                        "category_description_html": {
                          "title": "Category",
                          "type": "string"
                        },
                        "category_login_url": {
                          "title": "Category",
                          "type": "string"
                        },
                        "add_item_available": {
                          "title": "Add",
                          "type": "integer"
                        },
                        "mass_upload_item_available": {
                          "title": "Mass",
                          "type": "integer"
                        },
                        "has_guarantee": {
                          "title": "Has",
                          "type": "integer"
                        },
                        "has_account_link": {
                          "title": "Has",
                          "type": "integer"
                        },
                        "require_temp_email": {
                          "title": "Require",
                          "type": "integer"
                        },
                        "recovery_link": {
                          "title": "Recovery",
                          "type": "string"
                        },
                        "check_button_enabled": {
                          "title": "Check",
                          "type": "integer"
                        },
                        "checker_enabled": {
                          "title": "Checker",
                          "type": "integer"
                        },
                        "support_personal_proxy": {
                          "title": "Support",
                          "type": "integer"
                        },
                        "support_email_login_data": {
                          "title": "Support",
                          "type": "integer"
                        },
                        "require_email_login_data": {
                          "title": "Require",
                          "type": "integer"
                        },
                        "display_in_list": {
                          "title": "Display",
                          "type": "integer"
                        },
                        "category_description_html_en": {
                          "title": "Category",
                          "type": "string"
                        },
                        "category_h1_html_en": {
                          "title": "Category",
                          "type": "string"
                        },
                        "account_price_min": {
                          "title": "Account",
                          "type": "integer"
                        },
                        "require_video_recording": {
                          "title": "Require",
                          "type": "integer"
                        },
                        "top_queries": {
                          "title": "Top",
                          "type": "string"
                        },
                        "require_eld_for_native_accs": {
                          "title": "Require",
                          "type": "integer"
                        },
                        "can_be_resold": {
                          "title": "Can",
                          "type": "integer"
                        },
                        "proxy_type": {
                          "title": "Proxy",
                          "type": "string"
                        },
                        "support_temp_email": {
                          "title": "Support",
                          "type": "integer"
                        },
                        "cookies": {
                          "title": "Cookies",
                          "type": "string"
                        },
                        "login_type": {
                          "title": "Login",
                          "type": "string"
                        },
                        "guest_hidden": {
                          "title": "Guest",
                          "type": "integer"
                        },
                        "available_temp_email": {
                          "title": "Available",
                          "type": "integer"
                        },
                        "resale_duration_limit_days": {
                          "title": "Resale",
                          "type": "integer"
                        },
                        "buy_without_validation": {
                          "title": "Buy",
                          "type": "integer"
                        },
                        "max_invalid_upload_tries": {
                          "title": "Max",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "category_id",
                        "sub_category_id",
                        "category_order",
                        "category_title",
                        "category_name",
                        "category_url",
                        "category_description_html",
                        "category_login_url",
                        "add_item_available",
                        "mass_upload_item_available",
                        "has_guarantee",
                        "has_account_link",
                        "require_temp_email",
                        "recovery_link",
                        "check_button_enabled",
                        "checker_enabled",
                        "support_personal_proxy",
                        "support_email_login_data",
                        "require_email_login_data",
                        "display_in_list",
                        "category_description_html_en",
                        "category_h1_html_en",
                        "account_price_min",
                        "require_video_recording",
                        "top_queries",
                        "require_eld_for_native_accs",
                        "can_be_resold",
                        "proxy_type",
                        "support_temp_email",
                        "cookies",
                        "login_type",
                        "guest_hidden",
                        "available_temp_email",
                        "resale_duration_limit_days",
                        "buy_without_validation",
                        "max_invalid_upload_tries"
                      ]
                    },
                    "params": {
                      "title": "Params",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "title": "Name",
                            "type": "string"
                          },
                          "input": {
                            "title": "Input",
                            "type": "string"
                          },
                          "description": {
                            "title": "Description",
                            "type": "string"
                          },
                          "values": {
                            "title": "Values",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "name",
                          "input",
                          "description",
                          "values"
                        ]
                      }
                    },
                    "base_params": {
                      "title": "Base",
                      "type": "object",
                      "properties": {
                        "0": {
                          "title": "",
                          "type": "object",
                          "properties": {
                            "name": {
                              "title": "Name",
                              "type": "string"
                            },
                            "input": {
                              "title": "Input",
                              "type": "string"
                            },
                            "description": {
                              "title": "Description",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "input",
                            "description"
                          ]
                        }
                      },
                      "required": [
                        "0"
                      ]
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{categoryName}/games": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get Category Games",
        "description": "Displays a list of games in the category.",
        "operationId": "Category.Games",
        "parameters": [
          {
            "$ref": "#/components/parameters/categoryName"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "GamesModel",
                  "type": "object",
                  "properties": {
                    "games": {
                      "title": "Games",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "app_id": {
                            "title": "App",
                            "type": "string"
                          },
                          "title": {
                            "title": "Title",
                            "type": "string"
                          },
                          "abbr": {
                            "title": "Abbr",
                            "type": "string"
                          },
                          "category_id": {
                            "title": "Category",
                            "type": "integer"
                          },
                          "img": {
                            "title": "Img",
                            "type": "string"
                          },
                          "url": {
                            "title": "Url",
                            "type": "string"
                          },
                          "ru": {
                            "title": "Ru",
                            "type": "string"
                          }
                        },
                        "required": [
                          "app_id",
                          "title",
                          "abbr",
                          "category_id",
                          "img",
                          "url",
                          "ru"
                        ]
                      }
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/user/items": {
      "get": {
        "tags": [
          "Accounts list"
        ],
        "summary": "Get All Owned Accounts",
        "description": "Displays a list of owned accounts.",
        "operationId": "accountsList.getOwned",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "User id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "User id",
              "type": "integer",
              "description": "User id."
            }
          },
          {
            "$ref": "#/components/parameters/category_id"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/show"
          },
          {
            "$ref": "#/components/parameters/delete_reason"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "name": "login",
            "style": "form",
            "required": false,
            "in": "query",
            "description": "Login.",
            "explode": true,
            "schema": {
              "title": "Login",
              "type": "string",
              "description": "Login."
            }
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Order by.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Order By",
              "description": "Order by.",
              "type": "string",
              "enum": [
                "price_to_up",
                "price_to_down",
                "pdate_to_down",
                "pdate_to_down_upload",
                "pdate_to_up",
                "pdate_to_up_upload",
                "exp_auctions",
                "ddate_to_up",
                "ddate_to_down"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemListModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/user/orders": {
      "get": {
        "tags": [
          "Accounts list"
        ],
        "summary": "Get All Purchased Accounts",
        "description": "Displays a list of purchased accounts.",
        "operationId": "accountsList.getPurchased",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "User id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "User id",
              "type": "integer",
              "description": "User id."
            }
          },
          {
            "$ref": "#/components/parameters/category_id"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/show"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "name": "login",
            "style": "form",
            "required": false,
            "in": "query",
            "description": "Login.",
            "explode": true,
            "schema": {
              "title": "Login",
              "type": "string",
              "description": "Login."
            }
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemListModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/fave": {
      "get": {
        "tags": [
          "Accounts list"
        ],
        "summary": "Get All Favourites Accounts",
        "description": "Displays a list of favourites accounts.",
        "operationId": "accountsList.getFavorite",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/show"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemListModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/viewed": {
      "get": {
        "tags": [
          "Accounts list"
        ],
        "summary": "Get All Viewed Accounts",
        "description": "Displays a list of viewed accounts.",
        "operationId": "accountsList.getViewed",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/show"
          },
          {
            "$ref": "#/components/parameters/auction"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/origin"
          },
          {
            "$ref": "#/components/parameters/not_origin"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/sb"
          },
          {
            "$ref": "#/components/parameters/sb_by_me"
          },
          {
            "$ref": "#/components/parameters/nsb"
          },
          {
            "$ref": "#/components/parameters/nsb_by_me"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemListModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}": {
      "get": {
        "tags": [
          "Accounts managing"
        ],
        "summary": "Get Account",
        "description": "Displays account information.",
        "operationId": "accountsList.getInformation",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Accounts managing"
        ],
        "summary": "Delete Account",
        "description": "Deletes your account from public search. Deletion type is soft. You can restore account after deletion if you want.",
        "operationId": "accountsManaging.delete",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          },
          {
            "name": "reason",
            "in": "query",
            "description": "Delete reason.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Reason",
              "type": "string",
              "description": "Delete reason."
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/OkStatus"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionModel"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/steam-value": {
      "get": {
        "tags": [
          "Accounts managing"
        ],
        "summary": "Get Steam Inventory Value",
        "description": "Gets steam inventory value.",
        "operationId": "accountsManaging.getSteamInventoryValue",
        "parameters": [
          {
            "name": "link",
            "in": "query",
            "description": "Link or id of account. Can be [**https://lzt.market/{item-id}/**, **https://steamcommunity.com/id/{steam-name}**, **https://steamcommunity.com/profiles/{steam-id}**, **{steam-id}**].",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Link",
              "type": "string",
              "description": "Link or id of account. Can be [**https://lzt.market/{item-id}/**, **https://steamcommunity.com/id/{steam-name}**, **https://steamcommunity.com/profiles/{steam-id}**, **{steam-id}**]."
            }
          },
          {
            "$ref": "#/components/parameters/app_id"
          },
          {
            "$ref": "#/components/parameters/currency"
          },
          {
            "name": "ignore_cache",
            "in": "query",
            "description": "Ignore cache.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Ignore Cache",
              "type": "boolean",
              "description": "Ignore cache."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "title": "Query",
                      "type": "string"
                    },
                    "data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "items": {
                          "title": "Items",
                          "type": "object",
                          "properties": {
                            "0": {
                              "title": "",
                              "type": "object",
                              "properties": {
                                "classid": {
                                  "title": "Classid",
                                  "type": "string"
                                },
                                "tradable": {
                                  "title": "Tradable",
                                  "type": "integer"
                                },
                                "marketable": {
                                  "title": "Marketable",
                                  "type": "integer"
                                },
                                "image_url": {
                                  "title": "Image",
                                  "type": "string"
                                },
                                "title": {
                                  "title": "Title",
                                  "type": "string"
                                },
                                "price": {
                                  "title": "Price",
                                  "type": "number"
                                },
                                "count": {
                                  "title": "Count",
                                  "type": "integer"
                                },
                                "type": {
                                  "title": "Type",
                                  "type": "string"
                                },
                                "market_hash_name": {
                                  "title": "Market",
                                  "type": "string"
                                },
                                "fraudwarnings": {
                                  "title": "Fraudwarnings"
                                },
                                "stickers": {
                                  "title": "Stickers",
                                  "type": "object",
                                  "properties": {
                                    "stickerCount": {
                                      "title": "Sticker count",
                                      "type": "integer"
                                    },
                                    "count": {
                                      "title": "Count",
                                      "type": "integer"
                                    },
                                    "images": {
                                      "title": "Images",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "title": {
                                      "title": "Title",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "stickerCount",
                                    "count",
                                    "images",
                                    "title"
                                  ]
                                }
                              },
                              "required": [
                                "classid",
                                "tradable",
                                "marketable",
                                "image_url",
                                "title",
                                "price",
                                "count",
                                "type",
                                "market_hash_name",
                                "fraudwarnings",
                                "stickers"
                              ]
                            }
                          },
                          "required": [
                            "5710629964"
                          ]
                        },
                        "steam_id": {
                          "title": "Steam",
                          "type": "string"
                        },
                        "appId": {
                          "title": "App id",
                          "type": "integer"
                        },
                        "appTitle": {
                          "title": "App title",
                          "type": "string"
                        },
                        "totalValue": {
                          "title": "Total value",
                          "type": "number"
                        },
                        "itemCount": {
                          "title": "Item count",
                          "type": "integer"
                        },
                        "marketableItemCount": {
                          "title": "Marketable item count",
                          "type": "integer"
                        },
                        "currency": {
                          "title": "Currency",
                          "type": "string"
                        },
                        "currencyIcon": {
                          "title": "Currency icon",
                          "type": "string"
                        },
                        "language": {
                          "title": "Language",
                          "type": "string"
                        },
                        "time": {
                          "title": "Time",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "items",
                        "steam_id",
                        "appId",
                        "appTitle",
                        "totalValue",
                        "itemCount",
                        "marketableItemCount",
                        "currency",
                        "currencyIcon",
                        "language",
                        "time"
                      ]
                    },
                    "appId": {
                      "title": "App id",
                      "type": "integer"
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/steam-preview": {
      "get": {
        "tags": [
          "Accounts managing"
        ],
        "summary": "Get Steam HTML",
        "description": "Returns Steam account html code.",
        "operationId": "accountsList.getSteamHtml",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of page.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Type",
              "type": "string",
              "description": "Type of page.",
              "enum": [
                "profiles",
                "games"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "description": "Steam account html code."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionModel"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/edit": {
      "put": {
        "tags": [
          "Accounts managing"
        ],
        "summary": "Edit Account",
        "description": "Edits any details of account.\n\nAccount origin. Where did you get it from.\n+ brute - Account received using Bruteforce\n+ fishing - Account received from fishing page\n+ stealer - Account received from stealer logs\n+ autoreg - Account is automatically registered by a tool\n+ personal - Account is yours. You created it yourself\n+ resale - Account received from another seller\n+ retrive - Account is recovered by email or phone (only for VKontakte category)\n+ dummy - Dummy (empty) account (only for Steam category)",
        "operationId": "accountsManaging.edit",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "name": "title_en",
            "in": "query",
            "description": "English title of account. If **title_en** specified and **title** is empty, **title** will be automatically translated to Russian language.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Title En",
              "type": "string",
              "description": "English title of account. If **title_en** specified and **title** is empty, **title** will be automatically translated to Russian language."
            }
          },
          {
            "name": "price",
            "in": "query",
            "required": false,
            "description": "Current price of account in your currency.",
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Price",
              "type": "integer",
              "description": "Current price of account in your currency.",
              "minimum": 1
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Using currency for amount. Required if you are trying to change price field.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/CurrencyModel"
            }
          },
          {
            "name": "item_origin",
            "in": "query",
            "description": "Account origin. Where did you get it from.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Item Origin",
              "type": "string",
              "description": "Account origin. Where did you get it from.",
              "enum": [
                "brute",
                "fishing",
                "stealer",
                "personal",
                "resale",
                "autoreg",
                "dummy"
              ]
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Account public description.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Description",
              "type": "string",
              "description": "Account public description."
            }
          },
          {
            "name": "information",
            "in": "query",
            "description": "Account private information (visible for buyer only if purchased).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Information",
              "type": "string",
              "description": "Account private information (visible for buyer only if purchased)."
            }
          },
          {
            "name": "email_login_data",
            "in": "query",
            "description": "Email login data (email:password format).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email Login Data",
              "type": "string",
              "description": "Email login data (email:password format)."
            }
          },
          {
            "name": "email_type",
            "in": "query",
            "description": "Email type.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email Type",
              "type": "string",
              "description": "Email type.",
              "enum": [
                "native",
                "autoreg"
              ]
            }
          },
          {
            "name": "allow_ask_discount",
            "in": "query",
            "description": "Allow users to ask discount for this account.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Allow Ask Discount",
              "type": "boolean",
              "description": "Allow users to ask discount for this account."
            }
          },
          {
            "name": "proxy_id",
            "in": "query",
            "description": "Using proxy id for account checking. See GET or POST /proxy to get or edit proxy list.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Proxy Id",
              "type": "integer",
              "description": "Using proxy id for account checking. See GET or POST /proxy to get or edit proxy list."
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SaveChanges"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionModel"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/update-inventory": {
      "post": {
        "tags": [
          "Accounts managing"
        ],
        "summary": "Update Inventory Value",
        "description": "Update inventory value.",
        "operationId": "accountsManaging.updateInventoryValue",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          },
          {
            "$ref": "#/components/parameters/app_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Update Inventory Value 200",
                  "required": [
                    "status",
                    "item",
                    "system_info"
                  ],
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "ok"
                    },
                    "item": {
                      "$ref": "#/components/schemas/ItemModel"
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionModel"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/bump": {
      "post": {
        "tags": [
          "Accounts managing"
        ],
        "summary": "Bump Account",
        "description": "Bumps account in the search.",
        "operationId": "accountsManaging.bump",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/OkStatus"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionModel"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/auction": {
      "get": {
        "tags": [
          "Auction"
        ],
        "summary": "Get Auction",
        "description": "Display a list of bids in the auction.",
        "operationId": "auction.get",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/auction/bid": {
      "post": {
        "tags": [
          "Auction"
        ],
        "summary": "Place Bid",
        "description": "Create a new auction bid.",
        "operationId": "auction.placeBid",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          },
          {
            "$ref": "#/components/parameters/currency"
          },
          {
            "$ref": "#/components/parameters/amount"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Auction New Bid",
                  "type": "object",
                  "properties": {
                    "status": {
                      "title": "Status",
                      "type": "string"
                    },
                    "bid": {
                      "title": "Bid",
                      "type": "object",
                      "properties": {
                        "bid_id": {
                          "title": "Bid",
                          "type": "integer"
                        },
                        "bid_value": {
                          "title": "Bid",
                          "type": "object",
                          "properties": {
                            "rub": {
                              "title": "Rub",
                              "type": "string"
                            },
                            "uah": {
                              "title": "Uah",
                              "type": "string"
                            },
                            "kzt": {
                              "title": "Kzt",
                              "type": "string"
                            },
                            "byn": {
                              "title": "Byn",
                              "type": "string"
                            },
                            "usd": {
                              "title": "Usd",
                              "type": "string"
                            },
                            "eur": {
                              "title": "Eur",
                              "type": "string"
                            },
                            "gbp": {
                              "title": "Gbp",
                              "type": "string"
                            },
                            "cny": {
                              "title": "Cny",
                              "type": "string"
                            },
                            "try": {
                              "title": "Try",
                              "type": "string"
                            }
                          },
                          "required": [
                            "rub",
                            "uah",
                            "kzt",
                            "byn",
                            "usd",
                            "eur",
                            "gbp",
                            "cny",
                            "try"
                          ]
                        },
                        "minAllowedBidValue": {
                          "title": "Min allowed bid value",
                          "type": "object",
                          "properties": {
                            "rub": {
                              "title": "Rub",
                              "type": "integer"
                            },
                            "uah": {
                              "title": "Uah",
                              "type": "number"
                            },
                            "kzt": {
                              "title": "Kzt",
                              "type": "number"
                            },
                            "byn": {
                              "title": "Byn",
                              "type": "number"
                            },
                            "usd": {
                              "title": "Usd",
                              "type": "number"
                            },
                            "eur": {
                              "title": "Eur",
                              "type": "number"
                            },
                            "gbp": {
                              "title": "Gbp",
                              "type": "number"
                            },
                            "cny": {
                              "title": "Cny",
                              "type": "number"
                            },
                            "try": {
                              "title": "Try",
                              "type": "number"
                            }
                          },
                          "required": [
                            "rub",
                            "uah",
                            "kzt",
                            "byn",
                            "usd",
                            "eur",
                            "gbp",
                            "cny",
                            "try"
                          ]
                        },
                        "bid_previous_value": {
                          "title": "Bid",
                          "type": "object",
                          "properties": {
                            "rub": {
                              "title": "Rub",
                              "type": "string"
                            },
                            "uah": {
                              "title": "Uah",
                              "type": "string"
                            },
                            "kzt": {
                              "title": "Kzt",
                              "type": "string"
                            },
                            "byn": {
                              "title": "Byn",
                              "type": "string"
                            },
                            "usd": {
                              "title": "Usd",
                              "type": "string"
                            },
                            "eur": {
                              "title": "Eur",
                              "type": "string"
                            },
                            "gbp": {
                              "title": "Gbp",
                              "type": "string"
                            },
                            "cny": {
                              "title": "Cny",
                              "type": "string"
                            },
                            "try": {
                              "title": "Try",
                              "type": "string"
                            }
                          },
                          "required": [
                            "rub",
                            "uah",
                            "kzt",
                            "byn",
                            "usd",
                            "eur",
                            "gbp",
                            "cny",
                            "try"
                          ]
                        },
                        "user": {
                          "title": "User",
                          "type": "object",
                          "properties": {
                            "user_id": {
                              "title": "User",
                              "type": "integer"
                            },
                            "avatar": {
                              "title": "Avatar",
                              "type": "string"
                            },
                            "usernameHtml": {
                              "title": "Username html",
                              "type": "string"
                            }
                          },
                          "required": [
                            "user_id",
                            "avatar",
                            "usernameHtml"
                          ]
                        },
                        "bid_date": {
                          "title": "Bid",
                          "type": "integer"
                        },
                        "canCancelBid": {
                          "title": "Can cancel bid",
                          "type": "boolean"
                        },
                        "endTimeAuction": {
                          "title": "End time auction",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "bid_id",
                        "bid_value",
                        "minAllowedBidValue",
                        "bid_previous_value",
                        "user",
                        "bid_date",
                        "canCancelBid",
                        "endTimeAuction"
                      ]
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "description": "Error Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Auction Error Last Bid",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "Errors",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "default": "Your last bet has not yet been beaten by anyone."
                      }
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Auction"
        ],
        "summary": "Delete Bid",
        "description": "Delete your auction bid. You can delete your auction bid within 5 minutes.",
        "operationId": "auction.deleteBid",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          },
          {
            "$ref": "#/components/parameters/bidId"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Auction Bid Delete",
                  "type": "object",
                  "properties": {
                    "status": {
                      "title": "Status",
                      "type": "string",
                      "default": "ok"
                    },
                    "message": {
                      "title": "Message",
                      "type": "string",
                      "default": "The bid success deleted"
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "description": "Error Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Auction Error Time Expired",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "Errors",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "default": "The time to cancel the bid has expired"
                      }
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/fast-buy": {
      "post": {
        "tags": [
          "Account purchasing"
        ],
        "summary": "Fast Buy Account",
        "description": "Check and buy account.",
        "operationId": "accountsPurchasing.checkBuy",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          },
          {
            "$ref": "#/components/parameters/price"
          },
          {
            "name": "buy_without_validation",
            "in": "query",
            "description": "Put **1** if you want to buy account without account data validation (not safe).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Buy Without Validation",
              "type": "integer",
              "enum": [
                1
              ],
              "description": "Put **1** if you want to buy account without account data validation (not safe)."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FastBuyModel",
                  "required": [
                    "item",
                    "reserve_end_date",
                    "system_info"
                  ],
                  "type": "object",
                  "properties": {
                    "status": {
                      "title": "Status",
                      "type": "string",
                      "default": "ok"
                    },
                    "reserve_end_date": {
                      "title": "Reserve End Date",
                      "type": "integer"
                    },
                    "item": {
                      "$ref": "#/components/schemas/ItemModel"
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/ErrorModel"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/check-account": {
      "post": {
        "tags": [
          "Account purchasing"
        ],
        "summary": "Check Account",
        "description": "Checking account for validity. If the account is invalid, the purchase will be canceled automatically (you don't need to make request **POST /:itemId/cancel-reserve**).",
        "operationId": "accountsPurchasing.check",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "CheckAccBuyModel",
                  "required": [
                    "item",
                    "system_info"
                  ],
                  "type": "object",
                  "properties": {
                    "status": {
                      "title": "Status",
                      "type": "string",
                      "default": "ok"
                    },
                    "item": {
                      "$ref": "#/components/schemas/ItemModel"
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/ErrorModel"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/confirm-buy": {
      "post": {
        "tags": [
          "Account purchasing"
        ],
        "summary": "Confirm Buy",
        "description": "Confirm buy.",
        "operationId": "accountsPurchasing.confirmBuy",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          },
          {
            "name": "buy_without_validation",
            "in": "query",
            "description": "Put **1** if you want to buy account without account data validation (not safe).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Buy Without Validation",
              "type": "integer",
              "description": "Put **1** if you want to buy account without account data validation (not safe).",
              "enum": [
                1
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ConfirmBuyModel",
                  "required": [
                    "item",
                    "reserve_end_date",
                    "system_info"
                  ],
                  "type": "object",
                  "properties": {
                    "status": {
                      "title": "Status",
                      "type": "string",
                      "default": "ok"
                    },
                    "reserve_end_date": {
                      "title": "Reserve End Date",
                      "type": "integer"
                    },
                    "item": {
                      "title": "ItemLoginData",
                      "required": [
                        "loginData"
                      ],
                      "type": "object",
                      "properties": {
                        "loginData": {
                          "title": "LoginData",
                          "required": [
                            "adviceToChangePassword",
                            "encodedOldPassword",
                            "encodedPassword",
                            "encodedRaw",
                            "login",
                            "oldPassword",
                            "password",
                            "raw"
                          ],
                          "type": "object",
                          "properties": {
                            "raw": {
                              "title": "Raw",
                              "type": "string"
                            },
                            "encodedRaw": {
                              "title": "Encodedraw",
                              "type": "string"
                            },
                            "login": {
                              "title": "Login",
                              "type": "string"
                            },
                            "password": {
                              "title": "Password",
                              "type": "string"
                            },
                            "encodedPassword": {
                              "title": "Encodedpassword",
                              "type": "string"
                            },
                            "oldPassword": {
                              "title": "Oldpassword",
                              "type": "string"
                            },
                            "encodedOldPassword": {
                              "title": "Encodedoldpassword",
                              "type": "string"
                            },
                            "adviceToChangePassword": {
                              "title": "Advicetochangepassword",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/ErrorModel"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/reserve": {
      "post": {
        "tags": [
          "Account purchasing"
        ],
        "summary": "Reserve Account",
        "description": "Reserves account for you. Reserve time - 300 seconds.",
        "operationId": "accountsPurchasing.setReserve",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          },
          {
            "$ref": "#/components/parameters/price"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ReserveBuyModel",
                  "required": [
                    "item",
                    "reserve_end_date",
                    "system_info"
                  ],
                  "type": "object",
                  "properties": {
                    "status": {
                      "title": "Status",
                      "type": "string",
                      "default": "ok"
                    },
                    "reserve_end_date": {
                      "title": "Reserve End Date",
                      "type": "integer"
                    },
                    "item": {
                      "$ref": "#/components/schemas/ItemModel"
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/ErrorModel"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/cancel-reserve": {
      "post": {
        "tags": [
          "Account purchasing"
        ],
        "summary": "Unreserve Account",
        "description": "Cancels reserve.",
        "operationId": "accountsPurchasing.cancelReserve",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SaveChanges"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionModel"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/item/fast-sell": {
      "post": {
        "tags": [
          "Account publishing"
        ],
        "summary": "Fast Sell Account",
        "description": "Adds and check account on validity. If account is valid, account will be published on the market.\n\n**If you receive a \"captcha\" error, that you should send same request again.**\n\nAccount origin. Where did you get it from.\n+ brute - Account received using Bruteforce\n+ fishing - Account received from fishing page\n+ stealer - Account received from stealer logs\n+ autoreg - Account is automatically registered by a tool\n+ personal - Account is yours. You created it yourself\n+ resale - Account received from another seller\n+ retrive - Account is recovered by email or phone (only for VKontakte category)\n+ dummy - Dummy (empty) account (only for Steam category)\n\nRequired email login data categories:\n+ 9 - Fortnite\n+ 12 - Epic games\n+ 18 - Escape from Tarkov",
        "operationId": "accountPublishing.fastSell",
        "parameters": [
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "name": "title_en",
            "in": "query",
            "description": "English title of account. If **title_en** specified and **title** is empty, **title** will be automatically translated to Russian language.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Title En",
              "type": "string",
              "description": "English title of account. If **title_en** specified and **title** is empty, **title** will be automatically translated to Russian language."
            }
          },
          {
            "$ref": "#/components/parameters/price"
          },
          {
            "name": "type_sell",
            "in": "query",
            "description": "Sales method. If this parameter is not set, **type_sell** will be **price**.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Type Sell",
              "type": "string",
              "description": "Sales method.",
              "enum": [
                "price",
                "auction"
              ]
            }
          },
          {
            "name": "duration_auction_value",
            "in": "query",
            "description": "Duration auction value. At the end of the auction time, the item will be closed if there were no bids.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Duration Auction Value",
              "type": "integer",
              "description": "Duration auction value. At the end of the auction time, the item will be closed if there were no bids.",
              "minimum": 1
            }
          },
          {
            "name": "duration_auction_option",
            "in": "query",
            "description": "Duration auction option.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Duration Auction Option",
              "type": "string",
              "description": "Duration auction option.",
              "enum": [
                "minutes",
                "hours",
                "days"
              ]
            }
          },
          {
            "name": "instant_price",
            "in": "query",
            "description": "The price for which you can instantly redeem your account.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Instant Price",
              "type": "integer",
              "description": "The price for which you can instantly redeem your account.",
              "minimum": 1
            }
          },
          {
            "name": "not_bids_action",
            "in": "query",
            "description": "If you set **cancel**, at the end of the auction with 0 bids, the account can be purchased at the price you specified as the minimum bid.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Not Bids Action",
              "type": "string",
              "description": "If you set **cancel**, at the end of the auction with 0 bids, the account can be purchased at the price you specified as the minimum bid.",
              "enum": [
                "close",
                "cancel"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/category_id"
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Using currency.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/CurrencyModel"
            }
          },
          {
            "name": "item_origin",
            "in": "query",
            "description": "Account origin. Where did you get it from.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "description": "Account origin. Where did you get it from.",
              "type": "string",
              "enum": [
                "brute",
                "fishing",
                "stealer",
                "personal",
                "resale",
                "autoreg",
                "dummy"
              ]
            }
          },
          {
            "name": "extended_guarantee",
            "in": "query",
            "description": "Guarantee type.\n+ **-1** - 12 hours\n+ **0** - 24 hours\n+ **1** - 3 days",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Extended Guarantee",
              "type": "integer",
              "description": "Guarantee type.\n+ **-1** - 12 hours\n+ **0** - 24 hours\n+ **1** - 3 days",
              "enum": [
                -1,
                0,
                1
              ]
            }
          },
          {
            "name": "allow_ask_discount",
            "in": "query",
            "description": "Allow users to ask discount for this account.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Allow Ask Discount",
              "type": "boolean",
              "description": "Allow users to ask discount for this account."
            }
          },
          {
            "name": "proxy_id",
            "in": "query",
            "description": "Using proxy id for account checking.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Proxy Id",
              "type": "integer",
              "description": "Using proxy id for account checking."
            }
          },
          {
            "name": "random_proxy",
            "in": "query",
            "description": "Pass 1, if you get captcha in previous response.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Random Proxy",
              "type": "integer",
              "description": "Pass 1, if you get captcha in previous response.",
              "enum": [
                1
              ]
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "description": {
                    "description": "Account public description.",
                    "title": "Description",
                    "type": "string"
                  },
                  "information": {
                    "description": "Account private information (visible for buyer only if purchased).",
                    "title": "Information",
                    "type": "string"
                  },
                  "login": {
                    "description": "Account login (or email).",
                    "title": "Login",
                    "type": "string"
                  },
                  "password": {
                    "description": "Account password.",
                    "title": "Password",
                    "type": "string"
                  },
                  "login_password": {
                    "description": "Account login data (login:password format).",
                    "title": "Login Password",
                    "type": "string"
                  },
                  "has_email_login_data": {
                    "description": "Required if a **category** is one of list of Required email login data categories.",
                    "title": "Has Email Login Data",
                    "type": "boolean"
                  },
                  "email_login_data": {
                    "description": "Required if a **category** is one of list of Required email login data categories. Email login data (email:password format).",
                    "title": "Email Login Data",
                    "type": "string"
                  },
                  "email_type": {
                    "description": "Email type.",
                    "title": "Email Type",
                    "type": "string",
                    "enum": [
                      "native",
                      "autoreg"
                    ]
                  },
                  "close_item": {
                    "description": "If set, the item will be closed **item_state = closed**.",
                    "title": "Close Item",
                    "type": "boolean"
                  },
                  "extra[region]": {
                    "description": "Region. Required if you want to upload WoT, Valorant, Escape From Tarkov account. Optional if you want to upload Genshin Impact account.",
                    "title": "Region",
                    "type": "string"
                  },
                  "extra[service_id]": {
                    "description": "Service id. Required if you want to upload VPN, Cinema account.",
                    "title": "Service Id",
                    "type": "string",
                    "enum": [
                      "AdguardVPN",
                      "PIAVPN",
                      "mullvadVPN",
                      "pureVPN",
                      "ultraVPN",
                      "vanishVPN",
                      "windscribeVPN",
                      "zenmateVPN",
                      "zenmateVPNUltimate",
                      "start"
                    ]
                  },
                  "extra[system]": {
                    "description": "System. Required if you want to upload Supercell account.",
                    "title": "System",
                    "type": "string",
                    "enum": [
                      "laser",
                      "scroll",
                      "magic"
                    ]
                  },
                  "extra[ds_token]": {
                    "description": "Discord token. Required if you want to upload Discord account.",
                    "title": "Discord Token",
                    "type": "string"
                  },
                  "extra[vk_token]": {
                    "description": "VK token. Required if you want to upload VK account.",
                    "title": "VK Token",
                    "type": "string"
                  },
                  "extra[vk_ua]": {
                    "description": "VK User-agent. Optional. Used only if you want to upload VK account.",
                    "title": "VK Token",
                    "type": "string"
                  },
                  "extra[vk_token_auth_only]": {
                    "description": "Login into account by token only. Used only if you want to upload VK account.",
                    "title": "Vk Token Auth Only",
                    "type": "integer",
                    "enum": [
                      1
                    ]
                  },
                  "extra[parse_vote_count]": {
                    "description": "Parse VK balance.",
                    "title": "Parse VK balance",
                    "type": "integer",
                    "enum": [
                      1
                    ]
                  },
                  "extra[cookies]": {
                    "description": "Cookies. Required if you want to upload Youtube, Fortnite, Epic Games, Origin (EA), Social Club, Instagram, TikTok or Warface account.",
                    "title": "Cookies",
                    "type": "string"
                  },
                  "extra[sc]": {
                    "description": "Required if you want to upload Epic Games account.",
                    "title": "sc",
                    "type": "integer",
                    "enum": [
                      1,
                      0
                    ]
                  },
                  "extra[ItTakesTwo]": {
                    "description": "Required if you want to upload Origin (EA) account.",
                    "title": "ItTakesTwo",
                    "type": "integer",
                    "enum": [
                      1,
                      0
                    ]
                  },
                  "extra[apex_legends]": {
                    "description": "Required if you want to upload Origin (EA) account.",
                    "title": "ApexLegends",
                    "type": "integer",
                    "enum": [
                      1,
                      0
                    ]
                  },
                  "extra[login_without_cookies]": {
                    "description": "Login without cookies. Required if you want to upload Instagram account.",
                    "title": "Login Without Cookies",
                    "type": "boolean"
                  },
                  "extra[mfa_file]": {
                    "description": "Mfa file. Optional. Used only if you want to upload Steam account.",
                    "title": "Mfa File",
                    "type": "string"
                  },
                  "extra[dota2_mmr]": {
                    "description": "Dota 2 MMR. Optional. Used only if you want to upload Steam account.",
                    "title": "Dota 2 MMR",
                    "type": "string"
                  },
                  "extra[ea_games]": {
                    "description": "EA Games. Optional. Used only if you want to upload Steam account.",
                    "title": "EA Games",
                    "type": "boolean"
                  },
                  "extra[uplay_games]": {
                    "description": "Uplay Games. Optional. Used only if you want to upload Steam account.",
                    "title": "Uplay Games",
                    "type": "string"
                  },
                  "extra[the_quarry]": {
                    "description": "The quarry. Optional. Used only if you want to upload Steam account.",
                    "title": "The Quarry",
                    "type": "string"
                  },
                  "extra[warframe]": {
                    "description": "Warframe. Optional. Used only if you want to upload Steam account.",
                    "title": "Warframe",
                    "type": "boolean"
                  },
                  "extra[ark]": {
                    "description": "Ark. Optional. Used only if you want to upload Steam account.",
                    "title": "Ark",
                    "type": "boolean"
                  },
                  "extra[socialclub_games]": {
                    "description": "Social club games. Optional. Used only if you want to upload Steam account.",
                    "title": "SocialClub Games",
                    "type": "string"
                  },
                  "extra[game_version]": {
                    "description": "Game version. Required if you want to upload Escape From Tarkov account.",
                    "title": "Game Version",
                    "type": "string"
                  },
                  "extra[cookie_login]": {
                    "description": "Cookie login. Optional. Used only if you want to upload TikTok account.",
                    "title": "Cookie login",
                    "type": "boolean"
                  },
                  "extra[telegramClient]": {
                    "description": "Telegram client. Used only if you want to upload Telegram account.",
                    "$ref": "#/components/schemas/TelegramClientModel"
                  },
                  "extra[telegramJson]": {
                    "description": "Contents of session.json file.",
                    "title": "Telegram Json",
                    "type": "string"
                  },
                  "extra[checkChannels]": {
                    "description": "Check channels. Used only if you want to upload Telegram account.",
                    "title": "Check Channels",
                    "type": "boolean"
                  },
                  "extra[checkSpam]": {
                    "description": "Check spam. Used only if you want to upload Telegram account.",
                    "title": "Check Spam",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FastSellModel",
                  "required": [
                    "item",
                    "message",
                    "status",
                    "system_info"
                  ],
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/ItemModel"
                    },
                    "itemLink": {
                      "title": "Item link",
                      "type": "string"
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "description": "Error Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "No Temp Mail",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "default": "There is no temp mail for this account. Call GET /goods/add to receive temp mail."
                      }
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/item/add": {
      "post": {
        "tags": [
          "Account publishing"
        ],
        "summary": "Add account",
        "description": "Adds account on the market.\n\nAccount origin. Where did you get it from.\n\n+ brute - Account received using Bruteforce\n+ fishing - Account received from fishing page\n+ stealer - Account received from stealer logs\n+ autoreg - Account is automatically registered by a tool\n+ personal - Account is yours. You created it yourself\n+ resale - Account received from another seller\n+ retrive - Account is recovered by email or phone (only for VKontakte category)\n+ dummy - Dummy (empty) account (only for Steam category)\n\nRequired email login data categories:\n+ 9 - Fortnite\n+ 12 - Epic games\n+ 18 - Escape from Tarkov",
        "operationId": "accountPublishing.addItem",
        "parameters": [
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "name": "title_en",
            "in": "query",
            "description": "English title of account. If **title_en** specified and **title** is empty, **title** will be automatically translated to Russian language.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Title En",
              "type": "string",
              "description": "English title of account. If **title_en** specified and **title** is empty, **title** will be automatically translated to Russian language."
            }
          },
          {
            "$ref": "#/components/parameters/price"
          },
          {
            "name": "type_sell",
            "in": "query",
            "description": "Sales method. If this parameter is not set, **type_sell** will be **price**.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Type Sell",
              "type": "string",
              "description": "Sales method.",
              "enum": [
                "price",
                "auction"
              ]
            }
          },
          {
            "name": "duration_auction_value",
            "in": "query",
            "description": "Duration auction value. At the end of the auction time, the item will be closed if there were no bids.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Duration Auction Value",
              "type": "integer",
              "description": "Duration auction value. At the end of the auction time, the item will be closed if there were no bids.",
              "minimum": 1
            }
          },
          {
            "name": "duration_auction_option",
            "in": "query",
            "description": "Duration auction option.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Duration Auction Option",
              "type": "string",
              "description": "Duration auction option.",
              "enum": [
                "minutes",
                "hours",
                "days"
              ]
            }
          },
          {
            "name": "instant_price",
            "in": "query",
            "description": "The price for which you can instantly redeem your account.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Instant Price",
              "type": "integer",
              "description": "The price for which you can instantly redeem your account."
            }
          },
          {
            "name": "not_bids_action",
            "in": "query",
            "description": "If you set **cancel**, at the end of the auction with 0 bids, the account can be purchased at the price you specified as the minimum bid.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Not Bids Action",
              "type": "string",
              "description": "If you set **cancel**, at the end of the auction with 0 bids, the account can be purchased at the price you specified as the minimum bid.",
              "enum": [
                "close",
                "cancel"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/category_id"
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Using currency.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/CurrencyModel"
            }
          },
          {
            "name": "item_origin",
            "in": "query",
            "description": "Account origin. Where did you get it from.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Item Origin",
              "type": "string",
              "description": "Account origin. Where did you get it from.",
              "enum": [
                "brute",
                "fishing",
                "stealer",
                "personal",
                "resale",
                "autoreg",
                "dummy"
              ]
            }
          },
          {
            "name": "extended_guarantee",
            "in": "query",
            "description": "Guarantee type.\n+ **-1** - 12 hours\n+ **0** - 24 hours\n+ **1** - 3 days",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Extended Guarantee",
              "type": "integer",
              "description": "Guarantee type.\n+ **-1** - 12 hours\n+ **0** - 24 hours\n+ **1** - 3 days",
              "enum": [
                -1,
                0,
                1
              ]
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Account public description.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Description",
              "type": "string",
              "description": "Account public description."
            }
          },
          {
            "name": "information",
            "in": "query",
            "description": "Account private information (visible for buyer only if purchased).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Information",
              "type": "string",
              "description": "Account private information (visible for buyer only if purchased)."
            }
          },
          {
            "name": "has_email_login_data",
            "in": "query",
            "description": "Required if a **category** is one of list of Required email login data categories.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Has Email Login Data",
              "type": "boolean",
              "description": "Required if a **category** is one of list of Required email login data categories."
            }
          },
          {
            "name": "email_login_data",
            "in": "query",
            "description": "Required if a **category** is one of list of Required email login data categories. Email login data (email:password format).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email Login Data",
              "type": "string",
              "description": "Required if a **category** is one of list of Required email login data categories. Email login data (email:password format)."
            }
          },
          {
            "name": "email_type",
            "in": "query",
            "description": "Email type.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email Type",
              "type": "string",
              "description": "Email type.",
              "enum": [
                "native",
                "autoreg"
              ]
            }
          },
          {
            "name": "allow_ask_discount",
            "in": "query",
            "description": "Allow users to ask discount for this account.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Allow Ask Discount",
              "type": "boolean",
              "description": "Allow users to ask discount for this account."
            }
          },
          {
            "name": "proxy_id",
            "in": "query",
            "description": "Using proxy id for account checking.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Proxy Id",
              "type": "integer",
              "description": "Using proxy id for account checking."
            }
          },
          {
            "name": "random_proxy",
            "in": "query",
            "description": "Pass 1, if you get captcha in previous response.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Random Proxy",
              "type": "integer",
              "description": "Pass 1, if you get captcha in previous response.",
              "enum": [
                1
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AddItemModel",
                  "required": [
                    "item",
                    "status",
                    "system_info"
                  ],
                  "type": "object",
                  "properties": {
                    "status": {
                      "title": "Status",
                      "type": "string",
                      "default": "ok"
                    },
                    "item": {
                      "$ref": "#/components/schemas/ItemModel"
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/goods/check": {
      "post": {
        "tags": [
          "Account publishing"
        ],
        "summary": "Check Not Published Acc",
        "description": "Check and put up to sale not published account OR update account information existing account.\n\n**If you receive a \"captcha\" error, that you should send same request again.**",
        "operationId": "accountsPublishing.checkNotPublic",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          },
          {
            "name": "close_item",
            "in": "query",
            "description": "If set, the item will be closed **item_state = closed**.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Close Item",
              "type": "boolean",
              "description": "If set, the item will be closed **item_state = closed**."
            }
          },
          {
            "name": "resell_item_id",
            "in": "query",
            "description": "Put if you are trying to resell an account.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Resell Item Id",
              "type": "integer",
              "description": "Put if you are trying to resell an account."
            }
          },
          {
            "name": "random_proxy",
            "in": "query",
            "description": "Pass 1, if you get **captcha** in previous response.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Random Proxy",
              "type": "integer",
              "description": "Pass 1, if you get captcha in previous response.",
              "enum": [
                1
              ]
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "login": {
                    "description": "Account login (or email).",
                    "title": "Login",
                    "type": "string"
                  },
                  "password": {
                    "description": "Account password.",
                    "title": "Password",
                    "type": "string"
                  },
                  "login_password": {
                    "description": "Account login data (login:password format).",
                    "title": "Login Password",
                    "type": "string"
                  },
                  "has_email_login_data": {
                    "description": "Required if a **category** is one of list of Required email login data categories.",
                    "title": "Has Email Login Data",
                    "type": "boolean"
                  },
                  "email_login_data": {
                    "description": "Required if a **category** is one of list of Required email login data categories. Email login data (email:password format).",
                    "title": "Email Login Data",
                    "type": "string"
                  },
                  "email_type": {
                    "description": "Email type.",
                    "title": "Email Type",
                    "type": "string",
                    "enum": [
                      "native",
                      "autoreg"
                    ]
                  },
                  "extra[region]": {
                    "description": "Region. Required if you want to upload WoT, Valorant, Escape From Tarkov account. Optional if you want to upload Genshin Impact account.",
                    "title": "Region",
                    "type": "string"
                  },
                  "extra[service_id]": {
                    "description": "Service id. Required if you want to upload VPN, Cinema account.",
                    "title": "Service Id",
                    "type": "string",
                    "enum": [
                      "AdguardVPN",
                      "PIAVPN",
                      "mullvadVPN",
                      "pureVPN",
                      "ultraVPN",
                      "vanishVPN",
                      "windscribeVPN",
                      "zenmateVPN",
                      "zenmateVPNUltimate",
                      "start"
                    ]
                  },
                  "extra[system]": {
                    "description": "System. Required if you want to upload Supercell account.",
                    "title": "System",
                    "type": "string",
                    "enum": [
                      "laser",
                      "scroll",
                      "magic"
                    ]
                  },
                  "extra[ds_token]": {
                    "description": "Discord token. Required if you want to upload Discord account.",
                    "title": "Discord Token",
                    "type": "string"
                  },
                  "extra[vk_token]": {
                    "description": "VK token. Required if you want to upload VK account.",
                    "title": "VK Token",
                    "type": "string"
                  },
                  "extra[vk_ua]": {
                    "description": "VK User-agent. Optional. Used only if you want to upload VK account.",
                    "title": "VK Token",
                    "type": "string"
                  },
                  "extra[vk_token_auth_only]": {
                    "description": "Login into account by token only. Used only if you want to upload VK account.",
                    "title": "Vk Token Auth Only",
                    "type": "integer",
                    "enum": [
                      1
                    ]
                  },
                  "extra[parse_vote_count]": {
                    "description": "Parse VK balance.",
                    "title": "Parse VK balance",
                    "type": "integer",
                    "enum": [
                      1
                    ]
                  },
                  "extra[cookies]": {
                    "description": "Cookies. Required if you want to upload Youtube, Fortnite, Epic Games, Origin (EA), Social Club, Instagram, TikTok or Warface account.",
                    "title": "Cookies",
                    "type": "string"
                  },
                  "extra[sc]": {
                    "description": "Required if you want to upload Epic Games account.",
                    "title": "sc",
                    "type": "integer",
                    "enum": [
                      1,
                      0
                    ]
                  },
                  "extra[ItTakesTwo]": {
                    "description": "Required if you want to upload Origin (EA) account.",
                    "title": "ItTakesTwo",
                    "type": "integer",
                    "enum": [
                      1,
                      0
                    ]
                  },
                  "extra[apex_legends]": {
                    "description": "Required if you want to upload Origin (EA) account.",
                    "title": "ApexLegends",
                    "type": "integer",
                    "enum": [
                      1,
                      0
                    ]
                  },
                  "extra[login_without_cookies]": {
                    "description": "Login without cookies. Required if you want to upload Instagram account.",
                    "title": "Login Without Cookies",
                    "type": "boolean"
                  },
                  "extra[mfa_file]": {
                    "description": "Mfa file. Optional. Used only if you want to upload Steam account.",
                    "title": "Mfa File",
                    "type": "string"
                  },
                  "extra[dota2_mmr]": {
                    "description": "Dota 2 MMR. Optional. Used only if you want to upload Steam account.",
                    "title": "Dota 2 MMR",
                    "type": "string"
                  },
                  "extra[ea_games]": {
                    "description": "EA Games. Optional. Used only if you want to upload Steam account.",
                    "title": "EA Games",
                    "type": "boolean"
                  },
                  "extra[uplay_games]": {
                    "description": "Uplay Games. Optional. Used only if you want to upload Steam account.",
                    "title": "Uplay Games",
                    "type": "string"
                  },
                  "extra[the_quarry]": {
                    "description": "The quarry. Optional. Used only if you want to upload Steam account.",
                    "title": "The Quarry",
                    "type": "string"
                  },
                  "extra[warframe]": {
                    "description": "Warframe. Optional. Used only if you want to upload Steam account.",
                    "title": "Warframe",
                    "type": "boolean"
                  },
                  "extra[ark]": {
                    "description": "Ark. Optional. Used only if you want to upload Steam account.",
                    "title": "Ark",
                    "type": "boolean"
                  },
                  "extra[socialclub_games]": {
                    "description": "Social club games. Optional. Used only if you want to upload Steam account.",
                    "title": "SocialClub Games",
                    "type": "string"
                  },
                  "extra[game_version]": {
                    "description": "Game version. Required if you want to upload Escape From Tarkov account.",
                    "title": "Game Version",
                    "type": "string"
                  },
                  "extra[cookie_login]": {
                    "description": "Cookie login. Optional. Used only if you want to upload TikTok account.",
                    "title": "Cookie login",
                    "type": "boolean"
                  },
                  "extra[telegramClient]": {
                    "description": "Telegram client. Used only if you want to upload Telegram account.",
                    "$ref": "#/components/schemas/TelegramClientModel"
                  },
                  "extra[telegramJson]": {
                    "description": "Contents of session.json file.",
                    "title": "Telegram Json",
                    "type": "string"
                  },
                  "extra[checkChannels]": {
                    "description": "Check channels. Used only if you want to upload Telegram account.",
                    "title": "Check Channels",
                    "type": "boolean"
                  },
                  "extra[checkSpam]": {
                    "description": "Check spam. Used only if you want to upload Telegram account.",
                    "title": "Check Spam",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "GoodsCheck",
                  "required": [
                    "item",
                    "message",
                    "status",
                    "system_info"
                  ],
                  "type": "object",
                  "properties": {
                    "status": {
                      "title": "Status",
                      "type": "string"
                    },
                    "message": {
                      "title": "Message",
                      "type": "string"
                    },
                    "item": {
                      "$ref": "#/components/schemas/ItemModel"
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/goods/add": {
      "get": {
        "tags": [
          "Account publishing"
        ],
        "summary": "Get Info Not Published Acc (Get temp email for account)",
        "description": "Get info about not published item. For categories, which required temporary email (Steam, Social Club), you will get temporary email in response.",
        "operationId": "accountsPublishing.getInfoNotPublic",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          },
          {
            "name": "resell_item_id",
            "in": "query",
            "description": "Put item id, if you are trying to resell item. This is useful to pass temporary email from reselling item to new item. You will get same temporary email from reselling account.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Resell Item Id",
              "type": "integer",
              "description": "Put item id, if you are trying to resell item. This is useful to pass temporary email from reselling item to new item. You will get same temporary email from reselling account."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AddGoodsModel",
                  "required": [
                    "ignoreCookieUpload",
                    "item",
                    "sessionLoginData",
                    "system_info",
                    "temp_email"
                  ],
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/ItemFromListModel"
                    },
                    "temp_email": {
                      "title": "Temp Email",
                      "type": "string"
                    },
                    "sessionLoginData": {
                      "title": "Sessionlogindata",
                      "type": "array",
                      "items": {}
                    },
                    "ignoreCookieUpload": {
                      "title": "Ignorecookieupload",
                      "type": "boolean"
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/email-code": {
      "get": {
        "tags": [
          "Accounts managing"
        ],
        "summary": "Get Email Confirmation Code",
        "description": "Gets confirmation code or link.",
        "operationId": "accountsManaging.getEmailCode",
        "parameters": [
          {
            "name": "item_id",
            "in": "query",
            "description": "Item id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Itemid",
              "type": "integer",
              "description": "Item id."
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email",
              "type": "string",
              "description": "Email."
            }
          },
          {
            "name": "login",
            "in": "query",
            "description": "Login.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Login.",
              "type": "string",
              "description": "Login."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfCodeModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/ErrorModel"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/mafile": {
      "get": {
        "tags": [
          "Accounts managing"
        ],
        "summary": "Get Mafile Json",
        "description": "Returns mafile in JSON. **Warning: this action is cancelling active account guarantee.**",
        "operationId": "accountsManaging.getMafileJSON",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "MaFileModel",
                  "required": [
                    "maFile"
                  ],
                  "type": "object",
                  "properties": {
                    "maFile": {
                      "title": "Mafile",
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionModel"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/guard-code": {
      "get": {
        "tags": [
          "Accounts managing"
        ],
        "summary": "Get Mafile Confirmation Code",
        "description": "Gets confirmation code from MaFile (Only for Steam accounts).",
        "operationId": "accountsManaging.getMafileCode",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfCodeModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionModel"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/confirm-sda": {
      "post": {
        "tags": [
          "Accounts managing"
        ],
        "summary": "Confirm SDA",
        "description": "Confirm steam action. \n\n Don't set **id** and **nonce** parameters to get list of available confirmation requests. \n\n **Warning: this action is cancelling active account guarantee.**",
        "operationId": "accountsManaging.confirmSDA",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Confirmation id. (Required along with **nonce** if you want to confirm action).",
            "schema": {
              "type": "integer",
              "description": "Confirmation id. (Required along with **nonce** if you want to confirm action)."
            }
          },
          {
            "name": "nonce",
            "in": "query",
            "description": "Confirmation nonce. (Required along with **id** if you want to confirm action).",
            "schema": {
              "type": "integer",
              "description": "Confirmation nonce. (Required along with **id** if you want to confirm action)."
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/OkStatus"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionModel"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/telegram-login-code": {
      "get": {
        "tags": [
          "Accounts managing"
        ],
        "summary": "Get Telegram Confirmation Code",
        "description": "Gets confirmation code from Telegram.",
        "operationId": "accountsManaging.getTelegramCode",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "TgCodeModel",
                  "required": [
                    "codes",
                    "item"
                  ],
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/ItemModel"
                    },
                    "codes": {
                      "title": "TgCodeData",
                      "type": "object",
                      "properties": {
                        "code": {
                          "title": "Code",
                          "type": "string"
                        },
                        "date": {
                          "title": "Date",
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionModel"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/telegram-reset-authorizations": {
      "post": {
        "tags": [
          "Accounts managing"
        ],
        "summary": "Telegram Reset Auth",
        "description": "Resets Telegram authorizations.",
        "operationId": "accountsManaging.telegramResetAuth",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SaveChanges"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionModel"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/refuse-guarantee": {
      "post": {
        "tags": [
          "Accounts managing"
        ],
        "summary": "Cancel Guarantee",
        "description": "Cancel guarantee of account. It can be useful for account reselling.",
        "operationId": "accountsManaging.cancelGuarantee",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SaveChanges"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionModel"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/change-password": {
      "post": {
        "tags": [
          "Accounts managing"
        ],
        "summary": "Change Password",
        "description": "Changes password of account.",
        "operationId": "accountsManaging.changePassword",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          },
          {
            "name": "_cancel",
            "in": "query",
            "description": "Cancel change password recommendation. It will be helpful, if you don't want to change password and get login data.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": " Cancel",
              "type": "integer",
              "description": "Cancel change password recommendation. It will be helpful, if you don't want to change password and get login data.",
              "enum": [
                1
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ChangePasswordModel",
                  "required": [
                    "new_password"
                  ],
                  "type": "object",
                  "properties": {
                    "status": {
                      "title": "Status",
                      "type": "string",
                      "default": "ok"
                    },
                    "message": {
                      "title": "Message",
                      "type": "string",
                      "default": "Changes Saved"
                    },
                    "new_password": {
                      "title": "New Password",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionModel"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/temp-email-password": {
      "get": {
        "tags": [
          "Accounts managing"
        ],
        "summary": "Get Temp Email Password",
        "description": "Gets password from temp email of account. After calling of this method, the warranty will be cancelled and you cannot automatically resell account.",
        "operationId": "accountsManaging.getPasswordEmail",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "TempEmailPasswordModel",
                  "required": [
                    "item"
                  ],
                  "type": "object",
                  "properties": {
                    "item": {
                      "title": "TempEmailPasswordItem",
                      "required": [
                        "account"
                      ],
                      "type": "object",
                      "properties": {
                        "account": {
                          "title": "Account",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionModel"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/tag": {
      "post": {
        "tags": [
          "Accounts managing"
        ],
        "summary": "Add Tag Account",
        "description": "Adds tag for the account.",
        "operationId": "accountsManaging.addTag",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          },
          {
            "name": "tag_id",
            "in": "query",
            "description": "Tag id (Tag list is available via **GET /me**).",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Tag Id",
              "type": "integer",
              "description": "Tag id (Tag list is available via **GET /me**)."
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Tag"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionModel"
          },
          "404": {
            "description": "Error Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Tag Not Found",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "default": "The requested tag could not be found."
                      }
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Accounts managing"
        ],
        "summary": "Delete Tag Account",
        "description": "Deletes tag for the account.",
        "operationId": "accountsManaging.deleteTag",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          },
          {
            "name": "tag_id",
            "in": "query",
            "description": "Tag id (Tag list is available via **GET /me**).",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Tag Id",
              "type": "integer",
              "description": "Tag id (Tag list is available via **GET /me**)."
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Tag"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionModel"
          },
          "404": {
            "description": "Error Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Tag Not Found",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "default": "The requested tag could not be found."
                      }
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/star": {
      "post": {
        "tags": [
          "Accounts managing"
        ],
        "summary": "Favorite",
        "description": "Adds account to favorites.",
        "operationId": "accountsManaging.favorite",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/OkStatus"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Accounts managing"
        ],
        "summary": "Unfavorite",
        "description": "Delete account from favorites.",
        "operationId": "accountsManaging.unfavorite",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SaveChanges"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/stick": {
      "post": {
        "tags": [
          "Accounts managing"
        ],
        "summary": "Stick Account",
        "description": "Stick account in the top of search.",
        "operationId": "accountsManaging.stick",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SaveChanges"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionModel"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Accounts managing"
        ],
        "summary": "Unstick Account",
        "description": "Unstick account of the top of search.",
        "operationId": "accountsManaging.unstick",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SaveChanges"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionModel"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/{itemId}/change-owner": {
      "post": {
        "tags": [
          "Accounts managing"
        ],
        "summary": "Change Account Owner",
        "description": "Change of account owner.",
        "operationId": "accountsManaging.changeOwner",
        "parameters": [
          {
            "$ref": "#/components/parameters/itemId"
          },
          {
            "name": "username",
            "in": "query",
            "description": "The username of the new account owner.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "The username of the new account owner."
            }
          },
          {
            "name": "secret_answer",
            "in": "query",
            "description": "Secret answer of your account.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Secret Answer",
              "type": "string",
              "description": "Secret answer of your account."
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SaveChanges"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionModel"
          },
          "404": {
            "$ref": "#/components/responses/AdNotFoundModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/me": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Get Profile Market",
        "description": "Displays info about your profile.",
        "operationId": "marketProfileSettings.getInfo",
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "MeModel",
                  "required": [
                    "user"
                  ],
                  "type": "object",
                  "properties": {
                    "user": {
                      "title": "User",
                      "required": [
                        "balance",
                        "hold",
                        "short_link",
                        "system_info",
                        "user_dob_day",
                        "user_dob_month",
                        "user_dob_year",
                        "user_email",
                        "user_id",
                        "user_last_seen_date",
                        "user_like_count",
                        "user_message_count",
                        "user_register_date",
                        "user_title",
                        "user_unread_notification_count",
                        "username"
                      ],
                      "type": "object",
                      "properties": {
                        "user_id": {
                          "title": "User Id",
                          "type": "integer"
                        },
                        "username": {
                          "title": "Username",
                          "type": "string"
                        },
                        "user_message_count": {
                          "title": "User Message Count",
                          "type": "integer"
                        },
                        "user_register_date": {
                          "title": "User Register Date",
                          "type": "integer"
                        },
                        "user_like_count": {
                          "title": "User Like Count",
                          "type": "integer"
                        },
                        "short_link": {
                          "title": "Short Link",
                          "type": "string"
                        },
                        "user_email": {
                          "title": "User Email",
                          "type": "string"
                        },
                        "user_unread_notification_count": {
                          "title": "User Unread Notification Count",
                          "type": "integer"
                        },
                        "user_dob_day": {
                          "title": "User Dob Day",
                          "type": "integer"
                        },
                        "user_dob_month": {
                          "title": "User Dob Month",
                          "type": "integer"
                        },
                        "user_dob_year": {
                          "title": "User Dob Year",
                          "type": "integer"
                        },
                        "user_title": {
                          "title": "User Title",
                          "type": "string"
                        },
                        "user_last_seen_date": {
                          "title": "User Last Seen Date",
                          "type": "integer"
                        },
                        "balance": {
                          "title": "Balance",
                          "type": "integer"
                        },
                        "hold": {
                          "title": "Hold",
                          "type": "integer"
                        },
                        "system_info": {
                          "$ref": "#/components/schemas/SystemInfo"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Profile"
        ],
        "summary": "Edit Settings Market",
        "description": "Change settings about your profile on the market.",
        "operationId": "marketProfileSettings.getSettings",
        "parameters": [
          {
            "name": "user_allow_ask_discount",
            "in": "query",
            "description": "Allow users ask discount for your accounts.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "User Allow Ask Discount",
              "type": "boolean",
              "description": "Allow users ask discount for your accounts."
            }
          },
          {
            "name": "show_account_links",
            "in": "query",
            "style": "form",
            "required": false,
            "explode": true,
            "schema": {
              "type": "integer",
              "enum": [
                1,
                0
              ]
            }
          },
          {
            "name": "max_discount_percent",
            "in": "query",
            "description": "Maximum discount percents for your accounts.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Max Discount Percent",
              "type": "integer",
              "description": "Maximum discount percents for your accounts."
            }
          },
          {
            "name": "disable_steam_guard",
            "in": "query",
            "description": "Disable Steam Guard on account purchase moment.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Disable Steam Guard",
              "type": "boolean",
              "description": "Disable Steam Guard on account purchase moment."
            }
          },
          {
            "name": "deauthorize_steam",
            "in": "query",
            "description": "Finish all Steam sessions after purchase.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Deathorize Steam",
              "type": "boolean",
              "description": "Finish all Steam sessions after purchase."
            }
          },
          {
            "name": "hide_favourites",
            "in": "query",
            "description": "Hide your profile info when you add an account to favorites.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Hide Favourites",
              "type": "boolean",
              "description": "Hide your profile info when you add an account to favorites."
            }
          },
          {
            "name": "hide_bids",
            "in": "query",
            "description": "Hide your profile when bid on the auction.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Hide Bids",
              "type": "boolean",
              "description": "Hide your profile when bid on the auction."
            }
          },
          {
            "name": "allow_accept_accounts",
            "in": "query",
            "description": "Usernames who can transfer market accounts to you. Separate values with a comma.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "title": "Allow Accept Accounts",
              "type": "array",
              "description": "Usernames who can transfer market accounts to you. Separate values with a comma.",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "vk_ua",
            "in": "query",
            "description": "Vkontakte user agent.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Vk Ua",
              "type": "string",
              "description": "Vkontakte user agent."
            }
          },
          {
            "name": "market_custom_title",
            "in": "query",
            "description": "Market title.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Market Custom Title",
              "type": "string",
              "description": "Market title."
            }
          },
          {
            "name": "telegram_api_id",
            "in": "query",
            "description": "Telegram api id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Telegram api id.",
              "type": "string",
              "description": "Telegram api id."
            }
          },
          {
            "name": "telegram_api_hash",
            "in": "query",
            "description": "Telegram api hash.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Telegram api hash.",
              "type": "string",
              "description": "Telegram api hash."
            }
          },
          {
            "name": "telegram_device_model",
            "in": "query",
            "description": "Telegram device model.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Telegram device model.",
              "type": "string",
              "description": "Telegram device model."
            }
          },
          {
            "name": "telegram_system_version",
            "in": "query",
            "description": "Telegram system version.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Telegram system version.",
              "type": "string",
              "description": "Telegram system version."
            }
          },
          {
            "name": "telegram_app_version",
            "in": "query",
            "description": "Telegram app version.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Telegram app version.",
              "type": "string",
              "description": "Telegram app version."
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SaveChanges"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/balance/transfer": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Send Money",
        "description": "Send money to any user.\n\nThe web version additionally has a **redirect** parameter (After payment, there will be a redirect to the specified link).",
        "operationId": "paymentsList.sendMoney",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "User id of receiver. If **user_id** specified, **username** is not required.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "User Id",
              "type": "integer",
              "description": "User id of receiver. If **user_id** specified, **username** is not required."
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "Username of receiver. If **username** specified, **user_id** is not required.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Username of receiver. If **username** specified, **user_id** is not required."
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Amount to send in your currency.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Amount",
              "type": "integer",
              "description": "Amount to send in your currency.",
              "minimum": 1
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Using currency for amount.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/CurrencyModel"
            }
          },
          {
            "name": "secret_answer",
            "in": "query",
            "description": "Secret answer of your account.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Secret Answer",
              "type": "string",
              "description": "Secret answer of your account."
            }
          },
          {
            "name": "comment",
            "in": "query",
            "description": "Transfer comment.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Comment",
              "maxLength": 255,
              "type": "string",
              "description": "Transfer comment."
            }
          },
          {
            "name": "transfer_hold",
            "in": "query",
            "description": "Hold transfer or not.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Transfer Hold",
              "type": "boolean",
              "description": "Hold transfer or not."
            }
          },
          {
            "name": "hold_length_value",
            "in": "query",
            "description": "Hold length value.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Hold Length Value",
              "type": "integer",
              "description": "Hold length value.",
              "minimum": 1
            }
          },
          {
            "name": "hold_length_option",
            "in": "query",
            "description": "Hold length option.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Hold Length Option",
              "type": "string",
              "description": "Hold length option.",
              "enum": [
                "hour",
                "day",
                "week",
                "month",
                "year"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/OkStatus"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "description": "Error Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Invalid Secret Answer",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "default": "You entered invalid secret answer."
                      }
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "User Not Found",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "default": "The requested user could not be found."
                      }
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/user/{userId}/payments": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Payments History",
        "description": "Displays list of your payments.",
        "operationId": "paymentsList.history",
        "parameters": [
          {
            "$ref": "#/components/parameters/userId"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of operation.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Type",
              "type": "string",
              "description": "Type of operation.",
              "enum": [
                "income",
                "cost",
                "refilled_balance",
                "withdrawal_balance",
                "paid_item",
                "sold_item",
                "money_transfer",
                "receiving_money",
                "internal_purchase",
                "claim_hold",
                "insurance_deposit"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/pmin"
          },
          {
            "$ref": "#/components/parameters/pmax"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "name": "operation_id_lt",
            "in": "query",
            "description": "Id of the operation from which the result begins.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Operation Id lt",
              "type": "integer",
              "description": "Id of the operation from which the result begins."
            }
          },
          {
            "name": "receiver",
            "in": "query",
            "description": "Username of user, which receive money from you.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Receiver",
              "type": "string",
              "description": "Username of user, which receive money from you."
            }
          },
          {
            "name": "sender",
            "in": "query",
            "description": "Username of user, which sent money to you.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Sender",
              "type": "string",
              "description": "Username of user, which sent money to you."
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date of operation (RFC 3339 date format).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Startdate",
              "type": "string",
              "description": "Start date of operation (RFC 3339 date format)."
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date of operation (RFC 3339 date format).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Enddate",
              "type": "string",
              "description": "End date of operation (RFC 3339 date format)."
            }
          },
          {
            "name": "wallet",
            "in": "query",
            "description": "Wallet, which used for money payouts.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Wallet",
              "type": "string",
              "description": "Wallet, which used for money payouts."
            }
          },
          {
            "name": "comment",
            "in": "query",
            "description": "Comment for money transfers.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Comment",
              "type": "string",
              "description": "Comment for money transfers."
            }
          },
          {
            "name": "is_hold",
            "in": "query",
            "description": "Display hold operations.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Is Hold",
              "type": "boolean",
              "description": "Display hold operations."
            }
          },
          {
            "name": "show_payment_stats",
            "in": "query",
            "description": "Display payment stats for selected period (outgoing value, incoming value).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Show Payment Stats",
              "type": "boolean",
              "description": "Display payment stats for selected period (outgoing value, incoming value)."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HistoryPaymentsModel",
                  "required": [
                    "hasNextPage",
                    "lastOperationId",
                    "nextPageHref",
                    "payments",
                    "system_info"
                  ],
                  "type": "object",
                  "properties": {
                    "payments": {
                      "title": "Payments",
                      "required": [
                        "payment"
                      ],
                      "type": "object",
                      "properties": {
                        "payment": {
                          "title": "Payment",
                          "type": "string"
                        }
                      }
                    },
                    "hasNextPage": {
                      "title": "Hasnextpage",
                      "type": "boolean"
                    },
                    "lastOperationId": {
                      "title": "Lastoperationid",
                      "type": "integer"
                    },
                    "nextPageHref": {
                      "title": "Nextpagehref",
                      "type": "string"
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/NoPermissionModel"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/proxy": {
      "get": {
        "tags": [
          "Proxy"
        ],
        "summary": "Get Proxy",
        "description": "Gets your proxy list.",
        "operationId": "proxySettings.get",
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProxyModel",
                  "required": [
                    "proxies",
                    "system_info"
                  ],
                  "type": "object",
                  "properties": {
                    "proxies": {
                      "title": "Proxies",
                      "type": "array",
                      "items": {
                        "title": "Proxy",
                        "required": [
                          "proxy"
                        ],
                        "type": "object",
                        "properties": {
                          "proxy": {
                            "title": "Proxy1",
                            "required": [
                              "proxyString",
                              "proxy_id",
                              "proxy_ip",
                              "proxy_pass",
                              "proxy_port",
                              "proxy_user",
                              "user_id"
                            ],
                            "type": "object",
                            "properties": {
                              "proxy_id": {
                                "title": "Proxy Id",
                                "type": "integer"
                              },
                              "user_id": {
                                "title": "User Id",
                                "type": "integer"
                              },
                              "proxy_ip": {
                                "title": "Proxy Ip",
                                "type": "string"
                              },
                              "proxy_port": {
                                "title": "Proxy Port",
                                "type": "integer"
                              },
                              "proxy_user": {
                                "title": "Proxy User",
                                "type": "string"
                              },
                              "proxy_pass": {
                                "title": "Proxy Pass",
                                "type": "string"
                              },
                              "proxyString": {
                                "title": "Proxystring",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Proxy"
        ],
        "summary": "Add Proxy",
        "description": "Add single proxy or proxy list.\n\n\nTo add single proxy use this parameters:\n\n\n+ **proxy_ip** (required) - proxy ip or host\n+ **proxy_port** (required) - proxy port\n+ **proxy_user** (optional) - proxy username\n+ **proxy_pass** (optional) - proxy password\n\nTo add proxy list use this parameters:\n\n\n+ **proxy_row** (required) - proxy list in String format ip:port:user:pass. Each proxy must be start with new line (use \\n separator)",
        "operationId": "proxySettings.add",
        "parameters": [
          {
            "name": "proxy_ip",
            "in": "query",
            "description": "Proxy ip or host. Required if **proxy_row** is not specified.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Proxy Ip",
              "type": "string",
              "description": "Proxy ip or host. Required if **proxy_row** is not specified."
            }
          },
          {
            "name": "proxy_port",
            "in": "query",
            "description": "Proxy port. Required if **proxy_row** is not specified.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Proxy Port",
              "type": "integer",
              "description": "Proxy port. Required if **proxy_row** is not specified."
            }
          },
          {
            "name": "proxy_user",
            "in": "query",
            "description": "Proxy username. Required if **proxy_row** is not specified.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Proxy User",
              "type": "string",
              "description": "Proxy username. Required if **proxy_row** is not specified."
            }
          },
          {
            "name": "proxy_pass",
            "in": "query",
            "description": "Proxy password. Required if **proxy_row** is not specified.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Proxy Pass",
              "type": "string",
              "description": "Proxy password. Required if **proxy_row** is not specified."
            }
          },
          {
            "name": "proxy_row",
            "in": "query",
            "description": "Proxy list in String format ip:port:user:pass. Each proxy must be start with new line (use \\n separator)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Proxy Row",
              "type": "string",
              "description": "Proxy list in String format ip:port:user:pass. Each proxy must be start with new line (use \\r\\n separator)"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SaveChanges"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "400": {
            "description": "Error Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Incorrect Proxy",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "default": "Please enter correct proxy row like ip:port:user:pass."
                      }
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Proxy"
        ],
        "summary": "Delete Proxy",
        "description": "Delete single or all proxies.",
        "operationId": "proxySettings.delete",
        "parameters": [
          {
            "name": "proxy_id",
            "in": "query",
            "description": "Id of an existing proxy.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Proxy Id",
              "type": "integer",
              "description": "Id of an existing proxy."
            }
          },
          {
            "name": "delete_all",
            "in": "query",
            "description": "True. If you want to delete all proxy.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Delete All",
              "type": "boolean",
              "description": "True. If you want to delete all proxy."
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SaveChanges"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "description": "Error Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Proxy Not Found",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "default": "Requested proxy server not found."
                      }
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    },
    "/batch": {
      "post": {
        "tags": [
          "Batch requests"
        ],
        "summary": "Batch",
        "description": "Execute multiple API requests at once (Separated by comma). Maximum batch jobs is 10.",
        "operationId": "batchRequests.execute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "BatchModel",
                "type": "array",
                "maxItems": 10,
                "items": {
                  "title": "Batch Job",
                  "required": [
                    "uri"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Id",
                      "type": "string",
                      "description": "identifier for the job, will be use in output as key of a result set. If this parameter is not set, the URI will be used."
                    },
                    "uri": {
                      "title": "Uri",
                      "type": "string",
                      "description": "URI of the API request to execute."
                    },
                    "method": {
                      "title": "Method",
                      "type": "string",
                      "description": "HTTP method of the API request to execute. If this parameter is not set, GET HTTP method will be used.",
                      "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE"
                      ]
                    },
                    "params": {
                      "title": "Params",
                      "required": [
                        "key"
                      ],
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "parameters of the API request to execute."
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "JobsModel",
                  "required": [
                    "jobs"
                  ],
                  "type": "object",
                  "properties": {
                    "jobs": {
                      "title": "Jobs",
                      "required": [
                        "job_id"
                      ],
                      "type": "object",
                      "properties": {
                        "job_id": {
                          "title": "JobId",
                          "type": "object",
                          "properties": {
                            "_job_result": {
                              "type": "string"
                            },
                            "_job_error": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "400": {
            "description": "Error Response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Invalid Batch",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "default": "/batch requires valid JSON for jobs input."
                      }
                    },
                    "system_info": {
                      "$ref": "#/components/schemas/SystemInfo"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [
              "market"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ConfCodeModel": {
        "title": "ConfCodeModel",
        "required": [
          "codeData",
          "item"
        ],
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/ItemModel"
          },
          "codeData": {
            "title": "CodeData",
            "required": [
              "code",
              "date",
              "textPlain"
            ],
            "type": "object",
            "properties": {
              "code": {
                "title": "Code",
                "type": "string"
              },
              "date": {
                "title": "Date",
                "type": "integer"
              },
              "textPlain": {
                "title": "Textplain",
                "type": "string"
              }
            }
          }
        }
      },
      "TelegramClientModel": {
        "title": "Telegram client",
        "type": "string",
        "example": "{\"telegram_api_id\": integer, \"telegram_api_hash\": string, \"telegram_device_model\": string, \"telegram_system_version\": string, \"telegram_app_version\": string}"
      },
      "CurrencyModel": {
        "title": "Currency",
        "type": "string",
        "description": "Using currency.",
        "enum": [
          "rub",
          "uah",
          "kzt",
          "byn",
          "usd",
          "eur",
          "gbp",
          "cny",
          "try"
        ]
      },
      "DatePeriodModel": {
        "type": "string",
        "enum": [
          "day",
          "month",
          "year"
        ],
        "description": "In what notation is time measured."
      },
      "YesNoNoMatterScheme": {
        "type": "string",
        "enum": [
          "yes",
          "no",
          "nomatter"
        ]
      },
      "ItemListModel": {
        "title": "Item List Model",
        "required": [
          "items",
          "totalItems",
          "totalItemsPrice",
          "perPage",
          "page",
          "cacheTTL",
          "lastModified",
          "searchUrl",
          "stickyItems",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemFromListModel"
            }
          },
          "totalItems": {
            "type": "integer",
            "default": 0
          },
          "totalItemsPrice": {
            "type": "integer",
            "default": 0
          },
          "perPage": {
            "type": "integer",
            "default": 40
          },
          "page": {
            "type": "integer",
            "default": 1
          },
          "cacheTTL": {
            "type": "integer",
            "default": 0
          },
          "lastModified": {
            "type": "integer",
            "default": 0
          },
          "searchUrl": {
            "type": "string",
            "default": "/"
          },
          "stickyItems": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "system_info": {
            "$ref": "#/components/schemas/SystemInfo"
          }
        }
      },
      "ItemFromListModel": {
        "required": [
          "visitor_id",
          "time"
        ],
        "properties": {
          "item_id": {
            "type": "integer",
            "default": 0
          },
          "item_state": {
            "type": "string",
            "default": "active"
          },
          "category_id": {
            "type": "integer",
            "default": 0
          },
          "published_date": {
            "type": "integer",
            "default": 0
          },
          "title": {
            "type": "string",
            "default": "Title"
          },
          "description": {
            "type": "string",
            "default": "Description"
          },
          "price": {
            "type": "integer",
            "default": 0
          },
          "update_stat_date": {
            "type": "integer",
            "default": 0
          },
          "refreshed_date": {
            "type": "integer",
            "default": 0
          },
          "view_count": {
            "type": "integer",
            "default": 0
          },
          "is_sticky": {
            "type": "integer",
            "default": 0
          },
          "item_origin": {
            "type": "string",
            "default": "string"
          },
          "extended_guarantee": {
            "type": "integer",
            "default": 0
          },
          "nsb": {
            "type": "integer",
            "default": 0
          },
          "allow_ask_discount": {
            "type": "integer",
            "default": 0
          },
          "title_en": {
            "type": "string",
            "default": "Title EN"
          },
          "description_en": {
            "type": "string",
            "default": "Description EN"
          },
          "is_reserved": {
            "type": "integer",
            "default": 0
          },
          "item_domain": {
            "type": "string",
            "default": "string"
          },
          "active_auction": {
            "type": "integer",
            "default": 0
          },
          "resale_item_origin": {
            "type": "string",
            "default": "string"
          },
          "isIgnored": {
            "type": "integer",
            "default": 0
          },
          "guarantee": {
            "type": "boolean",
            "default": null
          },
          "canViewLoginData": {
            "type": "boolean",
            "default": false
          },
          "canUpdateItemStats": {
            "type": "boolean",
            "default": false
          },
          "canViewEmailLoginData": {
            "type": "boolean",
            "default": false
          },
          "showGetEmailCodeButton": {
            "type": "boolean",
            "default": false
          },
          "canOpenItem": {
            "type": "boolean",
            "default": false
          },
          "canCloseItem": {
            "type": "boolean",
            "default": false
          },
          "canEditItem": {
            "type": "boolean",
            "default": false
          },
          "canDeleteItem": {
            "type": "boolean",
            "default": false
          },
          "canStickItem": {
            "type": "boolean",
            "default": false
          },
          "canUnstickItem": {
            "type": "boolean",
            "default": false
          },
          "bumpSettings": {
            "type": "object",
            "properties": {
              "canBumpItem": {
                "type": "boolean",
                "default": false
              },
              "canBumpItemGlobally": {
                "type": "boolean",
                "default": false
              },
              "shortErrorPhrase": {
                "type": "string",
                "default": null
              },
              "errorPhrase": {
                "type": "string",
                "default": null
              }
            }
          },
          "canBumpItem": {
            "type": "boolean",
            "default": false
          },
          "canBuyItem": {
            "type": "boolean",
            "default": false
          },
          "rub_price": {
            "type": "integer",
            "default": 0
          },
          "price_currency": {
            "type": "string",
            "default": "rub"
          },
          "canValidateAccount": {
            "type": "boolean",
            "default": false
          },
          "canResellItemAfterPurchase": {
            "type": "boolean",
            "default": false
          },
          "canViewAccountLink": {
            "type": "boolean",
            "default": false
          },
          "itemOriginPhrase": {
            "type": "string",
            "default": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "note_text": {
            "type": "string",
            "default": null
          },
          "auction": {
            "type": "array",
            "items": {}
          },
          "reserve": {
            "type": "object",
            "properties": {
              "reserve_user_id": {
                "type": "integer"
              },
              "reserve_price": {
                "type": "integer",
                "default": 0
              },
              "reserve_date": {
                "type": "integer",
                "default": 0
              }
            }
          },
          "description_html": {
            "type": "string",
            "default": "Description HTML"
          },
          "description_html_en": {
            "type": "string",
            "default": "Description HTML EN"
          },
          "seller": {
            "type": "object",
            "properties": {
              "user_id": {
                "type": "integer",
                "default": 0
              },
              "sold_items_count": {
                "type": "integer",
                "default": 0
              },
              "active_item_count": {
                "type": "integer",
                "default": 0
              },
              "restore_data": {
                "type": "string",
                "default": "string"
              },
              "username": {
                "type": "string",
                "default": "string"
              },
              "avatar_date": {
                "type": "integer",
                "default": 0
              },
              "is_banned": {
                "type": "integer",
                "default": 0
              },
              "display_style_group_id": {
                "type": "integer",
                "default": 0
              },
              "restore_percents": {
                "type": "integer",
                "default": 0
              }
            }
          }
        }
      },
      "ItemModel": {
        "title": "Item",
        "required": [
          "description",
          "information",
          "item_id",
          "item_origin",
          "item_state",
          "login",
          "price",
          "published_date",
          "refreshed_date",
          "temp_email",
          "title",
          "update_stat_date",
          "view_count",
          "category_id"
        ],
        "type": "object",
        "properties": {
          "item_id": {
            "title": "Item Id",
            "type": "integer"
          },
          "item_state": {
            "title": "Item State",
            "type": "string"
          },
          "category_id": {
            "title": "Category id",
            "type": "integer"
          },
          "published_date": {
            "title": "Published Date",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "price": {
            "title": "Price",
            "type": "integer"
          },
          "update_stat_date": {
            "title": "Update Stat Date",
            "type": "integer"
          },
          "refreshed_date": {
            "title": "Refreshed Date",
            "type": "integer"
          },
          "login": {
            "title": "Login",
            "type": "string"
          },
          "temp_email": {
            "title": "Temp Email",
            "type": "string"
          },
          "view_count": {
            "title": "View Count",
            "type": "integer"
          },
          "information": {
            "title": "Information",
            "type": "string"
          },
          "item_origin": {
            "title": "Item Origin",
            "type": "string"
          }
        }
      },
      "AuctionModel": {
        "type": "object",
        "properties": {
          "itemId": {
            "title": "Item id",
            "type": "integer"
          },
          "bids": {
            "title": "Bids",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bid_id": {
                  "title": "Bid",
                  "type": "integer"
                },
                "bid_value": {
                  "title": "Bid",
                  "type": "object",
                  "properties": {
                    "rub": {
                      "title": "Rub",
                      "type": "string"
                    },
                    "uah": {
                      "title": "Uah",
                      "type": "string"
                    },
                    "kzt": {
                      "title": "Kzt",
                      "type": "string"
                    },
                    "byn": {
                      "title": "Byn",
                      "type": "string"
                    },
                    "usd": {
                      "title": "Usd",
                      "type": "string"
                    },
                    "eur": {
                      "title": "Eur",
                      "type": "string"
                    },
                    "gbp": {
                      "title": "Gbp",
                      "type": "string"
                    },
                    "cny": {
                      "title": "Cny",
                      "type": "string"
                    },
                    "try": {
                      "title": "Try",
                      "type": "string"
                    }
                  },
                  "required": [
                    "rub",
                    "uah",
                    "kzt",
                    "byn",
                    "usd",
                    "eur",
                    "gbp",
                    "cny",
                    "try"
                  ]
                },
                "minAllowedBidValue": {
                  "title": "Min allowed bid value",
                  "type": "object",
                  "properties": {
                    "rub": {
                      "title": "Rub",
                      "type": "integer"
                    },
                    "uah": {
                      "title": "Uah",
                      "type": "number"
                    },
                    "kzt": {
                      "title": "Kzt",
                      "type": "number"
                    },
                    "byn": {
                      "title": "Byn",
                      "type": "number"
                    },
                    "usd": {
                      "title": "Usd",
                      "type": "number"
                    },
                    "eur": {
                      "title": "Eur",
                      "type": "number"
                    },
                    "gbp": {
                      "title": "Gbp",
                      "type": "number"
                    },
                    "cny": {
                      "title": "Cny",
                      "type": "number"
                    },
                    "try": {
                      "title": "Try",
                      "type": "number"
                    }
                  },
                  "required": [
                    "rub",
                    "uah",
                    "kzt",
                    "byn",
                    "usd",
                    "eur",
                    "gbp",
                    "cny",
                    "try"
                  ]
                },
                "bid_previous_value": {
                  "title": "Bid",
                  "type": "object",
                  "properties": {
                    "rub": {
                      "title": "Rub",
                      "type": "string"
                    },
                    "uah": {
                      "title": "Uah",
                      "type": "string"
                    },
                    "kzt": {
                      "title": "Kzt",
                      "type": "string"
                    },
                    "byn": {
                      "title": "Byn",
                      "type": "string"
                    },
                    "usd": {
                      "title": "Usd",
                      "type": "string"
                    },
                    "eur": {
                      "title": "Eur",
                      "type": "string"
                    },
                    "gbp": {
                      "title": "Gbp",
                      "type": "string"
                    },
                    "cny": {
                      "title": "Cny",
                      "type": "string"
                    },
                    "try": {
                      "title": "Try",
                      "type": "string"
                    }
                  },
                  "required": [
                    "rub",
                    "uah",
                    "kzt",
                    "byn",
                    "usd",
                    "eur",
                    "gbp",
                    "cny",
                    "try"
                  ]
                },
                "user": {
                  "title": "User",
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "title": "User",
                      "type": "integer"
                    },
                    "avatar": {
                      "title": "Avatar",
                      "type": "string"
                    },
                    "usernameHtml": {
                      "title": "Username html",
                      "type": "string"
                    }
                  },
                  "required": [
                    "user_id",
                    "avatar",
                    "usernameHtml"
                  ]
                },
                "bid_date": {
                  "title": "Bid",
                  "type": "integer"
                },
                "canCancelBid": {
                  "title": "Can cancel bid",
                  "type": "boolean"
                },
                "endTimeAuction": {
                  "title": "End time auction",
                  "type": "integer"
                },
                "isYourBid": {
                  "title": "Is your bid",
                  "type": "boolean"
                }
              },
              "required": [
                "bid_id",
                "bid_value",
                "minAllowedBidValue",
                "bid_previous_value",
                "user",
                "bid_date",
                "canCancelBid",
                "endTimeAuction",
                "isYourBid"
              ]
            }
          },
          "is_finished": {
            "title": "Is Finished",
            "type": "integer"
          },
          "endTime": {
            "title": "End time",
            "type": "integer"
          },
          "currencies": {
            "title": "Currencies",
            "type": "object",
            "properties": {
              "rub": {
                "title": "Rub",
                "type": "object",
                "properties": {
                  "title": {
                    "title": "Title",
                    "type": "string"
                  },
                  "symbol": {
                    "title": "Symbol",
                    "type": "string"
                  },
                  "rate": {
                    "title": "Rate",
                    "type": "integer"
                  }
                },
                "required": [
                  "title",
                  "symbol",
                  "rate"
                ]
              },
              "uah": {
                "title": "Uah",
                "type": "object",
                "properties": {
                  "title": {
                    "title": "Title",
                    "type": "string"
                  },
                  "symbol": {
                    "title": "Symbol",
                    "type": "string"
                  },
                  "rate": {
                    "title": "Rate",
                    "type": "number"
                  }
                },
                "required": [
                  "title",
                  "symbol",
                  "rate"
                ]
              },
              "kzt": {
                "title": "Kzt",
                "type": "object",
                "properties": {
                  "title": {
                    "title": "Title",
                    "type": "string"
                  },
                  "symbol": {
                    "title": "Symbol",
                    "type": "string"
                  },
                  "rate": {
                    "title": "Rate",
                    "type": "number"
                  }
                },
                "required": [
                  "title",
                  "symbol",
                  "rate"
                ]
              },
              "byn": {
                "title": "Byn",
                "type": "object",
                "properties": {
                  "title": {
                    "title": "Title",
                    "type": "string"
                  },
                  "symbol": {
                    "title": "Symbol",
                    "type": "string"
                  },
                  "rate": {
                    "title": "Rate",
                    "type": "number"
                  }
                },
                "required": [
                  "title",
                  "symbol",
                  "rate"
                ]
              },
              "usd": {
                "title": "Usd",
                "type": "object",
                "properties": {
                  "title": {
                    "title": "Title",
                    "type": "string"
                  },
                  "symbol": {
                    "title": "Symbol",
                    "type": "string"
                  },
                  "rate": {
                    "title": "Rate",
                    "type": "number"
                  }
                },
                "required": [
                  "title",
                  "symbol",
                  "rate"
                ]
              },
              "eur": {
                "title": "Eur",
                "type": "object",
                "properties": {
                  "title": {
                    "title": "Title",
                    "type": "string"
                  },
                  "symbol": {
                    "title": "Symbol",
                    "type": "string"
                  },
                  "rate": {
                    "title": "Rate",
                    "type": "number"
                  }
                },
                "required": [
                  "title",
                  "symbol",
                  "rate"
                ]
              },
              "gbp": {
                "title": "Gbp",
                "type": "object",
                "properties": {
                  "title": {
                    "title": "Title",
                    "type": "string"
                  },
                  "symbol": {
                    "title": "Symbol",
                    "type": "string"
                  },
                  "rate": {
                    "title": "Rate",
                    "type": "number"
                  }
                },
                "required": [
                  "title",
                  "symbol",
                  "rate"
                ]
              },
              "cny": {
                "title": "Cny",
                "type": "object",
                "properties": {
                  "title": {
                    "title": "Title",
                    "type": "string"
                  },
                  "symbol": {
                    "title": "Symbol",
                    "type": "string"
                  },
                  "rate": {
                    "title": "Rate",
                    "type": "number"
                  }
                },
                "required": [
                  "title",
                  "symbol",
                  "rate"
                ]
              },
              "try": {
                "title": "Try",
                "type": "object",
                "properties": {
                  "title": {
                    "title": "Title",
                    "type": "string"
                  },
                  "symbol": {
                    "title": "Symbol",
                    "type": "string"
                  },
                  "rate": {
                    "title": "Rate",
                    "type": "number"
                  }
                },
                "required": [
                  "title",
                  "symbol",
                  "rate"
                ]
              }
            },
            "required": [
              "rub",
              "uah",
              "kzt",
              "byn",
              "usd",
              "eur",
              "gbp",
              "cny",
              "try"
            ]
          },
          "userCurrency": {
            "title": "User currency",
            "type": "string"
          },
          "minAllowedBidValue": {
            "title": "Min allowed bid value",
            "type": "object",
            "properties": {
              "rub": {
                "title": "Rub",
                "type": "integer"
              },
              "uah": {
                "title": "Uah",
                "type": "number"
              },
              "kzt": {
                "title": "Kzt",
                "type": "number"
              },
              "byn": {
                "title": "Byn",
                "type": "number"
              },
              "usd": {
                "title": "Usd",
                "type": "number"
              },
              "eur": {
                "title": "Eur",
                "type": "number"
              },
              "gbp": {
                "title": "Gbp",
                "type": "number"
              },
              "cny": {
                "title": "Cny",
                "type": "number"
              },
              "try": {
                "title": "Try",
                "type": "number"
              }
            },
            "required": [
              "rub",
              "uah",
              "kzt",
              "byn",
              "usd",
              "eur",
              "gbp",
              "cny",
              "try"
            ]
          },
          "startValue": {
            "title": "Start value",
            "type": "object",
            "properties": {
              "rub": {
                "title": "Rub",
                "type": "integer"
              },
              "uah": {
                "title": "Uah",
                "type": "number"
              },
              "kzt": {
                "title": "Kzt",
                "type": "number"
              },
              "byn": {
                "title": "Byn",
                "type": "number"
              },
              "usd": {
                "title": "Usd",
                "type": "number"
              },
              "eur": {
                "title": "Eur",
                "type": "number"
              },
              "gbp": {
                "title": "Gbp",
                "type": "number"
              },
              "cny": {
                "title": "Cny",
                "type": "number"
              },
              "try": {
                "title": "Try",
                "type": "number"
              }
            },
            "required": [
              "rub",
              "uah",
              "kzt",
              "byn",
              "usd",
              "eur",
              "gbp",
              "cny",
              "try"
            ]
          },
          "system_info": {
            "$ref": "#/components/schemas/SystemInfo"
          }
        }
      },
      "SystemInfo": {
        "required": [
          "visitor_id",
          "time"
        ],
        "properties": {
          "visitor_id": {
            "type": "integer",
            "default": 0
          },
          "time": {
            "type": "integer",
            "default": 0
          }
        }
      },
      "YesNoNM": {
        "type": "string",
        "enum": [
          "yes",
          "no",
          "nomatter"
        ]
      }
    },
    "responses": {
      "Tag": {
        "description": "Successful Response.",
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "addedTagId",
                "deleteTags",
                "itemId",
                "system_info",
                "tag"
              ],
              "type": "object",
              "properties": {
                "itemId": {
                  "title": "Itemid",
                  "type": "integer"
                },
                "tag": {
                  "title": "Tag",
                  "required": [
                    "bc",
                    "forOwnedAccountsOnly",
                    "isDefault",
                    "tag_id",
                    "title"
                  ],
                  "type": "object",
                  "properties": {
                    "tag_id": {
                      "title": "Tag Id",
                      "type": "integer"
                    },
                    "title": {
                      "title": "Title",
                      "type": "string"
                    },
                    "isDefault": {
                      "title": "Isdefault",
                      "type": "boolean"
                    },
                    "forOwnedAccountsOnly": {
                      "title": "Forownedaccountsonly",
                      "type": "boolean"
                    },
                    "bc": {
                      "title": "Bc",
                      "type": "string"
                    }
                  }
                },
                "addedTagId": {
                  "title": "Addedtagid",
                  "type": "integer"
                },
                "deleteTags": {
                  "title": "Deletetags",
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "system_info": {
                  "$ref": "#/components/schemas/SystemInfo"
                }
              }
            }
          }
        }
      },
      "SaveChanges": {
        "description": "Successful Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "SaveChangesModel",
              "type": "object",
              "properties": {
                "status": {
                  "title": "Status",
                  "type": "string",
                  "default": "ok"
                },
                "message": {
                  "title": "Message",
                  "type": "string",
                  "default": "Changes Saved"
                },
                "system_info": {
                  "$ref": "#/components/schemas/SystemInfo"
                }
              }
            }
          }
        }
      },
      "OkStatus": {
        "description": "Successful Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "OkModel",
              "required": [
                "status",
                "message",
                "system_info"
              ],
              "type": "object",
              "properties": {
                "status": {
                  "title": "Status",
                  "type": "string",
                  "default": "ok"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                },
                "system_info": {
                  "$ref": "#/components/schemas/SystemInfo"
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "content": {
          "application/json": {
            "schema": {
              "title": "Unauthorized",
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "errors": [
                  "Invalid or expired access token."
                ]
              }
            }
          }
        },
        "description": "Unauthorized"
      },
      "ItemListResponse": {
        "description": "Successful Response.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemListModel"
            }
          }
        }
      },
      "AdNotFoundModel": {
        "description": "Error Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "Ad Not Found",
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "default": "Ad not found."
                  }
                },
                "system_info": {
                  "$ref": "#/components/schemas/SystemInfo"
                }
              }
            },
            "examples": {
              "AdNotFound": {
                "summary": "Ad not found error",
                "value": {
                  "errors": [
                    "Ad not found."
                  ],
                  "system_info": {
                    "visitor_id": 0,
                    "time": 0
                  }
                }
              }
            }
          }
        }
      },
      "NoPermissionModel": {
        "description": "Error Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "No Permission Error",
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "default": "You do not have permission to view this page or perform this action."
                  }
                },
                "system_info": {
                  "$ref": "#/components/schemas/SystemInfo"
                }
              }
            },
            "examples": {
              "NoPermission": {
                "summary": "No permission",
                "value": {
                  "errors": [
                    "You do not have permission to view this page or perform this action."
                  ],
                  "system_info": {
                    "visitor_id": 0,
                    "time": 0
                  }
                }
              }
            }
          }
        }
      },
      "ErrorModel": {
        "description": "Error Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "Market Error",
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "default": "default"
                  }
                },
                "system_info": {
                  "$ref": "#/components/schemas/SystemInfo"
                }
              }
            },
            "examples": {
              "Captcha": {
                "summary": "Captcha error",
                "value": {
                  "errors": [
                    "captcha"
                  ],
                  "system_info": {
                    "visitor_id": 0,
                    "time": 0
                  }
                }
              },
              "Sold": {
                "summary": "Item is sold error",
                "value": {
                  "errors": [
                    "This item is sold."
                  ],
                  "system_info": {
                    "visitor_id": 0,
                    "time": 0
                  }
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "price": {
        "name": "price",
        "in": "query",
        "description": "Current price of account in your currency.",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Price",
          "type": "integer",
          "description": "Current price of account in your currency.",
          "minimum": 1
        }
      },
      "app_id": {
        "name": "app_id",
        "in": "query",
        "description": "Application id.\n+ 730 - CS2\n+ 578080 - PUBG\n+ 753 - Steam\n+ 570 - Dota 2\n+ 440 - Team Fortress 2\n+ 252490 - Rust\n+ 304930 - Unturned\n+ 232090 - Killing Floor 2\n+ 322330 - Don't Starve Together",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "App Id",
          "type": "integer",
          "description": "Application id.\n+ 730 - CS2\n+ 578080 - PUBG\n+ 753 - Steam\n+ 570 - Dota 2\n+ 440 - Team Fortress 2\n+ 252490 - Rust\n+ 304930 - Unturned\n+ 232090 - Killing Floor 2\n+ 322330 - Don't Starve Together",
          "enum": [
            730,
            578080,
            753,
            570,
            440,
            252490,
            304930,
            232090,
            322330
          ]
        }
      },
      "bidId": {
        "name": "bid_id",
        "in": "query",
        "description": "Bid id.",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Bid Id",
          "type": "integer",
          "description": "Bid id."
        }
      },
      "currency": {
        "name": "currency",
        "in": "query",
        "description": "Using currency.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "$ref": "#/components/schemas/CurrencyModel"
        }
      },
      "amount": {
        "name": "amount",
        "in": "query",
        "description": "Amount bid.",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Amount",
          "type": "number",
          "description": "Amount bid.",
          "minimum": 1
        }
      },
      "categoryName": {
        "name": "categoryName",
        "in": "path",
        "description": "Category name.",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "title": "Categoryname",
          "type": "string",
          "description": "Category name.",
          "default": "steam",
          "enum": [
            "steam",
            "fortnite",
            "vkontakte",
            "genshin-impact",
            "valorant",
            "league-of-legends",
            "telegram",
            "supercell",
            "origin",
            "world-of-tanks",
            "wot-blitz",
            "epicgames",
            "escape-from-tarkov",
            "socialclub",
            "uplay",
            "war-thunder",
            "discord",
            "tiktok",
            "instagram",
            "battlenet",
            "vpn",
            "cinema",
            "spotify",
            "warface",
            "youtube"
          ]
        }
      },
      "itemId": {
        "name": "itemId",
        "in": "path",
        "description": "Item id.",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "title": "Itemid",
          "type": "integer",
          "description": "Item id."
        }
      },
      "userId": {
        "name": "userId",
        "in": "path",
        "description": "User id.",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "title": "Userid",
          "type": "integer",
          "description": "User id."
        }
      },
      "category_id": {
        "name": "category_id",
        "in": "query",
        "description": "Accounts category.\n+ 1 - Steam\n+ 2 - VK\n+ 3 - Origin\n+ 4 - Warface\n+ 5 - Uplay\n+ 7 - Social Club\n+ 9 - Fortnite\n+ 10 - Instagram\n+ 11 - Battlenet\n+ 12 - Epic Games\n+ 13 - Valorant\n+ 14 - World Of Tanks\n+ 16 - WOT Blitz\n+ 15 - Supercell\n+ 17 - miHoYo\n+ 18 - Escape From Tarkov\n+ 19 - VPN\n+ 20 - Tiktok\n+ 22 - Discord\n+ 23 - Cinema\n+ 24 - Telegram\n+ 25 - Youtube\n+ 26 - Spotify\n+ 27 - War Thunder\n+ 29 - League of Legends",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Category Id",
          "type": "integer",
          "description": "Accounts category.",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            7,
            9,
            10,
            11,
            12,
            13,
            14,
            16,
            15,
            17,
            18,
            19,
            20,
            22,
            23,
            24,
            25,
            26,
            27,
            29
          ]
        }
      },
      "show": {
        "name": "show",
        "in": "query",
        "description": "Account status.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Show",
          "type": "string",
          "enum": [
            "active",
            "paid",
            "deleted",
            "awaiting"
          ],
          "description": "Account Status."
        }
      },
      "delete_reason": {
        "name": "delete_reason",
        "in": "query",
        "description": "Delete reason. (Only if **show** is set to **deleted**)",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Delete reason",
          "type": "string",
          "description": "Delete reason. (Only if **show** is set to **deleted**)"
        }
      },
      "smin": {
        "name": "smin",
        "in": "query",
        "description": "Minimum number of skins.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Smin",
          "type": "integer",
          "minimum": 0,
          "description": "Minimum number of skins."
        }
      },
      "smax": {
        "name": "smax",
        "in": "query",
        "description": "Maximum number of skins.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Smax",
          "type": "integer",
          "minimum": 0,
          "description": "Maximum number of skins."
        }
      },
      "order_by": {
        "name": "order_by",
        "in": "query",
        "description": "Order by.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Order By",
          "description": "Order by.",
          "type": "string",
          "enum": [
            "price_to_up",
            "price_to_down",
            "pdate_to_down",
            "pdate_to_down_upload",
            "pdate_to_up",
            "pdate_to_up_upload",
            "exp_auctions"
          ]
        }
      },
      "title": {
        "name": "title",
        "in": "query",
        "description": "The word or words contained in the account title.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Title",
          "type": "string",
          "description": "The word or words contained in the account title."
        }
      },
      "nsb_by_me": {
        "name": "nsb_by_me",
        "in": "query",
        "description": "Not sold by me before.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Not Sold By Me",
          "type": "boolean",
          "description": "Not sold by me before."
        }
      },
      "sb_by_me": {
        "name": "sb_by_me",
        "in": "query",
        "description": "Sold by me before.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Sold By Me",
          "type": "boolean",
          "description": "Sold by me before."
        }
      },
      "nsb": {
        "name": "nsb",
        "in": "query",
        "description": "Not sold before.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Not Sold Before",
          "type": "boolean",
          "description": "Not sold before."
        }
      },
      "sb": {
        "name": "sb",
        "in": "query",
        "description": "Sold before.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Sold Before",
          "type": "boolean",
          "description": "Sold before."
        }
      },
      "origin": {
        "name": "origin[]",
        "in": "query",
        "description": "List of account origins.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Origin",
          "type": "array",
          "description": "List of account origins.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "brute",
              "fishing",
              "stealer",
              "personal",
              "resale",
              "autoreg",
              "dummy"
            ]
          }
        }
      },
      "not_origin": {
        "name": "not_origin[]",
        "in": "query",
        "description": "List of account origins that won't be included.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Not Origin",
          "description": "List of account origins that won't be included.",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "brute",
              "fishing",
              "stealer",
              "personal",
              "resale",
              "autoreg",
              "dummy"
            ]
          }
        }
      },
      "auction": {
        "name": "auction",
        "in": "query",
        "description": "Auction.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Auction",
          "description": "Auction.",
          "$ref": "#/components/schemas/YesNoNM"
        }
      },
      "item_domain": {
        "name": "item_domain",
        "in": "query",
        "description": "Domain of native/autoreg email.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Item Domain",
          "type": "string",
          "description": "Domain of native/autoreg email."
        }
      },
      "email_type": {
        "name": "email_type[]",
        "in": "query",
        "description": "Email type.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Email Type",
          "description": "Email type.",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "market",
              "autoreg",
              "native",
              "no_market",
              "no"
            ]
          }
        }
      },
      "page": {
        "name": "page",
        "in": "query",
        "description": "The number of the page to display results from.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Page",
          "type": "integer",
          "description": "The number of the page to display results from.",
          "minimum": 1
        }
      },
      "pmin": {
        "name": "pmin",
        "in": "query",
        "description": "Minimal price of account (Inclusive).",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Pmin",
          "type": "integer",
          "minimum": 1,
          "description": "Minimal price of account (Inclusive)."
        }
      },
      "pmax": {
        "name": "pmax",
        "in": "query",
        "description": "Maximum price of account (Inclusive).",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Pmax",
          "type": "integer",
          "minimum": 1,
          "description": "Maximum price of account (Inclusive)."
        }
      },
      "game": {
        "name": "game[]",
        "in": "query",
        "description": "List of games.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Game",
          "type": "array",
          "description": "List of games.",
          "items": {
            "type": "string"
          }
        }
      },
      "game_int": {
        "name": "game[]",
        "in": "query",
        "description": "List of games.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Game",
          "type": "array",
          "description": "List of games.",
          "items": {
            "type": "integer"
          }
        }
      },
      "daybreak": {
        "name": "daybreak",
        "in": "query",
        "description": "Number of days the account has been offline.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Day Break",
          "type": "integer",
          "minimum": 0,
          "description": "Number of days the account has been offline."
        }
      },
      "reg": {
        "name": "reg",
        "in": "query",
        "description": "How old is the account.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Reg",
          "type": "integer",
          "minimum": 0,
          "description": "How old is the account."
        }
      },
      "reg_period": {
        "name": "reg_period",
        "in": "query",
        "description": "In what notation is time measured.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Reg Period",
          "$ref": "#/components/schemas/DatePeriodModel"
        }
      },
      "lmin": {
        "name": "lmin",
        "in": "query",
        "description": "Minimum level.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Lmin",
          "type": "integer",
          "minimum": 0,
          "description": "Minimum level."
        }
      },
      "lmax": {
        "name": "lmax",
        "in": "query",
        "description": "Maximum level.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Lmax",
          "type": "integer",
          "minimum": 0,
          "description": "Maximum level."
        }
      },
      "balance_max": {
        "name": "balance_max",
        "in": "query",
        "description": "Maximum balance.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Balance Max",
          "type": "integer",
          "minimum": 0,
          "description": "Maximum balance."
        }
      },
      "balance_min": {
        "name": "balance_min",
        "in": "query",
        "description": "Minimum balance.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Balance Min",
          "type": "integer",
          "minimum": 0,
          "description": "Minimum balance."
        }
      },
      "not_country": {
        "name": "not_country[]",
        "in": "query",
        "description": "List of disallowed countries.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Not Country",
          "type": "array",
          "description": "List of disallowed countries.",
          "items": {
            "type": "string"
          }
        }
      },
      "country": {
        "name": "country[]",
        "in": "query",
        "description": "List of allowed countries.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Country",
          "type": "array",
          "description": "List of allowed countries.",
          "items": {
            "type": "string"
          }
        }
      },
      "last_trans_date": {
        "name": "last_trans_date",
        "in": "query",
        "description": "How old is last transaction.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Last Trans Date",
          "type": "integer",
          "minimum": 0,
          "description": "How old is last transaction."
        }
      },
      "last_trans_date_period": {
        "name": "last_trans_date_period",
        "in": "query",
        "description": "In what notation is time measured.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "$ref": "#/components/schemas/DatePeriodModel"
        }
      },
      "no_trans": {
        "name": "no_trans",
        "in": "query",
        "description": "Has no transactions.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "No Trans",
          "type": "integer",
          "description": "Has no transactions.",
          "enum": [
            1
          ]
        }
      },
      "temp_email": {
        "name": "temp_email",
        "in": "query",
        "description": "Access to market temp mail.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Temp Email",
          "description": "Access to market temp mail.",
          "$ref": "#/components/schemas/YesNoNoMatterScheme"
        }
      },
      "change_email": {
        "name": "change_email",
        "in": "query",
        "description": "Can change email.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Change Email",
          "description": "Can change email.",
          "$ref": "#/components/schemas/YesNoNoMatterScheme"
        }
      },
      "email": {
        "name": "email",
        "in": "query",
        "description": "Has linked email.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Email",
          "type": "string",
          "description": "Has linked email.",
          "$ref": "#/components/schemas/YesNoNoMatterScheme"
        }
      },
      "tel": {
        "name": "tel",
        "in": "query",
        "description": "Has linked mobile.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Tel",
          "type": "string",
          "description": "Has linked mobile.",
          "$ref": "#/components/schemas/YesNoNoMatterScheme"
        }
      },
      "verified": {
        "name": "verified",
        "in": "query",
        "description": "Has verified.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Verified",
          "description": "Has verified.",
          "$ref": "#/components/schemas/YesNoNoMatterScheme"
        }
      },
      "mihoyo_level_max": {
        "name": "level_max",
        "in": "query",
        "description": "Maximum level.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Level Max",
          "type": "integer",
          "description": "Maximum level.",
          "minimum": 1
        }
      },
      "changeable_email": {
        "name": "changeable_email",
        "in": "query",
        "description": "Can change email.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Changeable Email",
          "description": "Can change email.",
          "$ref": "#/components/schemas/YesNoNoMatterScheme"
        }
      },
      "premium": {
        "name": "premium",
        "in": "query",
        "description": "Has a premium subscription.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Premium",
          "description": "Has a premium subscription.",
          "$ref": "#/components/schemas/YesNoNoMatterScheme"
        }
      },
      "subscription_length": {
        "name": "subscription_length",
        "in": "query",
        "description": "Length of subscription.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Subscription Length",
          "type": "integer",
          "description": "Length of subscription.",
          "minimum": 0
        }
      },
      "subscription_period": {
        "name": "subscription_period",
        "in": "query",
        "description": "In what notation is time measured.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Subscription Period",
          "description": "In what notation is time measured.",
          "$ref": "#/components/schemas/DatePeriodModel"
        }
      },
      "wargaming_top_min": {
        "name": "top_min",
        "in": "query",
        "description": "Minimum number of top tanks.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Top Min",
          "type": "integer",
          "description": "Minimum number of top tanks.",
          "minimum": 0
        }
      },
      "wargaming_top_max": {
        "name": "top_max",
        "in": "query",
        "description": "Maximum number of top tanks.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Top Max",
          "type": "integer",
          "description": "Maximum number of top tanks.",
          "minimum": 0
        }
      },
      "wargaming_prem_min": {
        "name": "prem_min",
        "in": "query",
        "description": "Minimum number of premium tanks.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Prem Min",
          "type": "integer",
          "description": "Minimum number of premium tanks.",
          "minimum": 0
        }
      },
      "wargaming_prem_max": {
        "name": "prem_max",
        "in": "query",
        "description": "Maximum number of premium tanks.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Prem Max",
          "type": "integer",
          "description": "Maximum number of premium tanks.",
          "minimum": 0
        }
      },
      "wargaming_top_prem_min": {
        "name": "top_prem_min",
        "in": "query",
        "description": "Minimum number of top premium tanks.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Top Prem Min",
          "type": "integer",
          "description": "Minimum number of top premium tanks.",
          "minimum": 0
        }
      },
      "wargaming_top_prem_max": {
        "name": "top_prem_max",
        "in": "query",
        "description": "Maximum number of top premium tanks.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Top Prem Max",
          "type": "integer",
          "description": "Maximum number of top premium tanks.",
          "minimum": 0
        }
      },
      "wargaming_win_pmin": {
        "name": "win_pmin",
        "in": "query",
        "description": "Minimum number of wins.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Win Pmin",
          "type": "integer",
          "description": "Minimum number of wins.",
          "minimum": 0
        }
      },
      "wargaming_win_pmax": {
        "name": "win_pmax",
        "in": "query",
        "description": "Maximum number of wins.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Win Pmax",
          "type": "integer",
          "description": "Maximum number of wins.",
          "minimum": 0
        }
      },
      "wargaming_tank": {
        "name": "tank[]",
        "in": "query",
        "description": "List of tanks.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Tank",
          "type": "array",
          "description": "List of tanks.",
          "items": {
            "type": "integer"
          }
        }
      },
      "wargaming_region": {
        "name": "region[]",
        "in": "query",
        "description": "Region.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Region",
          "type": "array",
          "description": "Region.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "ru",
              "eu",
              "na",
              "asia"
            ]
          }
        }
      },
      "wargaming_not_region": {
        "name": "not_region[]",
        "in": "query",
        "description": "Exclude region.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Not Region",
          "type": "array",
          "description": "Exclude region.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "ru",
              "eu",
              "na",
              "asia"
            ]
          }
        }
      },
      "wargaming_battles_min": {
        "name": "battles_min",
        "in": "query",
        "description": "Minimum number of battles.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Battles Min",
          "type": "integer",
          "description": "Minimum number of battles.",
          "minimum": 0
        }
      },
      "wargaming_battles_max": {
        "name": "battles_max",
        "in": "query",
        "description": "Maximum number of battles.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Battles Max",
          "type": "integer",
          "description": "Maximum number of battles.",
          "minimum": 0
        }
      },
      "wargaming_gold_min": {
        "name": "gold_min",
        "in": "query",
        "description": "Minimum number of gold.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Gold Min",
          "type": "integer",
          "description": "Minimum number of gold.",
          "minimum": 0
        }
      },
      "wargaming_gold_max": {
        "name": "gold_max",
        "in": "query",
        "description": "Maximum number of gold.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Gold Max",
          "type": "integer",
          "description": "Maximum number of gold.",
          "minimum": 0
        }
      },
      "wargaming_silver_min": {
        "name": "silver_min",
        "in": "query",
        "description": "Minimum number of silver.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Silver Min",
          "type": "integer",
          "description": "Minimum number of silver.",
          "minimum": 0
        }
      },
      "wargaming_silver_max": {
        "name": "silver_max",
        "in": "query",
        "description": "Maximum number of silver.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Silver Max",
          "type": "integer",
          "description": "Maximum number of silver.",
          "minimum": 0
        }
      },
      "rank_min": {
        "name": "rank_min",
        "in": "query",
        "description": "Minimum rank.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Rank Min",
          "type": "integer",
          "description": "Minimum rank.",
          "minimum": 0
        }
      },
      "rank_max": {
        "name": "rank_max",
        "in": "query",
        "description": "Maximum rank.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Rank Max",
          "type": "integer",
          "description": "Maximum rank.",
          "minimum": 0
        }
      },
      "fmin": {
        "name": "fmin",
        "in": "query",
        "description": "Minimum number of followers.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "F Min",
          "type": "integer",
          "description": "Minimum number of followers.",
          "minimum": 0
        }
      },
      "fmax": {
        "name": "fmax",
        "in": "query",
        "description": "Maximum number of followers.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "F Max",
          "type": "integer",
          "description": "Maximum number of followers.",
          "minimum": 0
        }
      },
      "post_min": {
        "name": "post_min",
        "in": "query",
        "description": "Minimum number of posts.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Post Min",
          "type": "integer",
          "description": "Minimum number of posts.",
          "minimum": 0
        }
      },
      "post_max": {
        "name": "post_max",
        "in": "query",
        "description": "Maximum number of posts.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Post Max",
          "type": "integer",
          "description": "Maximum number of posts.",
          "minimum": 0
        }
      },
      "cookies": {
        "name": "cookies",
        "in": "query",
        "description": "Login by cookies.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "title": "Cookies",
          "description": "Login by cookies.",
          "$ref": "#/components/schemas/YesNoNoMatterScheme"
        }
      }
    },
    "examples": {},
    "requestBodies": {},
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "description": "You can get your token [here](https://zelenka.guru/account/api).",
        "scheme": "bearer"
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true,
    "samples-enabled": true
  }
}