{
  "openapi": "3.0.2",
  "info": {
    "title": "Lolzteam Public API: Forum",
    "description": "\n[Market API](https://lolzteam.readme.io)\n\n\n**API free libraries**\n\n\n+ [Node.js](https://github.com/NztForum/node-lzt) \n+ [Python](https://github.com/AS7RIDENIED/Lolzteam_Python_Api)\n+ [C#](https://github.com/fanidamn/LolzMarketAPI)\n\n**Rate limit**\n\n+ 20 requests per minute (3 seconds delay between per request) If you exceed the limit, the response code 429 will be returned to you.\n\n\n\nClients can subscribe to certain events to receive real time ping when data is changed within the system.\nThe subscription system uses the [WebSub protocol](https://github.com/w3c/websub) to communicate with hubs and subscribers.\n\n\n**One Time Token**\n\nAny client can generate one time token (OTT) using existing token. The format for OTT is as follow:\n\n**user_id,timestamp,once,client_id**\n\nWith **user_id** is the ID of authenticated user; **timestamp** is the unix timestamp for OTT expire time, the OTT will work as long as indicated by **timestamp** or by token expire date, whatever comes first; **client_id** is the client ID; **once** is md5 of a concentration of **user_id**, **timestamp**, a valid existing token and the client secret. Example code to generate an OTT:\n\n**Configuration**\n\n+ TTL of access token: 180 days\n+ TTL of authorization code: 30 seconds\n+ TTL of refresh token: 180 days\n+ Authorization URI: **/oauth/authorize** (Recommended)\n+ Access token exchange URI: **/oauth/token** (Disabled)\n+ Token param name: **oauth_token**\n+ Token bearer header name: **Bearer**\n\n**Discoverability**\n\nSystem information and availability can be determined by sending a GET request to **/** (index route). A list of resources will be returned. If the request is authenticated, the revisions of API system and installed modules will also made available for further inspection.\n\n**Common Parameters**\n\n\n**i18n**\n\nAll API requests accept **locale** parameter to switch user facing messages to specified language. The value must be a valid language code (ISO 639-1) with optional inclusion of a valid country code (ISO 3166-1 alpha 2) separated by hyphen (\"-\"). If no complete match can be found, a language with the same language code (even with different country code) will be used. In the worst case that there are no installed languages of requested language code, the default language will be used. Since api-2015100401.\n\n**Fields filtering**\n\nFor API method with resource data like a forum or a thread, the data can be filtered to get interested fields only. The general format is \"key.sub_key.deep_key\" if you want to include/exclude a specific field. The including rules take precedence over excluding ones.\n\n + **fields_include**: comma-separated list of fields of a resource. For additional fields, it is possible to use wildcard (*****) to include all default fields before specifying additional ones.\n + **fields_exclude**: comma-separated list of fields of a resource to exclude in the response. Since r2016062001, it is possible to use wildcard as a prefix (e.g. \"\\*.key\") to exclude the field everywhere.\n\n**Resource ordering**\n\nFor API method with list of resources, the resources can be ordered differently with the parameter **order**. List of supported orders will be specified for each method. The default order will always be **natural**. Most of the time, the natural order is the order of which each resource is added to the system (resource id for example).\n\n**Encryption**\n\nFor sensitive information like password, encryption can be used to increase data security. For all encryption with key support, the **client_secret** will be used as the key. List of supported encryptions:\n\n + **aes128**: AES 128 bit encryption (mode: ECB, padding: PKCS#7). Because of algorithm limitation, the binary md5 hash of key will be used instead of the key itself.\n\n**Headers**\n\n + **Api-Bb-Code-Chr: !youtube**: Replace multimedia tags (except youtube) in bb code html with **tools/chr** link. Since forum-2018100301.\n + **Api-Username-Inline-Style**: Return rich username for **username** fields. Since forum-2018052101.\n\n**Subscriptions**\n\nList of supported topics:\n\n+ **user_x** (x is the user_id of the interested user): receives ping when user data is inserted, updated or deleted. The registered callback will be included in GET **/users/:userId** as parameter **subscription_callback**.\n+ **user_notification_x** (x is the user_id of the interested user): receives ping when user gets a new notification. Notification data will be included in the ping. The registered callback will be included in GET **/notifications** as parameter **subscription_callback**.\n+ **thread_post_x** (x is the thread_id of the interested thread): receives ping when a post in the thread is inserted, updated or deleted. The registered callback will be included in GET **/posts?thread_id=x** as parameter **subscription_callback**.\n\nFor supported resources, two **Link** HTTP headers will be included. It is recommended to check for these headers before issuing subscribe request because webmaster can disable some or all types of subscriptions.\n\n`Link: <topic url>; rel=\"self\"`\n\n`Link: <hub url>; rel=\"hub\"`\n\n**Example subscribe request**\n\n`curl -XPOST https://api.zelenka.guru/subscriptions     -d 'oauth_token=$token'     -d 'hub.callback=$callback_url'     -d 'hub.mode=subscribe'     -d 'hub.topic=$topic'`\n\n**Content-Type**\n\napplication/x-www-form-urlencoded.\n\nYou can import the API into Postman using [this](https://docs.api.zelenka.guru/swagger/forum.json) file.",
    "version": "1.0.42"
  },
  "servers": [
    {
      "url": "https://api.zelenka.guru",
      "description": "Production."
    }
  ],
  "paths": {
    "/oauth/token/facebook": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "summary": "Oauth Facebook",
        "description": "Request API access token using Facebook access token. Please note that because Facebook uses app-scoped user_id, it is not possible to recognize user across different Facebook Applications.\n\nRequired scopes:\n+ **None**",
        "operationId": "oauth.Facebook",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_oauth_facebook_oauth_token_facebook_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/oauth/token/twitter": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "summary": "Oauth Twitter",
        "description": "Request API access token using Twitter access token. The **twitter_uri** and **twitter_auth** parameters are similar to **X-Auth-Service-Provider** and **X-Verify-Credentials-Authorization** as specified in Twitter's OAuth Echo specification.\n\nRequired scopes:\n+ **None**",
        "operationId": "oauth.Twitter",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_oauth_twitter_oauth_token_twitter_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/oauth/token/google": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "summary": "Oauth Google",
        "description": "Request API access token using Google access token.\n\nRequired scopes:\n+ **None**",
        "operationId": "oauth.Google",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_oauth_google_oauth_token_google_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/oauth/token/admin": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "summary": "Oauth Admin",
        "description": "Request API access token for another user. This requires **admincp** scope and the current user must have sufficient system permissions.\n\nRequired scopes:\n+ **admincp**",
        "operationId": "oauth.Admin",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_oauth_admin_oauth_token_admin_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/oauth/token/associate": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "summary": "Oauth Associate",
        "description": "Request API access token and associate social account with an existing user account.\n\nRequired scopes:\n+ **None**",
        "operationId": "oauth.Associate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_oauth_associate_oauth_token_associate_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get Categories",
        "description": "List of all categories in the system.\n\nRequired scopes:\n+ **read**",
        "operationId": "categories.getCategories",
        "parameters": [
          {
            "name": "parent_category_id",
            "in": "query",
            "description": "Id of parent category. If exists, filter categories that are direct children of that category.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Parent Category Id",
              "type": "integer",
              "description": "Id of parent category. If exists, filter categories that are direct children of that category."
            }
          },
          {
            "name": "parent_forum_id",
            "in": "query",
            "description": "Id of parent forum. If exists, filter categories that are direct children of that forum.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Parent Forum Id",
              "type": "integer",
              "description": "Id of parent forum. If exists, filter categories that are direct children of that forum."
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Ordering of categories. Can be [**natural**, **list**].",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Order",
              "type": "string",
              "description": "Ordering of categories. Can be [**natural**, **list**]."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/categories/{categoryId}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get Category",
        "description": "Detail information of a category.\n\nRequired scopes:\n+ **read**",
        "operationId": "categories.getCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "Id of category.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Categoryid",
              "type": "integer",
              "description": "Id of category."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/forums": {
      "get": {
        "tags": [
          "Forums"
        ],
        "summary": "Get Forums",
        "description": "List of all forums in the system.\n\nRequired scopes:\n+ **read**",
        "operationId": "forums.getForums",
        "parameters": [
          {
            "name": "parent_category_id",
            "in": "query",
            "description": "Id of parent category. If exists, filter forums that are direct children of that category.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Parent Category Id",
              "type": "integer",
              "description": "Id of parent category. If exists, filter forums that are direct children of that category."
            }
          },
          {
            "name": "parent_forum_id",
            "in": "query",
            "description": "Id of parent forum. If exists, filter forums that are direct children of that forum.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Parent Forum Id",
              "type": "integer",
              "description": "Id of parent forum. If exists, filter forums that are direct children of that forum."
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Ordering of forums. Can be [**natural**, **list**].",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Order",
              "type": "string",
              "description": "Ordering of forums. Can be [**natural**, **list**]."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForumsModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/forums/{forumId}": {
      "get": {
        "tags": [
          "Forums"
        ],
        "summary": "Get Forum",
        "description": "Detail information of a forum.\n\nRequired scopes:\n+ **read**",
        "operationId": "forums.getForum",
        "parameters": [
          {
            "name": "forumId",
            "in": "path",
            "description": "Id of forum.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Forumid",
              "type": "integer",
              "description": "Id of forum."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForumModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/forums/{forumId}/followers": {
      "get": {
        "tags": [
          "Forums"
        ],
        "summary": "Get Followers",
        "description": "List of a forum's followers. For privacy reason, only the current user will be included in the list (if the user follows the specified forum).\n\nRequired scopes:\n+ **read**",
        "operationId": "forums.getFollowers",
        "parameters": [
          {
            "name": "forumId",
            "in": "path",
            "description": "Id of forum.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Forumid",
              "type": "integer",
              "description": "Id of forum."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFollowersModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Forums"
        ],
        "summary": "Follow Forum",
        "description": "Follow a forum.\n\nRequired scopes:\n+ **post**",
        "operationId": "forums.setFollow",
        "parameters": [
          {
            "name": "forumId",
            "in": "path",
            "description": "Id of forum.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Forumid",
              "type": "integer",
              "description": "Id of forum."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_post_followers_forums__forumId__followers_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostFollowersModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Forums"
        ],
        "summary": "Unfollow Forum",
        "description": "Unfollow a forum.\n\nRequired scopes:\n+ **post**",
        "operationId": "forums.setUnfollow",
        "parameters": [
          {
            "name": "forumId",
            "in": "path",
            "description": "Id of forum.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Forumid",
              "type": "integer",
              "description": "Id of forum."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostFollowersModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/forums/followed": {
      "get": {
        "tags": [
          "Forums"
        ],
        "summary": "Get Followed Forums",
        "description": "List of followed forums by current user.\n\nRequired scopes:\n+ **read**",
        "operationId": "forums.getFollowed",
        "parameters": [
          {
            "name": "total",
            "in": "query",
            "description": "If included in the request, only the forum count is returned as **forums_total**.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Total",
              "type": "integer",
              "description": "If included in the request, only the forum count is returned as **forums_total**."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForumFollowersModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/pages": {
      "get": {
        "tags": [
          "Pages"
        ],
        "summary": "Get Pages",
        "description": "List of all pages in the system.\n\nRequired scopes:\n+ **read**",
        "operationId": "pages.getPages",
        "parameters": [
          {
            "name": "parent_page_id",
            "in": "query",
            "description": "Id of parent page. If exists, filter pages that are direct children of that page.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Parent Page Id",
              "type": "integer",
              "description": "Id of parent page. If exists, filter pages that are direct children of that page."
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Ordering of pages. Can be [**natural**, **list**].",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Order",
              "type": "string",
              "description": "Ordering of pages. Can be [**natural**, **list**]."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/pages/{pageId}": {
      "get": {
        "tags": [
          "Pages"
        ],
        "summary": "Get Page",
        "description": "Detail information of a page.\n\nRequired scopes:\n+ **read**",
        "operationId": "pages.getPage",
        "parameters": [
          {
            "name": "pageId",
            "in": "path",
            "description": "Id of page.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Pageid",
              "type": "integer",
              "description": "Id of page."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/navigation": {
      "get": {
        "tags": [
          "Navigation"
        ],
        "summary": "Get Navigation",
        "description": "List of navigation elements within the system.\n\nRequired scopes:\n+ **read**",
        "operationId": "navigation.getNavigation",
        "parameters": [
          {
            "name": "parent",
            "in": "query",
            "description": "Id of parent element. If exists, filter elements that are direct children of that element.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Parent",
              "type": "integer",
              "description": "Id of parent element. If exists, filter elements that are direct children of that element."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NavigationModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/threads": {
      "get": {
        "tags": [
          "Threads"
        ],
        "summary": "Get Threads",
        "description": "List of threads in a forum (with pagination).\n\nRequired scopes:\n+ **read**",
        "operationId": "threads.getThreads",
        "parameters": [
          {
            "name": "forum_id",
            "in": "query",
            "description": "Id of the containing forum. Can be skipped if **thread_ids** set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Forum Id",
              "type": "integer",
              "description": "Id of the containing forum. Can be skipped if **thread_ids** set."
            }
          },
          {
            "name": "thread_ids",
            "in": "query",
            "description": "Ids of needed threads (separated by comma). If this parameter is set, all other filtering parameters will be ignored.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Thread Ids",
              "type": "string",
              "description": "Ids of needed threads (separated by comma). If this parameter is set, all other filtering parameters will be ignored."
            }
          },
          {
            "name": "creator_user_id",
            "in": "query",
            "description": "Filter to get only threads created by the specified user.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Creator User Id",
              "type": "integer",
              "description": "Filter to get only threads created by the specified user."
            }
          },
          {
            "name": "sticky",
            "in": "query",
            "description": "Filter to get only sticky **sticky=1** or non-sticky **sticky=0** threads. By default, all threads will be included and sticky ones will be at the top of the result on the first page. In mixed mode, sticky threads are not counted towards **threads_total** and does not affect pagination.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Sticky",
              "type": "integer",
              "description": "Filter to get only sticky **sticky=1** or non-sticky **sticky=0** threads. By default, all threads will be included and sticky ones will be at the top of the result on the first page. In mixed mode, sticky threads are not counted towards **threads_total** and does not affect pagination."
            }
          },
          {
            "name": "thread_prefix_id",
            "in": "query",
            "description": "Filter to get only threads with the specified prefix.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Thread Prefix Id",
              "type": "integer",
              "description": "Filter to get only threads with the specified prefix."
            }
          },
          {
            "name": "thread_tag_id",
            "in": "query",
            "description": "Filter to get only threads with the specified tag.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Thread Tag Id",
              "type": "integer",
              "description": "Filter to get only threads with the specified tag."
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number of threads.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number of threads."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of threads in a page.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Number of threads in a page."
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Ordering of threads. Can be [**natural**, **thread_create_date**, **thread_create_date_reverse**, **thread_update_date**, **thread_update_date_reverse**, **thread_view_count**, **thread_view_count_reverse**, **thread_post_count**, **thread_post_count_reverse**, **first_post_likes**, **first_post_likes_reverse**].",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Order",
              "type": "string",
              "description": "Can be [**natural**, **thread_create_date**, **thread_create_date_reverse**, **thread_update_date**, **thread_update_date_reverse**, **thread_view_count**, **thread_view_count_reverse**, **thread_post_count**, **thread_post_count_reverse**, **first_post_likes**, **first_post_likes_reverse**]."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreadsModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Threads"
        ],
        "summary": "Create Thread",
        "description": "Create a new thread.\n\nContest prize upgrade type:\n+ 1 - Supreme - 3 months.\n+ 6 - Legend - 12 months.\n+ 12 - AntiPublic.One Plus subscription - 1 month.\n+ 14 - Uniq - lifetime.\n+ 17 - 18+ Photo leaks - 6 months.\n+ 19 - Auto giveaway participation - 1 month.\n\nRequired scopes:\n+ **post**",
        "operationId": "threads.create",
        "parameters": [
          {
            "name": "forum_id",
            "in": "query",
            "description": "Id of the target forum.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Forum Id",
              "type": "integer",
              "description": "Id of the target forum."
            }
          },
          {
            "name": "thread_title",
            "in": "query",
            "description": "Title of the new thread.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Thread Title",
              "type": "string",
              "description": "Title of the new thread."
            }
          },
          {
            "name": "thread_prefix_id",
            "in": "query",
            "description": "Id of a prefix for the new thread.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Thread Prefix Id",
              "type": "integer",
              "description": "Id of a prefix for the new thread."
            }
          },
          {
            "name": "thread_tags",
            "in": "query",
            "description": "Thread tags for the new thread. Separated by comma.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Thread Tags",
              "type": "string",
              "description": "Thread tags for the new thread. Separated by comma."
            }
          },
          {
            "name": "contest_type",
            "in": "query",
            "description": "Contest type. Can be [**by_finish_date**, **by_needed_members**]. Required if **forum_id** is 766 (Contests).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Contest Type",
              "type": "string",
              "description": "Contest type. Can be [**by_finish_date**, **by_needed_members**]. Required if **forum_id** is 766 (Contests)."
            }
          },
          {
            "name": "count_winners",
            "in": "query",
            "description": "Winner count (prize count). The maximum value is 100. Required if **forum_id** is 766 (Contests).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Count Winners",
              "type": "integer",
              "description": "Winner count (prize count). The maximum value is 100. Required if **forum_id** is 766 (Contests)."
            }
          },
          {
            "name": "needed_members",
            "in": "query",
            "description": "Max member count. Required if **contest_type** is **by_needed_members**.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Needed Members",
              "type": "integer",
              "description": "Max member count. Required if **contest_type** is **by_needed_members**."
            }
          },
          {
            "name": "length_value",
            "in": "query",
            "description": "Giveaway duration value. The maximum duration is 3 days. Required if **contest_type** is **by_finish_date**.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Length Value",
              "type": "string",
              "description": "Giveaway duration value. The maximum duration is 3 days. Required if **contest_type** is **by_finish_date**."
            }
          },
          {
            "name": "length_option",
            "in": "query",
            "description": "Giveaway duration type. Can be [**minutes**, **hours**, **days**]. The maximum duration is 3 days. Required if **contest_type** is **by_finish_date**.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Length Option",
              "type": "string",
              "description": "Giveaway duration type. Can be [**minutes**, **hours**, **days**]. The maximum duration is 3 days. Required if **contest_type** is **by_finish_date**."
            }
          },
          {
            "name": "require_like_count",
            "in": "query",
            "description": "Sympathies for this week. Required if **forum_id** is 766 (Contests).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Require Like Count",
              "type": "integer",
              "description": "Sympathies for this week. Required if **forum_id** is 766 (Contests)."
            }
          },
          {
            "name": "require_total_like_count",
            "in": "query",
            "description": "Symapthies for all time. Required if **forum_id** is 766 (Contests).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Require Total Like Count",
              "type": "integer",
              "description": "Symapthies for all time. Required if **forum_id** is 766 (Contests)."
            }
          },
          {
            "name": "prize_type",
            "in": "query",
            "description": "Prize type. Can be [**money**, **upgrades**]. Required if **forum_id** is 766 (Contests).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Prize Type",
              "type": "string",
              "description": "Prize type. Can be [**money**, **upgrades**]. Required if **forum_id** is 766 (Contests)."
            }
          },
          {
            "name": "prize_data_money",
            "in": "query",
            "description": "How many money will each winner receive. Required if **prize_type** is **money**.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Prize Data Money",
              "type": "string",
              "description": "How many money will each winner receive. Required if **prize_type** is **money**."
            }
          },
          {
            "name": "prize_data_upgrade",
            "in": "query",
            "description": "Which upgrade will each winner receive. Required if **prize_type** is **upgrades**.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Prize Data Upgrade",
              "type": "integer",
              "description": "Which upgrade will each winner receive. Required if **prize_type** is **upgrades**."
            }
          },
          {
            "name": "secret_answer",
            "in": "query",
            "description": "Secret answer of your account. Required if **forum_id** is 766 (Contests).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Secret Answer",
              "type": "string",
              "description": "Secret answer of your account. Required if **forum_id** is 766 (Contests)."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_get_threads_threads_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreadModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/threads/{threadId}": {
      "get": {
        "tags": [
          "Threads"
        ],
        "summary": "Get Thread",
        "description": "Detail information of a thread.\n\nRequired scopes:\n+ **read**",
        "operationId": "threads.getThread",
        "parameters": [
          {
            "name": "threadId",
            "in": "path",
            "description": "Id of thread.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Threadid",
              "type": "integer",
              "description": "Id of thread."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreadModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Threads"
        ],
        "summary": "Delete Thread",
        "description": "Delete a thread.\n\nRequired scopes:\n+ **post**",
        "operationId": "threads.delete",
        "parameters": [
          {
            "name": "threadId",
            "in": "path",
            "description": "Id of thread.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Threadid",
              "type": "integer",
              "description": "Id of thread."
            }
          },
          {
            "name": "reason",
            "in": "query",
            "description": "Reason of the thread removal.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Reason",
              "type": "string",
              "description": "Reason of the thread removal."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveChangesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/threads/{threadId}/followers": {
      "get": {
        "tags": [
          "Threads"
        ],
        "summary": "Get Thread Followers",
        "description": "List of a thread's followers. For privacy reason, only the current user will be included in the list.\n\nRequired scopes:\n+ **read**",
        "operationId": "threads.getFollowThread",
        "parameters": [
          {
            "name": "threadId",
            "in": "path",
            "description": "Id of thread.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Threadid",
              "type": "integer",
              "description": "Id of thread."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreadUserModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Threads"
        ],
        "summary": "Follow Thread",
        "description": "Follow a thread.\n\nRequired scopes:\n+ **post**",
        "operationId": "threads.followThread",
        "parameters": [
          {
            "name": "threadId",
            "in": "path",
            "description": "Id of thread.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Threadid",
              "type": "integer",
              "description": "Id of thread."
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Whether to receive notification as email.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email",
              "type": "integer",
              "description": "Whether to receive notification as email."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveChangesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Threads"
        ],
        "summary": "Unfollow Thread",
        "description": "Unfollow a thread.\n\nRequired scopes:\n+ **post**",
        "operationId": "threads.unfollowThread",
        "parameters": [
          {
            "name": "threadId",
            "in": "path",
            "description": "Id of thread.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Threadid",
              "type": "integer",
              "description": "Id of thread."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveChangesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/threads/followed": {
      "get": {
        "tags": [
          "Threads"
        ],
        "summary": "Get Followed Threads",
        "description": "List of followed threads by current user.\n\nRequired scopes:\n+ **read**",
        "operationId": "threads.getFollowedThreads",
        "parameters": [
          {
            "name": "total",
            "in": "query",
            "description": "If included in the request, only the thread count is returned as **threads_total**.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Total",
              "type": "integer",
              "description": "If included in the request, only the thread count is returned as **threads_total**."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowedThreadsModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/threads/{threadId}/navigation": {
      "get": {
        "tags": [
          "Threads"
        ],
        "summary": "Get Navigation Elements",
        "description": "List of navigation elements to reach the specified thread.\n\nRequired scopes:\n+ **read**",
        "operationId": "threads.getNavigationElements",
        "parameters": [
          {
            "name": "threadId",
            "in": "path",
            "description": "Id of thread.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Threadid",
              "type": "integer",
              "description": "Id of thread."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NavigationThreadModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/threads/{threadId}/poll": {
      "get": {
        "tags": [
          "Threads"
        ],
        "summary": "Get Poll",
        "description": "Detail information of a poll.\n\nRequired scopes:\n+ **read**",
        "operationId": "threads.getPoll",
        "parameters": [
          {
            "name": "threadId",
            "in": "path",
            "description": "Id of thread.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Threadid",
              "type": "integer",
              "description": "Id of thread."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PollsModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/threads/{threadId}/poll/votes": {
      "post": {
        "tags": [
          "Threads"
        ],
        "summary": "Vote Poll",
        "description": "Vote on a thread poll.\n\nRequired scopes:\n+ **post**",
        "operationId": "threads.votePoll",
        "parameters": [
          {
            "name": "threadId",
            "in": "path",
            "description": "Id of thread.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Threadid",
              "type": "integer",
              "description": "Id of thread."
            }
          },
          {
            "name": "response_id",
            "in": "query",
            "description": "The id of the response to vote for. Can be skipped if **response_ids** set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Response Id",
              "type": "integer",
              "description": "The id of the response to vote for. Can be skipped if **response_ids** set."
            }
          },
          {
            "name": "response_ids[]",
            "in": "query",
            "description": "An array of ids of responses (if the poll allows multiple choices).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Response Ids",
              "type": "array",
              "description": "An array of ids of responses (if the poll allows multiple choices).",
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveChangesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/threads/new": {
      "get": {
        "tags": [
          "Threads"
        ],
        "summary": "Get Unread Threads",
        "description": "List of unread threads (must be logged in).\n\nRequired scopes:\n+ **read**",
        "operationId": "threads.getUnreadThreads",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of result threads. The limit may get decreased if the value is too large (depending on the system configuration).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Maximum number of result threads. The limit may get decreased if the value is too large (depending on the system configuration)."
            }
          },
          {
            "name": "forum_id",
            "in": "query",
            "description": "Id of the container forum to search for threads. Child forums of the specified forum will be included in the search.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Forum Id",
              "type": "integer",
              "description": "Id of the container forum to search for threads. Child forums of the specified forum will be included in the search."
            }
          },
          {
            "name": "data_limit",
            "in": "query",
            "description": "Number of thread data to be returned. Default value is 20.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Data Limit",
              "type": "integer",
              "description": "Number of thread data to be returned. Default value is 20."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnreadThreadsModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/threads/recent": {
      "get": {
        "tags": [
          "Threads"
        ],
        "summary": "Get Recent Threads",
        "description": "List of recent threads.\n\nRequired scopes:\n+ **read**",
        "operationId": "threads.getRecentThreads",
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "description": "Maximum number of days to search for threads.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Days",
              "type": "integer",
              "description": "Maximum number of days to search for threads."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of result threads. The limit may get decreased if the value is too large.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Maximum number of result threads. The limit may get decreased if the value is too large."
            }
          },
          {
            "name": "forum_id",
            "in": "query",
            "description": "Id of the container forum to search for threads. Child forums of the specified forum will be included in the search.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Forum Id",
              "type": "integer",
              "description": "Id of the container forum to search for threads. Child forums of the specified forum will be included in the search."
            }
          },
          {
            "name": "data_limit",
            "in": "query",
            "description": "Number of thread data to be returned. Default value is 20.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Data Limit",
              "type": "integer",
              "description": "Number of thread data to be returned. Default value is 20."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnreadThreadsModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/threads/{threadId}/bump": {
      "post": {
        "tags": [
          "Threads"
        ],
        "summary": "Bump Thread",
        "description": "Bump a thread.\n\nRequired scopes:\n+ **post**",
        "operationId": "threads.bumpThread",
        "parameters": [
          {
            "name": "threadId",
            "in": "path",
            "description": "Id of thread.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Threadid",
              "type": "integer",
              "description": "Id of thread."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/posts": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get Posts",
        "description": "List of posts in a thread (with pagination).\n\nRequired scopes:\n+ **read**",
        "operationId": "posts.getPosts",
        "parameters": [
          {
            "name": "thread_id",
            "in": "query",
            "description": "Id of the containing thread.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Thread Id",
              "type": "integer",
              "description": "Id of the containing thread."
            }
          },
          {
            "name": "page_of_post_id",
            "in": "query",
            "description": "Id of a post, posts that are in the same page with the specified post will be returned. **thread_id** may be skipped.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Page Of Post Id",
              "type": "integer",
              "description": "Id of a post, posts that are in the same page with the specified post will be returned. **thread_id** may be skipped."
            }
          },
          {
            "name": "post_ids",
            "in": "query",
            "description": "Ids of needed posts (separated by comma). If this parameter is set, all other filtering parameters will be ignored.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Post Ids",
              "type": "string",
              "description": "Ids of needed posts (separated by comma). If this parameter is set, all other filtering parameters will be ignored."
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number of posts.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number of posts."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of posts in a page. Default value depends on the system configuration.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Number of posts in a page. Default value depends on the system configuration."
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Ordering of posts. Can be [**natural**, **natural_reverse**, **post_create_date**, **post_create_date_reverse**].",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Order",
              "type": "string",
              "description": "Ordering of posts. Can be [**natural**, **natural_reverse**, **post_create_date**, **post_create_date_reverse**]."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostsModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Create Post",
        "description": "Create a new post.\n\nRequired scopes:\n+ **post**",
        "operationId": "posts.create",
        "parameters": [
          {
            "name": "thread_id",
            "in": "query",
            "description": "Id of the target thread.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Thread Id",
              "type": "integer",
              "description": "Id of the target thread."
            }
          },
          {
            "name": "quote_post_id",
            "in": "query",
            "description": "Id of the quote post. It's possible to skip **thread_id** if this parameter is provided. An extra check is performed if both parameters exist and does not match.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Quote Post Id",
              "type": "integer",
              "description": "Id of the quote post. It's possible to skip **thread_id** if this parameter is provided. An extra check is performed if both parameters exist and does not match."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_get_posts_posts_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePostModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/posts/{postId}": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get Post",
        "description": "Detail information of a post.\n\nRequired scopes:\n+ **read**",
        "operationId": "posts.getPost",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "Id of post.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Postid",
              "type": "integer",
              "description": "Id of post."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Posts"
        ],
        "summary": "Edit Post",
        "description": "Edit a post.\n\nRequired scopes:\n+ **post**",
        "operationId": "posts.edit",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "Id of post.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Postid",
              "type": "integer",
              "description": "Id of post."
            }
          },
          {
            "name": "thread_title",
            "in": "query",
            "description": "New title of the thread (only used if the post is the first post in the thread and the authenticated user can edit thread).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Thread Title",
              "type": "string",
              "description": "New title of the thread (only used if the post is the first post in the thread and the authenticated user can edit thread)."
            }
          },
          {
            "name": "thread_prefix_id",
            "in": "query",
            "description": "New id of the thread's prefix (only used if the post is the first post in the thread and the authenticated user can edit thread).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Thread Prefix Id",
              "type": "integer",
              "description": "New id of the thread's prefix (only used if the post is the first post in the thread and the authenticated user can edit thread)."
            }
          },
          {
            "name": "thread_tags",
            "in": "query",
            "description": "New tags of the thread (only used if the post is the first post in the thread and the authenticated user can edit thread tags). Separated by comma.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Thread Tags",
              "type": "string",
              "description": "New tags of the thread (only used if the post is the first post in the thread and the authenticated user can edit thread tags). Separated by comma."
            }
          },
          {
            "name": "thread_node_id",
            "in": "query",
            "description": "Move thread to new forum if the post is first post and the authenticated user can move thread.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Thread Node Id",
              "type": "integer",
              "description": "Move thread to new forum if the post is first post and the authenticated user can move thread."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_edit_post_posts__postId__put"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Posts"
        ],
        "summary": "Delete Post",
        "description": "Delete a post.\n\nRequired scopes:\n+ **post**",
        "operationId": "posts.delete",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "Id of post.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Postid",
              "type": "integer",
              "description": "Id of post."
            }
          },
          {
            "name": "reason",
            "in": "query",
            "description": "Reason of the post removal.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Reason",
              "type": "string",
              "description": "Reason of the post removal."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveChangesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/posts/{postId}/likes": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get Post Likes",
        "description": "List of users who liked a post.\n\nRequired scopes:\n+ **read**",
        "operationId": "posts.getLiked",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "Id of post.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Postid",
              "type": "integer",
              "description": "Id of post."
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number of users.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number of users."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of users in a page. Default value depends on the system configuration.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Number of users in a page. Default value depends on the system configuration."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostLikesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Like Post",
        "description": "Like a post.\n\nRequired scopes:\n+ **read**",
        "operationId": "posts.like",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "Id of post.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Postid",
              "type": "integer",
              "description": "Id of post."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveChangesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Posts"
        ],
        "summary": "Unlike Post",
        "description": "Unlike a post.\n\nRequired scopes:\n+ **read**",
        "operationId": "posts.unlike",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "Id of post.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Postid",
              "type": "integer",
              "description": "Id of post."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveChangesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/posts/{postId}/report": {
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Report Post",
        "description": "Report a post.\n\nRequired scopes:\n+ **post**",
        "operationId": "posts.report",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "Id of post.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Postid",
              "type": "integer",
              "description": "Id of post."
            }
          },
          {
            "name": "message",
            "in": "query",
            "description": "Reason of the report.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Message",
              "type": "string",
              "description": "Reason of the report."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveChangesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/posts/{postId}/comments": {
      "get": {
        "tags": [
          "Post comments"
        ],
        "summary": "Get Post Comments",
        "description": "List of post comments in a thread.\n\nRequired scopes:\n+ **read**",
        "operationId": "postComments.get",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "Id of post.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Postid",
              "type": "integer",
              "description": "Id of post."
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "The time in milliseconds (e.g. 1652177794083) before last comment date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Before",
              "type": "integer",
              "description": "The time in milliseconds (e.g. 1652177794083) before last comment date."
            }
          },
          {
            "name": "before_comment",
            "in": "query",
            "description": "Comment id to get older comments.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Before Comment",
              "type": "integer",
              "description": "Comment id to get older comments."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommentsModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Post comments"
        ],
        "summary": "Create Post Comment",
        "description": "Create a new post comment.\n\nRequired scopes:\n+ **post**",
        "operationId": "postComments.create",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "Id of post.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Postid",
              "type": "integer",
              "description": "Id of post."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_post_comment_posts__postId__comments_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommentModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/tags": {
      "get": {
        "tags": [
          "Content Tagging"
        ],
        "summary": "Get Popular Tags",
        "description": "List of popular tags (no pagination).\n\nRequired scopes:\n+ **read**",
        "operationId": "contentTagging.getPopular",
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RawTagsModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/tags/list": {
      "get": {
        "tags": [
          "Content Tagging"
        ],
        "summary": "Get Tags",
        "description": "List of tags.\n\nRequired scopes:\n+ **read**",
        "operationId": "contentTagging.getTags",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of tags list.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number of tags list."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results in a page.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Number of results in a page."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagsModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/tags/{tagId}": {
      "get": {
        "tags": [
          "Content Tagging"
        ],
        "summary": "Get Tagged Content",
        "description": "List of tagged contents.\n\nRequired scopes:\n+ **read**",
        "operationId": "contentTagging.getContents",
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "Id of tag.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Tagid",
              "type": "integer",
              "description": "Id of tag."
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number of tagged contents.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number of tagged contents."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of tagged contents in a page.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Number of tagged contents in a page."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/tags/find": {
      "get": {
        "tags": [
          "Content Tagging"
        ],
        "summary": "Get Filtered Content",
        "description": "Filtered list of tags.\n\nRequired scopes:\n+ **read**",
        "operationId": "contentTagging.getFilteredContent",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "tag to filter. Tags start with the query will be returned.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Tag",
              "type": "string",
              "description": "tag to filter. Tags start with the query will be returned."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilterTagsModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Users",
        "description": "List of users (with pagination).\n\nRequired scopes:\n+ **read**",
        "operationId": "users.getAll",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of users.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number of users."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of users in a page.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Number of users in a page."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/users/fields": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User Fields",
        "description": "List of user fields.\n\nRequired scopes:\n+ **read**",
        "operationId": "users.getFields",
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldsModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/users/find": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Filtered Users",
        "description": "Filtered list of users by username, email or custom fields.\n\nRequired scopes:\n+ **read**\n+ **admincp**",
        "operationId": "users.getFiltered",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "Username to filter. Usernames start with the query will be returned.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Username to filter. Usernames start with the query will be returned."
            }
          },
          {
            "name": "user_email",
            "in": "query",
            "description": "Email to filter. Requires **admincp** scope.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "User Email",
              "type": "string",
              "description": "Email to filter. Requires **admincp** scope."
            }
          },
          {
            "name": "custom_fields",
            "in": "query",
            "description": "Custom fields to filter. Example: **custom_fields[telegram]=telegramLogin**.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Custom Fields",
              "type": "string",
              "description": "Custom fields to filter. Example: **custom_fields[telegram]=telegramLogin**."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchUsersModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Profile",
        "description": "Displays info about your profile.\n\nRequired scopes:\n+ **read**",
        "operationId": "users.getMe",
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMeModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User",
        "description": "Detail information of a user.\n\nRequired scopes:\n+ **read**",
        "operationId": "users.get",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Id of user.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Userid",
              "type": "integer",
              "description": "Id of user."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Edit User",
        "description": "Edit a user.\n\nRequired scopes:\n+ **post**\n+ **admincp**",
        "operationId": "users.edit",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Userid",
              "type": "integer",
              "description": "User id."
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "Data of the new password.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Password",
              "type": "string",
              "description": "Data of the new password."
            }
          },
          {
            "name": "password_old",
            "in": "query",
            "description": "Data of the existing password, it is not required if (1) the current authenticated user has **user** admin permission, (2) the **admincp** scope is granted and (3) the user being edited is not the current authenticated user.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Password Old",
              "type": "string",
              "description": "Data of the existing password, it is not required if (1) the current authenticated user has **user** admin permission, (2) the **admincp** scope is granted and (3) the user being edited is not the current authenticated user."
            }
          },
          {
            "name": "password_algo",
            "in": "query",
            "description": "Algorithm used to encrypt the **password** and **password_old** parameters. See **Encryption** section for more information.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Password Algo",
              "type": "string",
              "description": "Algorithm used to encrypt the **password** and **password_old** parameters. See **Encryption** section for more information."
            }
          },
          {
            "name": "user_email",
            "in": "query",
            "description": "New email of the user.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "User Email",
              "type": "string",
              "description": "New email of the user."
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "New username of the user. Changing username requires Administrator permission.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "New username of the user. Changing username requires Administrator permission."
            }
          },
          {
            "name": "user_title",
            "in": "query",
            "description": "New custom title of the user.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "User Title",
              "type": "string",
              "description": "New custom title of the user."
            }
          },
          {
            "name": "primary_group_id",
            "in": "query",
            "description": "Id of new primary group.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Primary Group Id",
              "type": "integer",
              "description": "Id of new primary group."
            }
          },
          {
            "name": "secondary_group_ids[]",
            "in": "query",
            "description": "Array of ids of new secondary groups.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Secondary Group Ids",
              "type": "array",
              "description": "Array of ids of new secondary groups.",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "user_dob_day",
            "in": "query",
            "description": "Date of birth (day) of the new user.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "User Dob Day",
              "type": "integer",
              "description": "Date of birth (day) of the new user."
            }
          },
          {
            "name": "user_dob_month",
            "in": "query",
            "description": "Date of birth (month) of the new user.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "User Dob Month",
              "type": "integer",
              "description": "Date of birth (month) of the new user."
            }
          },
          {
            "name": "user_dob_year",
            "in": "query",
            "description": "Date of birth (year) of the new user.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "User Dob Year",
              "type": "integer",
              "description": "Date of birth (year) of the new user."
            }
          },
          {
            "name": "fields[]",
            "in": "query",
            "description": "Array of values for user fields.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Fields",
              "type": "array",
              "description": "Array of values for user fields.",
              "items": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveChangesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/lost-password": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Lost Password",
        "description": "Request a password reset via email.\nEither **username** or **email** parameter must be provided. If both are provided, **username** will be used.\n\nRequired scopes:\n+ **None**",
        "operationId": "users.lostPassword",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "Username.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Username."
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Email",
              "type": "string",
              "description": "Email."
            }
          },
          {
            "name": "oauth_token",
            "in": "query",
            "description": "A valid one time token.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Oauth Token",
              "type": "string",
              "description": "A valid one time token."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LostPasswordModel"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/avatar": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Upload Avatar",
        "description": "Upload avatar for a user.\n\nRequired scopes:\n+ **post**\n+ **admincp**",
        "operationId": "users.uploadAvatar",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Userid",
              "type": "integer",
              "description": "User id."
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_avatar_users__userId__avatar_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessUploadModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete Avatar",
        "description": "Delete avatar for a user.\n\nRequired scopes:\n+ **post**",
        "operationId": "users.deleteAvatar",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Userid",
              "type": "integer",
              "description": "User id."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveChangesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/users/{userId}/avatar-crop": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Avatar Crop",
        "description": "Crop avatar for a user.\n\nRequired scopes:\n+ **post**\n+ **admincp**",
        "operationId": "users.cropAvatar",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Userid",
              "type": "integer",
              "description": "User id."
            }
          },
          {
            "name": "x",
            "in": "query",
            "description": "The starting point of the selection by width. Default value - 0",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "X",
              "type": "integer",
              "description": "The starting point of the selection by width. Default value - 0"
            }
          },
          {
            "name": "y",
            "in": "query",
            "description": "The starting point of the selection by height. Default value - 0",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Y",
              "type": "integer",
              "description": "The starting point of the selection by height. Default value - 0"
            }
          },
          {
            "name": "crop",
            "in": "query",
            "description": "Selection size. Minimum value - 16.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Crop",
              "type": "integer",
              "description": "Selection size. Minimum value - 16."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessUploadModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/users/{userId}/followers": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User Followers",
        "description": "List of a user's followers.\n\nRequired scopes:\n+ **read**",
        "operationId": "users.getUserFollowers",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Userid",
              "type": "integer",
              "description": "User id."
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Ordering of followers. Support: **natural**, **follow_date**, **follow_date_reverse**.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Order",
              "type": "string",
              "description": "Ordering of followers. Support: **natural**, **follow_date**, **follow_date_reverse**."
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number of followers.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number of followers."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of followers in a page.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Number of followers in a page."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Follow User",
        "description": "Follow a user.\n\nRequired scopes:\n+ **post**",
        "operationId": "users.follow",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Userid",
              "type": "integer",
              "description": "User id."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveChangesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Unfollow User",
        "description": "Unfollow a user.\n\nRequired scopes:\n+ **post**",
        "operationId": "users.unfollow",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Userid",
              "type": "integer",
              "description": "User id."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveChangesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/users/{userId}/followings": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Followed Users By User",
        "description": "List of users whom are followed by a user.\n\nRequired scopes:\n+ **read**",
        "operationId": "users.getFollowedByUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Userid",
              "type": "integer",
              "description": "User id."
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Ordering of users. Support: **natural**, **follow_date**, **follow_date_reverse**.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Order",
              "type": "string",
              "description": "Ordering of users. Support: **natural**, **follow_date**, **follow_date_reverse**."
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number of users.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number of users."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of users in a page.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Number of users in a page."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowingUsersModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/users/ignored": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Ignored Users",
        "description": "List of ignored users of current user.\n\nRequired scopes:\n+ **read**",
        "operationId": "users.getIgnored",
        "parameters": [
          {
            "name": "total",
            "in": "query",
            "description": "If included in the request, only the user count is returned as **users_total**.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Total",
              "type": "integer",
              "description": "If included in the request, only the user count is returned as **users_total**."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IgnoredUsersModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/users/{userId}/ignore": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Ignore User",
        "description": "Ignore a user.\n\nRequired scopes:\n+ **post**",
        "operationId": "users.ignore",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Userid",
              "type": "integer",
              "description": "User id."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveChangesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Unignore User",
        "description": "Stop ignoring a user.\n\nRequired scopes:\n+ **post**",
        "operationId": "users.unignore",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Userid",
              "type": "integer",
              "description": "User id."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveChangesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/users/groups": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get All User Groups",
        "description": "List of all user groups.\n\nRequired scopes:\n+ **read**\n+ **admincp**",
        "operationId": "users.getAllGroups",
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupsModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/users/{userId}/groups": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User Groups",
        "description": "List of a user's groups.\n\nRequired scopes:\n+ **read**\n+ **admincp**",
        "operationId": "users.getUserGroups",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Userid",
              "type": "integer",
              "description": "User id."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/users/{userId}/timeline": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Contents",
        "description": "List of contents created by user (with pagination).\n\nRequired scopes:\n+ **read**",
        "operationId": "profilePosts.getContents",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Userid",
              "type": "integer",
              "description": "User id."
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number of contents.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number of contents."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of contents in a page.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Number of contents in a page."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeLinesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Profile Posts"
        ],
        "summary": "Create Profile Post",
        "description": "Create a new profile post on a user timeline.\n\nRequired scopes:\n+ **post**",
        "operationId": "profilePosts.create",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Userid",
              "type": "integer",
              "description": "User id."
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "If posting to authorized user timeline, **status** can be used instead of **post_body** for content of the new profile post.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Status",
              "type": "string",
              "description": "If posting to authorized user timeline, **status** can be used instead of **post_body** for content of the new profile post."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_profile_post_users__userId__timeline_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeLineModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/profile-posts/{profilePostId}": {
      "get": {
        "tags": [
          "Profile Posts"
        ],
        "summary": "Get Profile Post",
        "description": "Detail information of a profile post.\n\nRequired scopes:\n+ **read**",
        "operationId": "profilePosts.get",
        "parameters": [
          {
            "name": "profilePostId",
            "in": "path",
            "description": "Id of profile post.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Profilepostid",
              "type": "integer",
              "description": "Id of profile post."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilePostModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Profile Posts"
        ],
        "summary": "Edit Profile Post",
        "description": "Edit a profile post.\n\nRequired scopes:\n+ **post**",
        "operationId": "profilePosts.edit",
        "parameters": [
          {
            "name": "profilePostId",
            "in": "path",
            "description": "Id of profile post.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Profilepostid",
              "type": "integer",
              "description": "Id of profile post."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_edit_profile_post_profile_posts__profilePostId__put"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilePostModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Profile Posts"
        ],
        "summary": "Delete Profile Post",
        "description": "Delete a profile post.\n\nRequired scopes:\n+ **post**",
        "operationId": "profilePosts.delete",
        "parameters": [
          {
            "name": "profilePostId",
            "in": "path",
            "description": "Id of profile post.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Profilepostid",
              "type": "integer",
              "description": "Id of profile post."
            }
          },
          {
            "name": "reason",
            "in": "query",
            "description": "Reason of the profile post removal.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Reason",
              "type": "string",
              "description": "Reason of the profile post removal."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveChangesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/profile-posts/{profilePostId}/likes": {
      "get": {
        "tags": [
          "Profile Posts"
        ],
        "summary": "Get Profile Post Likes",
        "description": "List of users who liked a profile post.\n\nRequired scopes:\n+ **read**",
        "operationId": "profilePosts.getLikedUsers",
        "parameters": [
          {
            "name": "profilePostId",
            "in": "path",
            "description": "Id of profile post.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Profilepostid",
              "type": "integer",
              "description": "Id of profile post."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersLikedModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Profile Posts"
        ],
        "summary": "Like Profile Post",
        "description": "Like a profile post.\n\nRequired scopes:\n+ **post**",
        "operationId": "profilePosts.like",
        "parameters": [
          {
            "name": "profilePostId",
            "in": "path",
            "description": "Id of profile post.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Profilepostid",
              "type": "integer",
              "description": "Id of profile post."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilePostModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Profile Posts"
        ],
        "summary": "Unlike Profile Post",
        "description": "Unlike a profile post.\n\nRequired scopes:\n+ **post**",
        "operationId": "profilePosts.unlike",
        "parameters": [
          {
            "name": "profilePostId",
            "in": "path",
            "description": "Id of profile post.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Profilepostid",
              "type": "integer",
              "description": "Id of profile post."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilePostModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/profile-posts/{profilePostId}/comments": {
      "get": {
        "tags": [
          "Profile Post Comments"
        ],
        "summary": "Get Profile Post Comments",
        "description": "List of comments of a profile post.\n\nRequired scopes:\n+ **read**",
        "operationId": "profilePosts.getComments",
        "parameters": [
          {
            "name": "profilePostId",
            "in": "path",
            "description": "Id of profile post.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Profilepostid",
              "type": "integer",
              "description": "Id of profile post."
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Date to get older comments. Please note that this entry point does not support the page parameter but it still does support **limit**.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Before",
              "type": "integer",
              "description": "Date to get older comments. Please note that this entry point does not support the page parameter but it still does support **limit**."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of profile posts in a page.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Number of profile posts in a page."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentsModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Profile Post Comments"
        ],
        "summary": "Create Profile Post Comment",
        "description": "Create a new profile post comment.\n\nRequired scopes:\n+ **post**",
        "operationId": "profilePosts.createComment",
        "parameters": [
          {
            "name": "profilePostId",
            "in": "path",
            "description": "Id of profile post.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Profilepostid",
              "type": "integer",
              "description": "Id of profile post."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_profile_post_comment_profile_posts__profilePostId__comments_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/profile-posts/{profilePostId}/comments/{commentId}": {
      "get": {
        "tags": [
          "Profile Post Comments"
        ],
        "summary": "Get Profile Post Comment",
        "description": "Detail information of a profile post comment.\n\nRequired scopes:\n+ **read**",
        "operationId": "profilePosts.getComment",
        "parameters": [
          {
            "name": "profilePostId",
            "in": "path",
            "description": "Id of profile post.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Profilepostid",
              "type": "integer",
              "description": "Id of profile post."
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "Id of profile post comment.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Commentid",
              "type": "integer",
              "description": "Id of profile post comment."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Profile Post Comments"
        ],
        "summary": "Delete Profile Post Comment",
        "description": "Delete a profile post's comment.\n\nRequired scopes:\n+ **post**",
        "operationId": "profilePosts.deleteComment",
        "parameters": [
          {
            "name": "profilePostId",
            "in": "path",
            "description": "Id of profile post.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Profilepostid",
              "type": "integer",
              "description": "Id of profile post."
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "Id of profile post comment.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Commentid",
              "type": "integer",
              "description": "Id of profile post comment."
            }
          },
          {
            "name": "reason",
            "in": "query",
            "description": "Delete reason.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Reason",
              "type": "string",
              "description": "Delete reason."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveChangesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/profile-posts/{profilePostId}/report": {
      "post": {
        "tags": [
          "Profile Posts"
        ],
        "summary": "Report Profile Post",
        "description": "Report a profile post.\n\nRequired scopes:\n+ **post**",
        "operationId": "profilePosts.report",
        "parameters": [
          {
            "name": "profilePostId",
            "in": "path",
            "description": "Id of profile post.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Profilepostid",
              "type": "integer",
              "description": "Id of profile post."
            }
          },
          {
            "name": "message",
            "in": "query",
            "description": "Reason of the report.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Message",
              "type": "string",
              "description": "Reason of the report."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveChangesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/conversations": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Get Conversations",
        "description": "List of conversations (with pagination).\n\nRequired scopes:\n+ **read**\n+ **conversate**",
        "operationId": "conversations.getAll",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of conversations.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number of conversations."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of conversations in a page.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Number of conversations in a page."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationsModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Conversations"
        ],
        "summary": "Create Conversation",
        "description": "Create a new conversation.\n\nRequired scopes:\n+ **post**\n+ **conversate**",
        "operationId": "conversations.create",
        "parameters": [
          {
            "name": "recipient_id",
            "in": "query",
            "description": "Id of recipient. Required if **is_group=0**.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Recipient Id",
              "type": "integer",
              "description": "Id of recipient."
            }
          },
          {
            "name": "recipients",
            "in": "query",
            "description": "Username of recipient. Required if **is_group=1**.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Recipients",
              "type": "string",
              "description": "Username of recipient. Required if **is_group=1**."
            }
          },
          {
            "name": "is_group",
            "in": "query",
            "description": "Is group. Set **0** if personal conversation, or set **1** if group.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Is Group",
              "type": "integer",
              "description": "Is group. Set **0** if personal conversation, or set **1** if group."
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title of new conversation. Required if **is_group=1**.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Title",
              "type": "string",
              "description": "The title of new conversation. Required if **is_group=1**."
            }
          },
          {
            "name": "open_invite",
            "in": "query",
            "description": "Open invite. Set **0** if closed invite, or set **1** if open invite.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Open Invite",
              "type": "integer",
              "description": "Open invite. Set **0** if closed invite, or set **1** if open invite."
            }
          },
          {
            "name": "conversation_locked",
            "in": "query",
            "description": "Is conversation locked.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Conversation Locked",
              "type": "integer",
              "description": "Is conversation locked."
            }
          },
          {
            "name": "allow_edit_messages",
            "in": "query",
            "description": "Allow edit messages.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Allow Edit Messages",
              "type": "integer",
              "description": "Allow edit messages."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_post_conversations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/conversations/{conversationId}": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Get Conversation",
        "description": "Detail information of a conversation.\n\nRequired scopes:\n+ **read**\n+ **conversate**",
        "operationId": "conversations.get",
        "parameters": [
          {
            "name": "conversationId",
            "in": "path",
            "description": "Id of conversation.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Conversationid",
              "type": "integer",
              "description": "Id of conversation."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Conversations"
        ],
        "summary": "Leave Conversation",
        "description": "Leave the conversation.\n\nRequired scopes:\n+ **post**\n+ **conversate**",
        "operationId": "conversations.delete",
        "parameters": [
          {
            "name": "conversationId",
            "in": "path",
            "description": "Id of conversation.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Conversationid",
              "type": "integer",
              "description": "Id of conversation."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveChangesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/conversation-messages": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Get Conversation Messages",
        "description": "List of messages in a conversation (with pagination).\n\nRequired scopes:\n+ **read**\n+ **conversate**",
        "operationId": "conversations.getMessages",
        "parameters": [
          {
            "name": "conversation_id",
            "in": "query",
            "description": "Id of needed conversation.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Conversation Id",
              "type": "integer",
              "description": "Id of needed conversation."
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number of messages.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number of messages."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of messages in a page.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Number of messages in a page."
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Ordering of messages. Can be [**natural**, **natural_reverse**].",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Order",
              "type": "string",
              "description": "Ordering of messages. Can be [**natural**, **natural_reverse**]."
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Date to get older messages.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Before",
              "type": "integer",
              "description": "Date to get older messages."
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Date to get newer messages.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "After",
              "type": "integer",
              "description": "Date to get newer messages."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationsMessageModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Conversations"
        ],
        "summary": "Create Conversation Message",
        "description": "Create a new conversation message.\n\nRequired scopes:\n+ **post**\n+ **conversate**",
        "operationId": "conversations.createMassage",
        "parameters": [
          {
            "name": "conversation_id",
            "in": "query",
            "description": "Id of needed conversation.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Conversation Id",
              "type": "integer",
              "description": "Id of needed conversation."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_conversation_message_conversation_messages_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationMessageModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/conversation-messages/{messageId}": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Get Conversation Message",
        "description": "Detail information of a message.\n\nRequired scopes:\n+ **read**\n+ **conversate**",
        "operationId": "conversations.getMessage",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "Id of message.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Messageid",
              "type": "integer",
              "description": "Id of message."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationMessageModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Conversations"
        ],
        "summary": "Edit Conversation Message",
        "description": "Edit a message.\n\nRequired scopes:\n+ **post**\n+ **conversate**",
        "operationId": "conversations.editMessage",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "Id of message.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Messageid",
              "type": "integer",
              "description": "Id of message."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_edit_conversation_message_conversation_messages__messageId__put"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationMessageModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Conversations"
        ],
        "summary": "Delete Conversation Message",
        "description": "Delete a message.\n\nRequired scopes:\n+ **post**\n+ **conversate**",
        "operationId": "conversations.deleteMessage",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "Id of message.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Messageid",
              "type": "integer",
              "description": "Id of message."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveChangesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/conversation-messages/{messageId}/report": {
      "post": {
        "tags": [
          "Conversations"
        ],
        "summary": "Report Conversation Message",
        "description": "Report a message.\n\nRequired scopes:\n+ **post**\n+ **conversate**",
        "operationId": "conversations.reportMessage",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "Id of message.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Messageid",
              "type": "integer",
              "description": "Id of message."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_report_conversation_message_conversation_messages__messageId__report_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveChangesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/notifications": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get Notifications",
        "description": "List of notifications (both read and unread).\n\nRequired scopes:\n+ **read**",
        "operationId": "notifications.getAll",
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationsModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/notifications/{notificationId}/content": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get Notification",
        "description": "Get associated content of notification. The response depends on the content type.\n\nRequired scopes:\n+ **read**",
        "operationId": "notifications.get",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "description": "Id of notification.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "title": "Notificationid",
              "type": "integer",
              "description": "Id of notification."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/notifications/custom": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Custom Notification",
        "description": "Send a custom alert.\n\nRequired scopes:\n+ **post**\n+ **Also: the current user must have the [bd] API: Send custom alert permission**",
        "operationId": "notifications.sendCustom",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_custom_notification_notifications_custom_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/notifications/read": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Mark Notification Read",
        "description": "Mark single notification or all existing notifications read.\n\nRequired scopes:\n+ **post**",
        "operationId": "notifications.markRead",
        "parameters": [
          {
            "name": "notification_id",
            "in": "query",
            "description": "If notification_id is omitted, it's mark all existing notifications as read.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Notification Id",
              "type": "integer",
              "description": "If notification_id is omitted, it's mark all existing notifications as read."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveChangesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/search/threads": {
      "post": {
        "tags": [
          "Searching"
        ],
        "summary": "Search Thread",
        "description": "Search for threads.\n\nRequired scopes:\n+ **post**",
        "operationId": "searching.threads",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search query. Can be skipped if **user_id** is set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Q",
              "type": "string",
              "description": "Can be skipped if **user_id** is set."
            }
          },
          {
            "name": "tag",
            "in": "query",
            "description": "Tag to search for tagged contents.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Tag",
              "type": "string",
              "description": "Tag to search for tagged contents."
            }
          },
          {
            "name": "forum_id",
            "in": "query",
            "description": "Id of the container forum to search for contents. Child forums of the specified forum will be included in the search.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Forum Id",
              "type": "integer",
              "description": "Id of the container forum to search for contents. Child forums of the specified forum will be included in the search."
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "Id of the creator to search for contents.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "User Id",
              "type": "integer",
              "description": "Id of the creator to search for contents."
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number of results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number of results."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results in a page.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Number of results in a page."
            }
          },
          {
            "name": "data_limit",
            "in": "query",
            "description": "Number of thread data to be returned.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Data Limit",
              "type": "integer",
              "description": "Number of thread data to be returned."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchThreadsModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/search/posts": {
      "post": {
        "tags": [
          "Searching"
        ],
        "summary": "Search Post",
        "description": "Search for posts.\n\nRequired scopes:\n+ **post**",
        "operationId": "searching.posts",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search query. Can be skipped if **user_id** is set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Q",
              "type": "string",
              "description": "Can be skipped if **user_id** is set."
            }
          },
          {
            "name": "tag",
            "in": "query",
            "description": "Tag to search for tagged contents.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Tag",
              "type": "string",
              "description": "Tag to search for tagged contents."
            }
          },
          {
            "name": "forum_id",
            "in": "query",
            "description": "Id of the container forum to search for contents. Child forums of the specified forum will be included in the search.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Forum Id",
              "type": "integer",
              "description": "Id of the container forum to search for contents. Child forums of the specified forum will be included in the search."
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "Id of the creator to search for contents.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "User Id",
              "type": "integer",
              "description": "Id of the creator to search for contents."
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number of results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number of results."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results in a page.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Number of results in a page."
            }
          },
          {
            "name": "data_limit",
            "in": "query",
            "description": "Number of post data to be returned.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Data Limit",
              "type": "integer",
              "description": "Number of post data to be returned."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchPostsModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/search": {
      "post": {
        "tags": [
          "Searching"
        ],
        "summary": "Search",
        "description": "Search for all supported contents.\n\nRequired scopes:\n+ **post**",
        "operationId": "searching.allContents",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search query. Can be skipped if **user_id** is set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Q",
              "type": "string",
              "description": "Can be skipped if **user_id** is set."
            }
          },
          {
            "name": "tag",
            "in": "query",
            "description": "Tag to search for tagged contents.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Tag",
              "type": "string",
              "description": "Tag to search for tagged contents."
            }
          },
          {
            "name": "forum_id",
            "in": "query",
            "description": "Id of the container forum to search for contents. Child forums of the specified forum will be included in the search.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Forum Id",
              "type": "integer",
              "description": "Id of the container forum to search for contents. Child forums of the specified forum will be included in the search."
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "Id of the creator to search for contents.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "User Id",
              "type": "integer",
              "description": "Id of the creator to search for contents."
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number of results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number of results."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results in a page.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Number of results in a page."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/search/tagged": {
      "post": {
        "tags": [
          "Searching"
        ],
        "summary": "Search Tagged",
        "description": "Search for tagged contents.\n\nRequired scopes:\n+ **post**",
        "operationId": "searching.Tagged",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "Tag to search for tagged contents.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Tag",
              "type": "string",
              "description": "Tag to search for tagged contents."
            }
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "Array of tags to search for tagged contents.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Tags",
              "type": "array",
              "description": "Array of tags to search for tagged contents.",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number of results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number of results."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results in a page.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Number of results in a page."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaggedModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/batch": {
      "post": {
        "tags": [
          "Batch requests"
        ],
        "summary": "Batch",
        "description": "Execute multiple API requests at once (Separated by comma). Maximum batch jobs is 10.\n\nRequired scopes:\n+ Same as called API requests.",
        "operationId": "batchRequests.execute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobsModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/search/indexing": {
      "post": {
        "tags": [
          "Batch requests"
        ],
        "summary": "Search Indexing",
        "description": "Index external content data into search system to be searched later.\n\nRequired scopes:\n+ **post**",
        "operationId": "batchRequests.searchIndexing",
        "parameters": [
          {
            "name": "content_type",
            "in": "query",
            "description": "The type of content being indexed.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Content Type",
              "type": "string",
              "description": "The type of content being indexed."
            }
          },
          {
            "name": "content_id",
            "in": "query",
            "description": "The unique id for the content.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Content Id",
              "type": "integer",
              "description": "The unique id for the content."
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "Content title.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Title",
              "type": "string",
              "description": "Content title."
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Unix timestamp in second of the content. If missing, current time will be used.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Date",
              "type": "integer",
              "description": "Unix timestamp in second of the content. If missing, current time will be used."
            }
          },
          {
            "name": "link",
            "in": "query",
            "description": "Link related to content.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "title": "Link",
              "type": "string",
              "description": "Link related to content."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_search_indexing_search_indexing_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveChangesModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BatchModel": {
        "title": "BatchModel",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BatchJobModel"
        }
      },
      "Body_create_conversation_message_conversation_messages_post": {
        "title": "Body_create_conversation_message_conversation_messages_post",
        "required": [
          "message_body"
        ],
        "type": "object",
        "properties": {
          "message_body": {
            "title": "Message Body",
            "type": "string",
            "description": "Content of the new message."
          }
        }
      },
      "Body_create_conversations_attachment_conversations_attachments_post": {
        "title": "Body_create_conversations_attachment_conversations_attachments_post",
        "type": "object",
        "properties": {
          "file": {
            "title": "File",
            "type": "string",
            "format": "binary",
            "default": "QmluYXJ5IGRhdGEgb2YgdGhlIGF0dGFjaG1lbnQu"
          }
        }
      },
      "Body_create_post_comment_posts__postId__comments_post": {
        "title": "Body_create_post_comment_posts__postId__comments_post",
        "required": [
          "comment_body"
        ],
        "type": "object",
        "properties": {
          "comment_body": {
            "title": "Comment Body",
            "type": "string",
            "description": "Content of the new post comment."
          }
        }
      },
      "Body_create_profile_post_comment_profile_posts__profilePostId__comments_post": {
        "title": "Body_create_profile_post_comment_profile_posts__profilePostId__comments_post",
        "type": "object",
        "properties": {
          "comment_body": {
            "title": "Comment Body",
            "type": "string",
            "description": "Content of the new profile post comment."
          }
        }
      },
      "Body_create_profile_post_users__userId__timeline_post": {
        "title": "Body_create_profile_post_users__userId__timeline_post",
        "required": [
          "post_body"
        ],
        "type": "object",
        "properties": {
          "post_body": {
            "title": "Post Body",
            "type": "string",
            "description": "Content of the new profile post."
          }
        }
      },
      "Body_custom_notification_notifications_custom_post": {
        "title": "Body_custom_notification_notifications_custom_post",
        "required": [
          "message",
          "message_html",
          "user_id",
          "username"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer",
            "description": "The alert receiver."
          },
          "username": {
            "title": "Username",
            "type": "string",
            "description": "The alert receiver."
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "The alert message."
          },
          "message_html": {
            "title": "Message Html",
            "type": "string",
            "description": "The alert message."
          },
          "notification_type": {
            "title": "Notification Type",
            "type": "string",
            "description": "The notification type."
          },
          "extra_data": {
            "title": "Extra Data",
            "type": "string",
            "description": "Extra data when sending alert."
          }
        }
      },
      "Body_edit_conversation_message_conversation_messages__messageId__put": {
        "title": "Body_edit_conversation_message_conversation_messages__messageId__put",
        "required": [
          "message_body"
        ],
        "type": "object",
        "properties": {
          "message_body": {
            "title": "Message Body",
            "type": "string",
            "description": "New content of the message."
          }
        }
      },
      "Body_edit_post_posts__postId__put": {
        "title": "Body_edit_post_posts__postId__put",
        "type": "object",
        "properties": {
          "post_body": {
            "title": "Post Body",
            "type": "string",
            "description": "New content of the post."
          }
        }
      },
      "Body_post_conversations": {
        "title": "Body_post_conversations",
        "required": [
          "message_body"
        ],
        "type": "object",
        "properties": {
          "message_body": {
            "title": "Message Body",
            "type": "string",
            "description": "Message."
          }
        }
      },
      "Body_edit_profile_post_profile_posts__profilePostId__put": {
        "title": "Body_edit_profile_post_profile_posts__profilePostId__put",
        "required": [
          "post_body"
        ],
        "type": "object",
        "properties": {
          "post_body": {
            "title": "Post Body",
            "type": "string",
            "description": "New content of the profile post."
          }
        }
      },
      "Body_get_posts_posts_post": {
        "title": "Body_get_posts_posts_post",
        "required": [
          "post_body"
        ],
        "type": "object",
        "properties": {
          "post_body": {
            "title": "Post Body",
            "type": "string",
            "description": "Content of the new post."
          }
        }
      },
      "Body_get_threads_threads_post": {
        "title": "Body_get_threads_threads_post",
        "required": [
          "post_body"
        ],
        "type": "object",
        "properties": {
          "post_body": {
            "title": "Post Body",
            "type": "string",
            "description": "Content of the new thread."
          }
        }
      },
      "Body_oauth_admin_oauth_token_admin_post": {
        "title": "Body_oauth_admin_oauth_token_admin_post",
        "required": [
          "user_id"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer",
            "description": "Id of the user that needs access token."
          }
        }
      },
      "Body_oauth_associate_oauth_token_associate_post": {
        "title": "Body_oauth_associate_oauth_token_associate_post",
        "required": [
          "client_id",
          "extra_data",
          "extra_timestamp",
          "password",
          "user_id"
        ],
        "type": "object",
        "properties": {
          "client_id": {
            "title": "Client Id",
            "type": "string",
            "description": "Client id."
          },
          "user_id": {
            "title": "User Id",
            "type": "integer",
            "description": "Can be used with password_algo for better security. See Encryption section for more information."
          },
          "password": {
            "title": "Password",
            "type": "string",
            "description": "Password."
          },
          "extra_data": {
            "title": "Extra Data",
            "type": "string",
            "description": "Extra data."
          },
          "extra_timestamp": {
            "title": "Extra Timestamp",
            "type": "integer",
            "description": "Extra timestamp."
          }
        }
      },
      "Body_oauth_facebook_oauth_token_facebook_post": {
        "title": "Body_oauth_facebook_oauth_token_facebook_post",
        "required": [
          "client_id",
          "client_secret",
          "facebook_token"
        ],
        "type": "object",
        "properties": {
          "client_id": {
            "title": "Client Id",
            "type": "string",
            "description": "Client id."
          },
          "client_secret": {
            "title": "Client Secret",
            "type": "string",
            "description": "Client secret."
          },
          "facebook_token": {
            "title": "Facebook Token",
            "type": "string",
            "description": "Facebook token."
          }
        }
      },
      "Body_oauth_google_oauth_token_google_post": {
        "title": "Body_oauth_google_oauth_token_google_post",
        "required": [
          "client_id",
          "client_secret",
          "google_token"
        ],
        "type": "object",
        "properties": {
          "client_id": {
            "title": "Client Id",
            "type": "string",
            "description": "Client id."
          },
          "client_secret": {
            "title": "Client Secret",
            "type": "string",
            "description": "Client secret."
          },
          "google_token": {
            "title": "Google Token",
            "type": "string",
            "description": "Google token."
          }
        }
      },
      "Body_oauth_twitter_oauth_token_twitter_post": {
        "title": "Body_oauth_twitter_oauth_token_twitter_post",
        "required": [
          "client_id",
          "client_secret",
          "twitter_auth",
          "twitter_uri"
        ],
        "type": "object",
        "properties": {
          "client_id": {
            "title": "Client Id",
            "type": "string",
            "description": "Client id."
          },
          "client_secret": {
            "title": "Client Secret",
            "type": "string",
            "description": "Client secret."
          },
          "twitter_uri": {
            "title": "Twitter Uri",
            "type": "string",
            "description": "\"the full **/account/verify_credentials.json** uri that has been used to calculate OAuth signature. For security reason, the uri must use HTTPS protocol and the hostname must be either \"twitter.com\" or \"api.twitter.com\"."
          },
          "twitter_auth": {
            "title": "Twitter Auth",
            "type": "string",
            "description": "the complete authentication header that starts with **\"OAuth\"**. Consult Twitter document for more information."
          }
        }
      },
      "Body_post_followers_forums__forumId__followers_post": {
        "title": "Body_post_followers_forums__forumId__followers_post",
        "type": "object",
        "properties": {
          "post": {
            "title": "Post",
            "type": "integer",
            "description": "Whether to receive notification for post **1** or just thread **0**."
          },
          "alert": {
            "title": "Alert",
            "type": "integer",
            "description": "Whether to receive notification as alert."
          },
          "email": {
            "title": "Email",
            "type": "integer",
            "description": "Whether to receive notification as email."
          }
        }
      },
      "Body_report_conversation_message_conversation_messages__messageId__report_post": {
        "title": "Body_report_conversation_message_conversation_messages__messageId__report_post",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Reason of the report."
          }
        }
      },
      "Body_search_indexing_search_indexing_post": {
        "title": "Body_search_indexing_search_indexing_post",
        "required": [
          "body"
        ],
        "type": "object",
        "properties": {
          "body": {
            "title": "Body",
            "type": "string",
            "description": "Content body."
          }
        }
      },
      "Body_upload_attachment_conversation_message_conversation_messages_attachments_post": {
        "title": "Body_upload_attachment_conversation_message_conversation_messages_attachments_post",
        "type": "object",
        "properties": {
          "file": {
            "title": "File",
            "type": "string",
            "format": "binary",
            "default": "QmluYXJ5IGRhdGEgb2YgdGhlIGF0dGFjaG1lbnQu"
          },
          "conversation_id": {
            "title": "Conversation Id",
            "type": "integer",
            "description": "Id of the container conversation of the target message."
          },
          "message_id": {
            "title": "Message Id",
            "type": "integer",
            "description": "Id of the target message."
          },
          "attachment_hash": {
            "title": "Attachment Hash",
            "type": "string",
            "description": "A unique hash."
          }
        }
      },
      "Body_upload_attachments_threads_attachments_post": {
        "title": "Body_upload_attachments_threads_attachments_post",
        "required": [
          "file"
        ],
        "type": "object",
        "properties": {
          "file": {
            "title": "File",
            "type": "string",
            "description": "Binary data of the attachment.",
            "format": "binary"
          }
        }
      },
      "Body_upload_avatar_users__userId__avatar_post": {
        "title": "Body_upload_avatar_users__userId__avatar_post",
        "required": [
          "avatar"
        ],
        "type": "object",
        "properties": {
          "avatar": {
            "title": "Avatar",
            "type": "string",
            "description": "Binary data of the avatar.",
            "format": "binary"
          }
        }
      },
      "Body_upload_post_attachments_posts_attachments_post": {
        "title": "Body_upload_post_attachments_posts_attachments_post",
        "required": [
          "file"
        ],
        "type": "object",
        "properties": {
          "file": {
            "title": "File",
            "type": "string",
            "description": "Binary data of the attachment.",
            "format": "binary"
          }
        }
      },
      "CategoriesModel": {
        "title": "CategoriesModel",
        "required": [
          "categories",
          "categories_total",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "categories": {
            "title": "Categories",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          },
          "categories_total": {
            "title": "Categories Total",
            "type": "integer"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__categories__SystemInfo"
          }
        }
      },
      "Category": {
        "title": "Category",
        "required": [
          "category_description",
          "category_id",
          "category_title",
          "links",
          "permissions"
        ],
        "type": "object",
        "properties": {
          "category_id": {
            "title": "Category Id",
            "type": "integer"
          },
          "category_title": {
            "title": "Category Title",
            "type": "string"
          },
          "category_description": {
            "title": "Category Description",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__categories__Links"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__categories__Permissions"
          }
        }
      },
      "CategoryModel": {
        "title": "CategoryModel",
        "required": [
          "category",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__categories__SystemInfo"
          }
        }
      },
      "Choice": {
        "title": "Choice",
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "title": "Key",
            "type": "string"
          },
          "value": {
            "title": "Value",
            "type": "string"
          }
        }
      },
      "CommentModel": {
        "title": "CommentModel",
        "required": [
          "comment",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__comments__Comment"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__comments__SystemInfo"
          }
        }
      },
      "Comments": {
        "title": "Comments",
        "required": [
          "111"
        ],
        "type": "object",
        "properties": {
          "111": {
            "$ref": "#/components/schemas/PostComment"
          }
        }
      },
      "CommentsModel": {
        "title": "CommentsModel",
        "required": [
          "comments",
          "comments_total",
          "profile_post",
          "system_info",
          "timeline_user"
        ],
        "type": "object",
        "properties": {
          "comments": {
            "title": "Comments",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__profile_posts__comments__Comment"
            }
          },
          "comments_total": {
            "title": "Comments Total",
            "type": "integer"
          },
          "profile_post": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__comments__ProfilePost"
          },
          "timeline_user": {
            "$ref": "#/components/schemas/TimelineUser"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__comments__SystemInfo"
          }
        }
      },
      "ConversationAttachmentModel": {
        "title": "ConversationAttachmentModel",
        "required": [
          "attachment"
        ],
        "type": "object",
        "properties": {
          "attachment": {
            "title": "Attachment",
            "type": "string"
          }
        }
      },
      "ConversationMessageModel": {
        "title": "ConversationMessageModel",
        "required": [
          "message",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "message": {
            "$ref": "#/components/schemas/Message"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__conversations__conv_message__SystemInfo"
          }
        }
      },
      "ConversationModel": {
        "title": "ConversationModel",
        "required": [
          "conversation",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "conversation": {
            "$ref": "#/components/schemas/forum_api__schemas__conversations__Conversation"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__conversations__SystemInfo"
          }
        }
      },
      "ConversationsMessageModel": {
        "title": "ConversationsMessageModel",
        "required": [
          "conversation",
          "messages",
          "messages_total",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "messages": {
            "title": "Messages",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            }
          },
          "messages_total": {
            "title": "Messages Total",
            "type": "integer"
          },
          "conversation": {
            "$ref": "#/components/schemas/forum_api__schemas__conversations__conv_message__Conversation"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__conversations__conv_message__SystemInfo"
          }
        }
      },
      "ConversationsModel": {
        "title": "ConversationsModel",
        "required": [
          "conversations",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "conversations": {
            "title": "Conversations",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__conversations__Conversation"
            }
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__conversations__SystemInfo"
          }
        }
      },
      "CreatePostModel": {
        "title": "CreatePostModel",
        "required": [
          "post",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "post": {
            "$ref": "#/components/schemas/forum_api__schemas__posts__Post"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__posts__SystemInfo"
          }
        }
      },
      "CreateUserModel": {
        "title": "CreateUserModel",
        "required": [
          "token",
          "user"
        ],
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/forum_api__schemas__users__User"
          },
          "token": {
            "title": "Token",
            "type": "string"
          }
        }
      },
      "Field": {
        "title": "Field",
        "required": [
          "description",
          "id",
          "is_required",
          "position",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "position": {
            "title": "Position",
            "type": "string"
          },
          "is_required": {
            "title": "Is Required",
            "type": "boolean"
          },
          "is_multi_choice": {
            "title": "Is Multi Choice",
            "type": "boolean"
          },
          "choices": {
            "title": "Choices",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Choice"
            }
          }
        }
      },
      "FieldsModel": {
        "title": "FieldsModel",
        "required": [
          "fields",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "fields": {
            "title": "Fields",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Field"
            }
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__users__SystemInfo"
          }
        }
      },
      "FilterTagsModel": {
        "title": "FilterTagsModel",
        "required": [
          "ids",
          "system_info",
          "tags"
        ],
        "type": "object",
        "properties": {
          "tags": {
            "title": "Tags",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ids": {
            "title": "Ids",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__tags__filter_tags__SystemInfo"
          }
        }
      },
      "FirstMessage": {
        "title": "FirstMessage",
        "required": [
          "conversation_id",
          "creator_user_id",
          "creator_username",
          "creator_username_html",
          "links",
          "message_attachment_count",
          "message_body",
          "message_body_html",
          "message_body_plain_text",
          "message_create_date",
          "message_id",
          "permissions",
          "user_is_ignored"
        ],
        "type": "object",
        "properties": {
          "message_id": {
            "title": "Message Id",
            "type": "integer"
          },
          "conversation_id": {
            "title": "Conversation Id",
            "type": "integer"
          },
          "creator_user_id": {
            "title": "Creator User Id",
            "type": "integer"
          },
          "creator_username": {
            "title": "Creator Username",
            "type": "string"
          },
          "creator_username_html": {
            "title": "Creator Username Html",
            "type": "string"
          },
          "message_create_date": {
            "title": "Message Create Date",
            "type": "integer"
          },
          "message_body": {
            "title": "Message Body",
            "type": "string"
          },
          "message_body_html": {
            "title": "Message Body Html",
            "type": "string"
          },
          "message_body_plain_text": {
            "title": "Message Body Plain Text",
            "type": "string"
          },
          "message_attachment_count": {
            "title": "Message Attachment Count",
            "type": "integer"
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__conversations__Links1"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__conversations__Permissions1"
          }
        }
      },
      "FollowedThreadsModel": {
        "title": "FollowedThreadsModel",
        "required": [
          "system_info",
          "threads",
          "threads_total"
        ],
        "type": "object",
        "properties": {
          "threads": {
            "title": "Threads",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__threads__Thread"
            }
          },
          "threads_total": {
            "title": "Threads Total",
            "type": "integer"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__threads__SystemInfo"
          }
        }
      },
      "FollowingUsersModel": {
        "title": "FollowingUsersModel",
        "required": [
          "system_info",
          "users",
          "users_total"
        ],
        "type": "object",
        "properties": {
          "users": {
            "title": "Users",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__users__User"
            }
          },
          "users_total": {
            "title": "Users Total",
            "type": "integer"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__users__SystemInfo"
          }
        }
      },
      "ForumFollowers": {
        "title": "ForumFollowers",
        "required": [
          "follow",
          "forum_description",
          "forum_id",
          "forum_is_followed",
          "forum_post_count",
          "forum_prefixes",
          "forum_thread_count",
          "forum_title",
          "links",
          "permissions",
          "thread_default_prefix_id",
          "thread_prefix_is_required"
        ],
        "type": "object",
        "properties": {
          "forum_id": {
            "title": "Forum Id",
            "type": "integer"
          },
          "forum_title": {
            "title": "Forum Title",
            "type": "string"
          },
          "forum_description": {
            "title": "Forum Description",
            "type": "string"
          },
          "forum_thread_count": {
            "title": "Forum Thread Count",
            "type": "integer"
          },
          "forum_post_count": {
            "title": "Forum Post Count",
            "type": "integer"
          },
          "forum_prefixes": {
            "title": "Forum Prefixes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__forums__ForumPrefix"
            }
          },
          "thread_default_prefix_id": {
            "title": "Thread Default Prefix Id",
            "type": "integer"
          },
          "thread_prefix_is_required": {
            "title": "Thread Prefix Is Required",
            "type": "boolean"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__forums__Links"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__forums__Permissions"
          },
          "forum_is_followed": {
            "title": "Forum Is Followed",
            "type": "boolean"
          },
          "follow": {
            "$ref": "#/components/schemas/forum_api__schemas__forums__Follow"
          }
        }
      },
      "ForumFollowersModel": {
        "title": "ForumFollowersModel",
        "required": [
          "forums",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "forums": {
            "title": "Forums",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForumFollowers"
            }
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__forums__SystemInfo"
          }
        }
      },
      "ForumModel": {
        "title": "ForumModel",
        "required": [
          "forum",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "forum": {
            "$ref": "#/components/schemas/forum_api__schemas__forums__Forum"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__forums__SystemInfo"
          }
        }
      },
      "ForumsModel": {
        "title": "ForumsModel",
        "required": [
          "forums",
          "forums_total",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "forums": {
            "title": "Forums",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__forums__Forum"
            }
          },
          "forums_total": {
            "title": "Forums Total",
            "type": "integer"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__forums__SystemInfo"
          }
        }
      },
      "GetCommentModel": {
        "title": "GetCommentModel",
        "required": [
          "comment",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "$ref": "#/components/schemas/PostComment"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__comments__SystemInfo"
          }
        }
      },
      "GetCommentsModel": {
        "title": "GetCommentsModel",
        "required": [
          "comments",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "comments": {
            "$ref": "#/components/schemas/Comments"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__comments__SystemInfo"
          }
        }
      },
      "GetFollowersModel": {
        "title": "GetFollowersModel",
        "required": [
          "system_info",
          "users"
        ],
        "type": "object",
        "properties": {
          "users": {
            "title": "Users",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__forums__User"
            }
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__forums__SystemInfo"
          }
        }
      },
      "IgnoredUser": {
        "title": "IgnoredUser",
        "required": [
          "user_id",
          "username"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "type": "string"
          }
        }
      },
      "IgnoredUsersModel": {
        "title": "IgnoredUsersModel",
        "required": [
          "users"
        ],
        "type": "object",
        "properties": {
          "users": {
            "title": "Users",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IgnoredUser"
            }
          }
        }
      },
      "JobId": {
        "title": "JobId",
        "type": "object",
        "properties": {}
      },
      "Jobs": {
        "title": "Jobs",
        "required": [
          "job_id"
        ],
        "type": "object",
        "properties": {
          "job_id": {
            "$ref": "#/components/schemas/JobId"
          }
        }
      },
      "JobsModel": {
        "title": "JobsModel",
        "required": [
          "jobs"
        ],
        "type": "object",
        "properties": {
          "jobs": {
            "$ref": "#/components/schemas/Jobs"
          }
        }
      },
      "Links4": {
        "title": "Links4",
        "required": [
          "next",
          "page",
          "pages"
        ],
        "type": "object",
        "properties": {
          "pages": {
            "title": "Pages",
            "type": "integer"
          },
          "page": {
            "title": "Page",
            "type": "integer"
          },
          "next": {
            "title": "Next",
            "type": "string"
          }
        }
      },
      "LinksBase": {
        "title": "LinksBase",
        "required": [
          "next",
          "page",
          "pages"
        ],
        "type": "object",
        "properties": {
          "pages": {
            "title": "Pages",
            "type": "integer"
          },
          "page": {
            "title": "Page",
            "type": "integer"
          },
          "next": {
            "title": "Next",
            "type": "string"
          }
        }
      },
      "Links_1": {
        "title": "Links_1",
        "required": [
          "detail",
          "first_post",
          "first_poster",
          "first_poster_avatar",
          "followers",
          "forum",
          "permalink",
          "posts"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "followers": {
            "title": "Followers",
            "type": "string"
          },
          "forum": {
            "title": "Forum",
            "type": "string"
          },
          "posts": {
            "title": "Posts",
            "type": "string"
          },
          "first_poster": {
            "title": "First Poster",
            "type": "string"
          },
          "first_poster_avatar": {
            "title": "First Poster Avatar",
            "type": "string"
          },
          "first_post": {
            "title": "First Post",
            "type": "string"
          },
          "last_poster": {
            "title": "Last Poster",
            "type": "string"
          },
          "last_post": {
            "title": "Last Post",
            "type": "string"
          }
        }
      },
      "LostPasswordModel": {
        "title": "LostPasswordModel",
        "type": "object",
        "properties": {
          "status": {
            "title": "Status",
            "type": "string",
            "default": "ok"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "default": "A password reset request has been emailed to you. Please follow the instructions in that email."
          }
        }
      },
      "Message": {
        "title": "Message",
        "required": [
          "conversation_id",
          "creator_user_id",
          "creator_username",
          "links",
          "message_attachment_count",
          "message_body",
          "message_body_html",
          "message_body_plain_text",
          "message_create_date",
          "message_id",
          "permissions",
          "user_is_ignored"
        ],
        "type": "object",
        "properties": {
          "message_id": {
            "title": "Message Id",
            "type": "integer"
          },
          "conversation_id": {
            "title": "Conversation Id",
            "type": "integer"
          },
          "creator_user_id": {
            "title": "Creator User Id",
            "type": "integer"
          },
          "creator_username": {
            "title": "Creator Username",
            "type": "string"
          },
          "message_create_date": {
            "title": "Message Create Date",
            "type": "integer"
          },
          "message_body": {
            "title": "Message Body",
            "type": "string"
          },
          "message_body_html": {
            "title": "Message Body Html",
            "type": "string"
          },
          "message_body_plain_text": {
            "title": "Message Body Plain Text",
            "type": "string"
          },
          "message_attachment_count": {
            "title": "Message Attachment Count",
            "type": "integer"
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__conversations__conv_message__Links"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__conversations__conv_message__Permissions"
          }
        }
      },
      "BatchJobModel": {
        "title": "Batch Job",
        "required": [
          "uri"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "description": "identifier for the job, will be use in output as key of a result set. If this parameter is not set, the URI will be used."
          },
          "uri": {
            "title": "Uri",
            "type": "string",
            "description": "URI of the API request to execute."
          },
          "method": {
            "title": "Method",
            "type": "string",
            "description": "HTTP method of the API request to execute. If this parameter is not set, GET HTTP method will be used."
          },
          "params": {
            "$ref": "#/components/schemas/BatchJobParams"
          }
        }
      },
      "NavigationModel": {
        "title": "NavigationModel",
        "required": [
          "elements"
        ],
        "type": "object",
        "properties": {
          "elements": {
            "title": "Elements",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__navigation__Element"
            }
          }
        }
      },
      "NavigationThreadModel": {
        "title": "NavigationThreadModel",
        "required": [
          "elements",
          "elements_count",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "elements": {
            "title": "Elements",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__threads__navigation__Element"
            }
          },
          "elements_count": {
            "title": "Elements Count",
            "type": "integer"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__threads__navigation__SystemInfo"
          }
        }
      },
      "Notification": {
        "title": "Notification",
        "required": [
          "content_action",
          "content_id",
          "content_type",
          "creator_user_id",
          "creator_username",
          "links",
          "notification_create_date",
          "notification_html",
          "notification_id",
          "notification_is_unread",
          "notification_type"
        ],
        "type": "object",
        "properties": {
          "notification_id": {
            "title": "Notification Id",
            "type": "integer"
          },
          "notification_create_date": {
            "title": "Notification Create Date",
            "type": "integer"
          },
          "content_type": {
            "title": "Content Type",
            "type": "string"
          },
          "content_id": {
            "title": "Content Id",
            "type": "integer"
          },
          "content_action": {
            "title": "Content Action",
            "type": "string"
          },
          "notification_is_unread": {
            "title": "Notification Is Unread",
            "type": "boolean"
          },
          "creator_user_id": {
            "title": "Creator User Id",
            "type": "integer"
          },
          "creator_username": {
            "title": "Creator Username",
            "type": "string"
          },
          "notification_type": {
            "title": "Notification Type",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__notification__Links"
          },
          "notification_html": {
            "title": "Notification Html",
            "type": "string"
          }
        }
      },
      "NotificationModel": {
        "title": "NotificationModel",
        "required": [
          "notification",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "notification": {
            "$ref": "#/components/schemas/Notification"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__notification__SystemInfo"
          }
        }
      },
      "NotificationsModel": {
        "title": "NotificationsModel",
        "required": [
          "links",
          "notifications",
          "notifications_total",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "notifications": {
            "title": "Notifications",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notification"
            }
          },
          "notifications_total": {
            "title": "Notifications Total",
            "type": "integer"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__notification__Links1"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__notification__SystemInfo"
          }
        }
      },
      "Page": {
        "title": "Page",
        "required": [
          "links",
          "page_description",
          "page_id",
          "page_title",
          "permissions"
        ],
        "type": "object",
        "properties": {
          "page_id": {
            "title": "Page Id",
            "type": "integer"
          },
          "page_title": {
            "title": "Page Title",
            "type": "string"
          },
          "page_description": {
            "title": "Page Description",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__pages__Links"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__pages__Permissions"
          }
        }
      },
      "PageModel": {
        "title": "PageModel",
        "required": [
          "page",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__pages__SystemInfo"
          }
        }
      },
      "PagesModel": {
        "title": "PagesModel",
        "required": [
          "pages",
          "pages_total",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "pages": {
            "title": "Pages",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Page"
            }
          },
          "pages_total": {
            "title": "Pages Total",
            "type": "integer"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__pages__SystemInfo"
          }
        }
      },
      "BatchJobParams": {
        "title": "Params",
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "default": "value"
          }
        },
        "description": "parameters of the API request to execute."
      },
      "PollsModel": {
        "title": "PollsModel",
        "required": [
          "links",
          "permissions",
          "poll_id",
          "poll_is_open",
          "poll_is_voted",
          "poll_max_votes",
          "poll_question",
          "poll_vote_count",
          "responses"
        ],
        "type": "object",
        "properties": {
          "poll_id": {
            "title": "Poll Id",
            "type": "integer"
          },
          "poll_question": {
            "title": "Poll Question",
            "type": "string"
          },
          "poll_vote_count": {
            "title": "Poll Vote Count",
            "type": "integer"
          },
          "poll_is_open": {
            "title": "Poll Is Open",
            "type": "boolean"
          },
          "poll_is_voted": {
            "title": "Poll Is Voted",
            "type": "boolean"
          },
          "poll_max_votes": {
            "title": "Poll Max Votes",
            "type": "integer"
          },
          "responses": {
            "title": "Responses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Response"
            }
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__threads__polls__Permissions"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__threads__polls__Links"
          }
        }
      },
      "PostComment": {
        "title": "PostComment",
        "required": [
          "links",
          "permissions",
          "post_comment_body",
          "post_comment_body_html",
          "post_comment_body_plain_text",
          "post_comment_id",
          "post_comment_is_deleted",
          "post_comment_is_published",
          "post_comment_like_count",
          "post_comment_update_date",
          "post_id",
          "poster_user_id",
          "poster_username",
          "user_is_ignored"
        ],
        "type": "object",
        "properties": {
          "post_comment_id": {
            "title": "Post Comment Id",
            "type": "integer"
          },
          "post_id": {
            "title": "Post Id",
            "type": "integer"
          },
          "poster_user_id": {
            "title": "Poster User Id",
            "type": "integer"
          },
          "poster_username": {
            "title": "Poster Username",
            "type": "string"
          },
          "post_comment_body": {
            "title": "Post Comment Body",
            "type": "string"
          },
          "post_comment_body_html": {
            "title": "Post Comment Body Html",
            "type": "string"
          },
          "post_comment_body_plain_text": {
            "title": "Post Comment Body Plain Text",
            "type": "string"
          },
          "post_comment_like_count": {
            "title": "Post Comment Like Count",
            "type": "integer"
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "post_comment_is_published": {
            "title": "Post Comment Is Published",
            "type": "boolean"
          },
          "post_comment_is_deleted": {
            "title": "Post Comment Is Deleted",
            "type": "boolean"
          },
          "post_comment_update_date": {
            "title": "Post Comment Update Date",
            "type": "integer"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__comments__Links"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__comments__Permissions"
          }
        }
      },
      "PostFollowersModel": {
        "title": "PostFollowersModel",
        "required": [
          "system_info"
        ],
        "type": "object",
        "properties": {
          "status": {
            "title": "Status",
            "type": "string",
            "default": "ok"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "default": "��������� ���������"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__forums__SystemInfo"
          }
        }
      },
      "PostLikesModel": {
        "title": "PostLikesModel",
        "required": [
          "system_info",
          "users"
        ],
        "type": "object",
        "properties": {
          "users": {
            "title": "Users",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__posts__User"
            }
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__posts__SystemInfo"
          }
        }
      },
      "PostModel": {
        "title": "PostModel",
        "required": [
          "post",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "post": {
            "$ref": "#/components/schemas/forum_api__schemas__posts__Post"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__posts__SystemInfo"
          }
        }
      },
      "PostsModel": {
        "title": "PostsModel",
        "required": [
          "links",
          "posts",
          "posts_total",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "posts": {
            "title": "Posts",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__posts__Post"
            }
          },
          "posts_total": {
            "title": "Posts Total",
            "type": "integer"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__posts__Links"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__posts__SystemInfo"
          }
        }
      },
      "ProfilePostModel": {
        "title": "ProfilePostModel",
        "required": [
          "profile_post",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "profile_post": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__profile_post__ProfilePost"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__profile_post__SystemInfo"
          }
        }
      },
      "RawTagsModel": {
        "title": "RawTagsModel",
        "required": [
          "system_info",
          "tag"
        ],
        "type": "object",
        "properties": {
          "tag": {
            "$ref": "#/components/schemas/Tags"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__tags__SystemInfo"
          }
        }
      },
      "Recipient": {
        "title": "Recipient",
        "required": [
          "avatar",
          "avatar_big",
          "avatar_small",
          "is_online",
          "last_activity",
          "user_id",
          "username",
          "username_html"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "username_html": {
            "title": "Username Html",
            "type": "string"
          },
          "avatar": {
            "title": "Avatar",
            "type": "string"
          },
          "avatar_big": {
            "title": "Avatar Big",
            "type": "string"
          },
          "avatar_small": {
            "title": "Avatar Small",
            "type": "string"
          },
          "last_activity": {
            "title": "Last Activity",
            "type": "integer"
          },
          "is_online": {
            "title": "Is Online",
            "type": "boolean"
          }
        }
      },
      "Response": {
        "title": "Response",
        "required": [
          "response_answer",
          "response_id",
          "response_is_voted",
          "response_vote_count",
          "voters"
        ],
        "type": "object",
        "properties": {
          "response_id": {
            "title": "Response Id",
            "type": "integer"
          },
          "response_answer": {
            "title": "Response Answer",
            "type": "string"
          },
          "response_is_voted": {
            "title": "Response Is Voted",
            "type": "boolean"
          },
          "response_vote_count": {
            "title": "Response Vote Count",
            "type": "integer"
          },
          "voters": {
            "title": "Voters",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Voter"
            }
          }
        }
      },
      "SaveChangesModel": {
        "title": "SaveChangesModel",
        "type": "object",
        "properties": {
          "status": {
            "title": "Status",
            "type": "string",
            "default": "ok"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "default": "Changes Saved"
          }
        }
      },
      "SearchModel": {
        "title": "SearchModel",
        "required": [
          "data",
          "data_total",
          "links",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__search__search__Datum"
            }
          },
          "data_total": {
            "title": "Data Total",
            "type": "integer"
          },
          "links": {
            "$ref": "#/components/schemas/LinksBase"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__base__SystemInfo"
          }
        }
      },
      "SearchPostsModel": {
        "title": "SearchPostsModel",
        "required": [
          "data",
          "links",
          "posts",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "posts": {
            "title": "Posts",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__search__post__Post"
            }
          },
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__search__post__Datum"
            }
          },
          "links": {
            "$ref": "#/components/schemas/LinksBase"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__base__SystemInfo"
          }
        }
      },
      "SearchTags": {
        "title": "SearchTags",
        "required": [
          "36033"
        ],
        "type": "object",
        "properties": {
          "36033": {
            "title": "36033",
            "type": "string"
          }
        }
      },
      "SearchThreadsModel": {
        "title": "SearchThreadsModel",
        "required": [
          "data",
          "links",
          "system_info",
          "threads"
        ],
        "type": "object",
        "properties": {
          "threads": {
            "title": "Threads",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__search__thread__Thread"
            }
          },
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__search__thread__Datum"
            }
          },
          "links": {
            "$ref": "#/components/schemas/LinksBase"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__base__SystemInfo"
          }
        }
      },
      "SearchUsersModel": {
        "title": "SearchUsersModel",
        "required": [
          "system_info",
          "users"
        ],
        "type": "object",
        "properties": {
          "users": {
            "title": "Users",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__users__User"
            }
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__users__SystemInfo"
          }
        }
      },
      "StatusMessageModel": {
        "title": "StatusMessageModel",
        "required": [
          "message",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "status": {
            "title": "Status",
            "type": "string",
            "default": "ok"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__base__SystemInfo"
          }
        }
      },
      "SuccessUploadModel": {
        "title": "SuccessUploadModel",
        "type": "object",
        "properties": {
          "status": {
            "title": "Status",
            "type": "string",
            "default": "ok"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "default": "Upload completed successfully"
          }
        }
      },
      "Tag": {
        "title": "Tag",
        "required": [
          "links",
          "tag_id",
          "tag_text",
          "tag_use_count"
        ],
        "type": "object",
        "properties": {
          "tag_id": {
            "title": "Tag Id",
            "type": "integer"
          },
          "tag_text": {
            "title": "Tag Text",
            "type": "string"
          },
          "tag_use_count": {
            "title": "Tag Use Count",
            "type": "integer"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__tags__tags__Links"
          }
        }
      },
      "TagModel": {
        "title": "TagModel",
        "required": [
          "links",
          "system_info",
          "tag",
          "tagged",
          "tagged_total"
        ],
        "type": "object",
        "properties": {
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "tagged": {
            "title": "Tagged",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaggedItem"
            }
          },
          "tagged_total": {
            "title": "Tagged Total",
            "type": "integer"
          },
          "links": {
            "$ref": "#/components/schemas/Links4"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__tags__tags__SystemInfo"
          }
        }
      },
      "TaggedItem": {
        "title": "TaggedItem",
        "required": [
          "content_id",
          "content_type",
          "creator_user_id",
          "creator_username",
          "first_post",
          "forum",
          "forum_id",
          "links",
          "permissions",
          "thread_create_date",
          "thread_id",
          "thread_is_deleted",
          "thread_is_followed",
          "thread_is_published",
          "thread_is_sticky",
          "thread_post_count",
          "thread_prefixes",
          "thread_tags",
          "thread_title",
          "thread_update_date",
          "thread_view_count",
          "user_is_ignored"
        ],
        "type": "object",
        "properties": {
          "content_type": {
            "title": "Content Type",
            "type": "string"
          },
          "content_id": {
            "title": "Content Id",
            "type": "integer"
          },
          "thread_id": {
            "title": "Thread Id",
            "type": "integer"
          },
          "forum_id": {
            "title": "Forum Id",
            "type": "integer"
          },
          "thread_title": {
            "title": "Thread Title",
            "type": "string"
          },
          "thread_view_count": {
            "title": "Thread View Count",
            "type": "integer"
          },
          "creator_user_id": {
            "title": "Creator User Id",
            "type": "integer"
          },
          "creator_username": {
            "title": "Creator Username",
            "type": "string"
          },
          "thread_create_date": {
            "title": "Thread Create Date",
            "type": "integer"
          },
          "thread_update_date": {
            "title": "Thread Update Date",
            "type": "integer"
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "thread_post_count": {
            "title": "Thread Post Count",
            "type": "integer"
          },
          "thread_is_published": {
            "title": "Thread Is Published",
            "type": "boolean"
          },
          "thread_is_deleted": {
            "title": "Thread Is Deleted",
            "type": "boolean"
          },
          "thread_is_sticky": {
            "title": "Thread Is Sticky",
            "type": "boolean"
          },
          "thread_is_followed": {
            "title": "Thread Is Followed",
            "type": "boolean"
          },
          "first_post": {
            "$ref": "#/components/schemas/forum_api__schemas__tags__tags__FirstPost"
          },
          "thread_prefixes": {
            "title": "Thread Prefixes",
            "type": "array",
            "items": {}
          },
          "thread_tags": {
            "$ref": "#/components/schemas/forum_api__schemas__tags__tags__ThreadTags"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__tags__tags__Links2"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__tags__tags__Permissions1"
          },
          "forum": {
            "$ref": "#/components/schemas/forum_api__schemas__tags__tags__Forum"
          }
        }
      },
      "TaggedModel": {
        "title": "TaggedModel",
        "required": [
          "data",
          "data_total",
          "links",
          "search_tags",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__search__tagged__Datum"
            }
          },
          "data_total": {
            "title": "Data Total",
            "type": "integer"
          },
          "search_tags": {
            "$ref": "#/components/schemas/SearchTags"
          },
          "links": {
            "$ref": "#/components/schemas/LinksBase"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__base__SystemInfo"
          }
        }
      },
      "Tags": {
        "title": "Tags",
        "required": [
          "1",
          "10",
          "11",
          "12",
          "14",
          "15",
          "16",
          "17",
          "18",
          "19",
          "2",
          "20",
          "3",
          "4",
          "5",
          "6",
          "7",
          "8",
          "9"
        ],
        "type": "object",
        "properties": {
          "1": {
            "title": "1",
            "type": "string"
          },
          "2": {
            "title": "2",
            "type": "string"
          },
          "3": {
            "title": "3",
            "type": "string"
          },
          "4": {
            "title": "4",
            "type": "string"
          },
          "5": {
            "title": "5",
            "type": "string"
          },
          "6": {
            "title": "6",
            "type": "string"
          },
          "7": {
            "title": "7",
            "type": "string"
          },
          "8": {
            "title": "8",
            "type": "string"
          },
          "9": {
            "title": "9",
            "type": "string"
          },
          "10": {
            "title": "10",
            "type": "string"
          },
          "11": {
            "title": "11",
            "type": "string"
          },
          "12": {
            "title": "12",
            "type": "string"
          },
          "14": {
            "title": "14",
            "type": "string"
          },
          "15": {
            "title": "15",
            "type": "string"
          },
          "16": {
            "title": "16",
            "type": "string"
          },
          "17": {
            "title": "17",
            "type": "string"
          },
          "18": {
            "title": "18",
            "type": "string"
          },
          "19": {
            "title": "19",
            "type": "string"
          },
          "20": {
            "title": "20",
            "type": "string"
          }
        }
      },
      "TagsModel": {
        "title": "TagsModel",
        "required": [
          "links",
          "system_info",
          "tags",
          "tags_total"
        ],
        "type": "object",
        "properties": {
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "tags_total": {
            "title": "Tags Total",
            "type": "integer"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__tags__Links"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__tags__SystemInfo"
          }
        }
      },
      "ThreadId": {
        "title": "ThreadId",
        "required": [
          "thread_id"
        ],
        "type": "object",
        "properties": {
          "thread_id": {
            "title": "Thread Id",
            "type": "integer"
          }
        }
      },
      "ThreadModel": {
        "title": "ThreadModel",
        "required": [
          "system_info",
          "thread"
        ],
        "type": "object",
        "properties": {
          "thread": {
            "$ref": "#/components/schemas/forum_api__schemas__threads__Thread"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__threads__SystemInfo"
          }
        }
      },
      "ThreadUserModel": {
        "title": "ThreadUserModel",
        "required": [
          "system_info",
          "users"
        ],
        "type": "object",
        "properties": {
          "users": {
            "title": "Users",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__threads__User"
            }
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__threads__SystemInfo"
          }
        }
      },
      "ThreadsModel": {
        "title": "ThreadsModel",
        "required": [
          "system_info",
          "threads"
        ],
        "type": "object",
        "properties": {
          "threads": {
            "title": "Threads",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__threads__Thread"
            }
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__threads__SystemInfo"
          }
        }
      },
      "TimeLineModel": {
        "title": "TimeLineModel",
        "required": [
          "data",
          "system_info"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__Datum"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__SystemInfo"
          }
        }
      },
      "TimeLinesModel": {
        "title": "TimeLinesModel",
        "required": [
          "data",
          "data_total",
          "links",
          "system_info",
          "user"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__profile_posts__Datum"
            }
          },
          "data_total": {
            "title": "Data Total",
            "type": "integer"
          },
          "user": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__User"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__Links3"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__SystemInfo"
          }
        }
      },
      "TimelineUser": {
        "title": "TimelineUser",
        "required": [
          "custom_fields",
          "links",
          "permissions",
          "short_link",
          "user_group_id",
          "user_id",
          "user_is_followed",
          "user_is_ignored",
          "user_is_valid",
          "user_is_verified",
          "user_is_visitor",
          "user_last_seen_date",
          "user_like_count",
          "user_message_count",
          "user_register_date",
          "user_title",
          "username"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "user_message_count": {
            "title": "User Message Count",
            "type": "integer"
          },
          "user_register_date": {
            "title": "User Register Date",
            "type": "integer"
          },
          "user_like_count": {
            "title": "User Like Count",
            "type": "integer"
          },
          "short_link": {
            "title": "Short Link",
            "type": "string"
          },
          "user_title": {
            "title": "User Title",
            "type": "string"
          },
          "user_is_valid": {
            "title": "User Is Valid",
            "type": "boolean"
          },
          "user_is_verified": {
            "title": "User Is Verified",
            "type": "boolean"
          },
          "user_is_followed": {
            "title": "User Is Followed",
            "type": "boolean"
          },
          "user_last_seen_date": {
            "title": "User Last Seen Date",
            "type": "integer"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__comments__Links2"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__comments__Permissions2"
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "user_is_visitor": {
            "title": "User Is Visitor",
            "type": "boolean"
          },
          "user_group_id": {
            "title": "User Group Id",
            "type": "integer"
          },
          "custom_fields": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__comments__CustomFields"
          }
        }
      },
      "UnreadThreadsModel": {
        "title": "UnreadThreadsModel",
        "required": [
          "data",
          "system_info",
          "threads"
        ],
        "type": "object",
        "properties": {
          "threads": {
            "title": "Threads",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ThreadId"
            }
          },
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__threads__Thread"
            }
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__threads__SystemInfo"
          }
        }
      },
      "UserGroup": {
        "title": "UserGroup",
        "required": [
          "user_group_id",
          "user_group_title"
        ],
        "type": "object",
        "properties": {
          "user_group_id": {
            "title": "User Group Id",
            "type": "integer"
          },
          "user_group_title": {
            "title": "User Group Title",
            "type": "string"
          }
        }
      },
      "UserGroupModel": {
        "title": "UserGroupModel",
        "required": [
          "user_groups",
          "user_id"
        ],
        "type": "object",
        "properties": {
          "user_groups": {
            "title": "User Groups",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPrimaryGroup"
            }
          },
          "user_id": {
            "title": "User Id",
            "type": "integer"
          }
        }
      },
      "UserGroupsModel": {
        "title": "UserGroupsModel",
        "required": [
          "user_groups"
        ],
        "type": "object",
        "properties": {
          "user_groups": {
            "title": "User Groups",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserGroup"
            }
          }
        }
      },
      "UserMeModel": {
        "title": "UserMeModel",
        "required": [
          "system_info",
          "user"
        ],
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/forum_api__schemas__users__UserMe"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__users__SystemInfo"
          }
        }
      },
      "UserModel": {
        "title": "UserModel",
        "required": [
          "system_info",
          "user"
        ],
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/forum_api__schemas__users__User"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__users__SystemInfo"
          }
        }
      },
      "UserPrimaryGroup": {
        "title": "UserPrimaryGroup",
        "required": [
          "is_primary_group",
          "user_group_id",
          "user_group_title"
        ],
        "type": "object",
        "properties": {
          "user_group_id": {
            "title": "User Group Id",
            "type": "integer"
          },
          "user_group_title": {
            "title": "User Group Title",
            "type": "string"
          },
          "is_primary_group": {
            "title": "Is Primary Group",
            "type": "boolean"
          }
        }
      },
      "UsersLikedModel": {
        "title": "UsersLikedModel",
        "required": [
          "system_info",
          "users"
        ],
        "type": "object",
        "properties": {
          "users": {
            "title": "Users",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__profile_posts__users__User"
            }
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__users__SystemInfo"
          }
        }
      },
      "UsersModel": {
        "title": "UsersModel",
        "required": [
          "links",
          "system_info",
          "users",
          "users_total"
        ],
        "type": "object",
        "properties": {
          "users": {
            "title": "Users",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__users__User"
            }
          },
          "users_total": {
            "title": "Users Total",
            "type": "integer"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__users__Links1"
          },
          "system_info": {
            "$ref": "#/components/schemas/forum_api__schemas__users__SystemInfo"
          }
        }
      },
      "Voter": {
        "title": "Voter",
        "required": [
          "user_id",
          "username"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__base__SystemInfo": {
        "title": "SystemInfo",
        "required": [
          "time",
          "visitor_id"
        ],
        "type": "object",
        "properties": {
          "visitor_id": {
            "title": "Visitor Id",
            "type": "integer"
          },
          "time": {
            "title": "Time",
            "type": "integer"
          }
        }
      },
      "forum_api__schemas__categories__Links": {
        "title": "Links",
        "required": [
          "detail",
          "permalink",
          "sub-categories",
          "sub-forums"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "sub-categories": {
            "title": "Sub-Categories",
            "type": "string"
          },
          "sub-forums": {
            "title": "Sub-Forums",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__categories__Permissions": {
        "title": "Permissions",
        "required": [
          "delete",
          "edit",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__categories__SystemInfo": {
        "title": "SystemInfo",
        "required": [
          "time",
          "visitor_id"
        ],
        "type": "object",
        "properties": {
          "visitor_id": {
            "title": "Visitor Id",
            "type": "integer"
          },
          "time": {
            "title": "Time",
            "type": "integer"
          }
        }
      },
      "forum_api__schemas__comments__Comment": {
        "title": "Comment",
        "required": [
          "comment_date",
          "comment_date_ms",
          "ip_id",
          "last_edit_date",
          "last_edit_user_id",
          "like_users",
          "likes",
          "message",
          "message_state",
          "post_comment_id",
          "post_id",
          "user_id",
          "username",
          "warning_id",
          "warning_message"
        ],
        "type": "object",
        "properties": {
          "message_state": {
            "title": "Message State",
            "type": "string"
          },
          "post_id": {
            "title": "Post Id",
            "type": "integer"
          },
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "comment_date": {
            "title": "Comment Date",
            "type": "integer"
          },
          "comment_date_ms": {
            "title": "Comment Date Ms",
            "type": "integer"
          },
          "ip_id": {
            "title": "Ip Id",
            "type": "integer"
          },
          "likes": {
            "title": "Likes",
            "type": "integer"
          },
          "like_users": {
            "title": "Like Users",
            "type": "string"
          },
          "warning_id": {
            "title": "Warning Id",
            "type": "integer"
          },
          "warning_message": {
            "title": "Warning Message",
            "type": "string"
          },
          "last_edit_date": {
            "title": "Last Edit Date",
            "type": "integer"
          },
          "last_edit_user_id": {
            "title": "Last Edit User Id",
            "type": "integer"
          },
          "post_comment_id": {
            "title": "Post Comment Id",
            "type": "integer"
          }
        }
      },
      "forum_api__schemas__comments__Links": {
        "title": "Links",
        "required": [
          "detail",
          "likes",
          "permalink",
          "post",
          "poster",
          "poster_avatar",
          "report",
          "thread"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "post": {
            "title": "Post",
            "type": "string"
          },
          "thread": {
            "title": "Thread",
            "type": "string"
          },
          "poster": {
            "title": "Poster",
            "type": "string"
          },
          "likes": {
            "title": "Likes",
            "type": "string"
          },
          "report": {
            "title": "Report",
            "type": "string"
          },
          "poster_avatar": {
            "title": "Poster Avatar",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__comments__Permissions": {
        "title": "Permissions",
        "required": [
          "delete",
          "edit",
          "like",
          "reply",
          "report",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "reply": {
            "title": "Reply",
            "type": "boolean"
          },
          "like": {
            "title": "Like",
            "type": "boolean"
          },
          "report": {
            "title": "Report",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__comments__SystemInfo": {
        "title": "SystemInfo",
        "required": [
          "time",
          "visitor_id"
        ],
        "type": "object",
        "properties": {
          "visitor_id": {
            "title": "Visitor Id",
            "type": "integer"
          },
          "time": {
            "title": "Time",
            "type": "integer"
          }
        }
      },
      "forum_api__schemas__conversations__Conversation": {
        "title": "Conversation",
        "required": [
          "conversation_create_date",
          "conversation_has_new_message",
          "conversation_id",
          "conversation_message_count",
          "conversation_title",
          "conversation_update_date",
          "creator_user_id",
          "creator_username",
          "creator_username_html",
          "first_message",
          "is_group",
          "is_starred",
          "links",
          "permissions",
          "recipients",
          "user_is_ignored"
        ],
        "type": "object",
        "properties": {
          "conversation_id": {
            "title": "Conversation Id",
            "type": "integer"
          },
          "conversation_title": {
            "title": "Conversation Title",
            "type": "string"
          },
          "creator_user_id": {
            "title": "Creator User Id",
            "type": "integer"
          },
          "creator_username": {
            "title": "Creator Username",
            "type": "string"
          },
          "creator_username_html": {
            "title": "Creator Username Html",
            "type": "string"
          },
          "conversation_create_date": {
            "title": "Conversation Create Date",
            "type": "integer"
          },
          "conversation_update_date": {
            "title": "Conversation Update Date",
            "type": "integer"
          },
          "is_starred": {
            "title": "Is Starred",
            "type": "integer"
          },
          "is_group": {
            "title": "Is Group",
            "type": "integer"
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "conversation_message_count": {
            "title": "Conversation Message Count",
            "type": "integer"
          },
          "conversation_has_new_message": {
            "title": "Conversation Has New Message",
            "type": "boolean"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__conversations__Links"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__conversations__Permissions"
          },
          "first_message": {
            "$ref": "#/components/schemas/FirstMessage"
          },
          "recipients": {
            "title": "Recipients",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Recipient"
            }
          }
        }
      },
      "forum_api__schemas__conversations__Links": {
        "title": "Links",
        "required": [
          "detail",
          "messages",
          "permalink"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "messages": {
            "title": "Messages",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__conversations__Links1": {
        "title": "Links1",
        "required": [
          "conversation",
          "creator",
          "creator_avatar",
          "detail",
          "report"
        ],
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "conversation": {
            "title": "Conversation",
            "type": "string"
          },
          "creator": {
            "title": "Creator",
            "type": "string"
          },
          "creator_avatar": {
            "title": "Creator Avatar",
            "type": "string"
          },
          "report": {
            "title": "Report",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__conversations__Permissions": {
        "title": "Permissions",
        "required": [
          "delete",
          "reply",
          "upload_attachment"
        ],
        "type": "object",
        "properties": {
          "reply": {
            "title": "Reply",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__conversations__Permissions1": {
        "title": "Permissions1",
        "required": [
          "delete",
          "edit",
          "reply",
          "report",
          "upload_attachment",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "reply": {
            "title": "Reply",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          },
          "report": {
            "title": "Report",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__conversations__SystemInfo": {
        "title": "SystemInfo",
        "required": [
          "time",
          "visitor_id"
        ],
        "type": "object",
        "properties": {
          "visitor_id": {
            "title": "Visitor Id",
            "type": "integer"
          },
          "time": {
            "title": "Time",
            "type": "integer"
          }
        }
      },
      "forum_api__schemas__conversations__conv_message__Conversation": {
        "title": "Conversation",
        "required": [
          "conversation_create_date",
          "conversation_has_new_message",
          "conversation_id",
          "conversation_is_deleted",
          "conversation_is_open",
          "conversation_message_count",
          "conversation_title",
          "conversation_update_date",
          "creator_user_id",
          "creator_username",
          "links",
          "permissions",
          "user_is_ignored"
        ],
        "type": "object",
        "properties": {
          "conversation_id": {
            "title": "Conversation Id",
            "type": "integer"
          },
          "conversation_title": {
            "title": "Conversation Title",
            "type": "string"
          },
          "creator_user_id": {
            "title": "Creator User Id",
            "type": "integer"
          },
          "creator_username": {
            "title": "Creator Username",
            "type": "string"
          },
          "conversation_create_date": {
            "title": "Conversation Create Date",
            "type": "integer"
          },
          "conversation_update_date": {
            "title": "Conversation Update Date",
            "type": "integer"
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "conversation_message_count": {
            "title": "Conversation Message Count",
            "type": "integer"
          },
          "conversation_has_new_message": {
            "title": "Conversation Has New Message",
            "type": "boolean"
          },
          "conversation_is_open": {
            "title": "Conversation Is Open",
            "type": "boolean"
          },
          "conversation_is_deleted": {
            "title": "Conversation Is Deleted",
            "type": "boolean"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__conversations__conv_message__Links1"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__conversations__conv_message__Permissions1"
          }
        }
      },
      "forum_api__schemas__conversations__conv_message__Links": {
        "title": "Links",
        "required": [
          "conversation",
          "creator",
          "creator_avatar",
          "detail",
          "report"
        ],
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "conversation": {
            "title": "Conversation",
            "type": "string"
          },
          "creator": {
            "title": "Creator",
            "type": "string"
          },
          "creator_avatar": {
            "title": "Creator Avatar",
            "type": "string"
          },
          "report": {
            "title": "Report",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__conversations__conv_message__Links1": {
        "title": "Links1",
        "required": [
          "detail",
          "messages",
          "permalink"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "messages": {
            "title": "Messages",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__conversations__conv_message__Permissions": {
        "title": "Permissions",
        "required": [
          "delete",
          "edit",
          "reply",
          "report",
          "upload_attachment",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "reply": {
            "title": "Reply",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          },
          "report": {
            "title": "Report",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__conversations__conv_message__Permissions1": {
        "title": "Permissions1",
        "required": [
          "delete",
          "reply",
          "upload_attachment"
        ],
        "type": "object",
        "properties": {
          "reply": {
            "title": "Reply",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__conversations__conv_message__SystemInfo": {
        "title": "SystemInfo",
        "required": [
          "time",
          "visitor_id"
        ],
        "type": "object",
        "properties": {
          "visitor_id": {
            "title": "Visitor Id",
            "type": "integer"
          },
          "time": {
            "title": "Time",
            "type": "integer"
          }
        }
      },
      "forum_api__schemas__forums__Follow": {
        "title": "Follow",
        "required": [
          "alert",
          "email",
          "post"
        ],
        "type": "object",
        "properties": {
          "post": {
            "title": "Post",
            "type": "boolean"
          },
          "alert": {
            "title": "Alert",
            "type": "boolean"
          },
          "email": {
            "title": "Email",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__forums__Forum": {
        "title": "Forum",
        "required": [
          "forum_description",
          "forum_id",
          "forum_is_followed",
          "forum_post_count",
          "forum_prefixes",
          "forum_thread_count",
          "forum_title",
          "links",
          "permissions",
          "thread_default_prefix_id",
          "thread_prefix_is_required"
        ],
        "type": "object",
        "properties": {
          "forum_id": {
            "title": "Forum Id",
            "type": "integer"
          },
          "forum_title": {
            "title": "Forum Title",
            "type": "string"
          },
          "forum_description": {
            "title": "Forum Description",
            "type": "string"
          },
          "forum_thread_count": {
            "title": "Forum Thread Count",
            "type": "integer"
          },
          "forum_post_count": {
            "title": "Forum Post Count",
            "type": "integer"
          },
          "forum_prefixes": {
            "title": "Forum Prefixes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__forums__ForumPrefix"
            }
          },
          "thread_default_prefix_id": {
            "title": "Thread Default Prefix Id",
            "type": "integer"
          },
          "thread_prefix_is_required": {
            "title": "Thread Prefix Is Required",
            "type": "boolean"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__forums__Links"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__forums__Permissions"
          },
          "forum_is_followed": {
            "title": "Forum Is Followed",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__forums__ForumPrefix": {
        "title": "ForumPrefix",
        "required": [
          "group_prefixes",
          "group_title"
        ],
        "type": "object",
        "properties": {
          "group_title": {
            "title": "Group Title",
            "type": "string"
          },
          "group_prefixes": {
            "title": "Group Prefixes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__forums__GroupPrefix"
            }
          }
        }
      },
      "forum_api__schemas__forums__GroupPrefix": {
        "title": "GroupPrefix",
        "required": [
          "prefix_id",
          "prefix_title"
        ],
        "type": "object",
        "properties": {
          "prefix_id": {
            "title": "Prefix Id",
            "type": "integer"
          },
          "prefix_title": {
            "title": "Prefix Title",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__forums__Links": {
        "title": "Links",
        "required": [
          "detail",
          "followers",
          "permalink",
          "sub-categories",
          "sub-forums",
          "threads"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "sub-categories": {
            "title": "Sub-Categories",
            "type": "string"
          },
          "sub-forums": {
            "title": "Sub-Forums",
            "type": "string"
          },
          "threads": {
            "title": "Threads",
            "type": "string"
          },
          "followers": {
            "title": "Followers",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__forums__Permissions": {
        "title": "Permissions",
        "required": [
          "create_thread",
          "delete",
          "edit",
          "follow",
          "tag_thread",
          "upload_attachment",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "create_thread": {
            "title": "Create Thread",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          },
          "tag_thread": {
            "title": "Tag Thread",
            "type": "boolean"
          },
          "follow": {
            "title": "Follow",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__forums__SystemInfo": {
        "title": "SystemInfo",
        "required": [
          "time",
          "visitor_id"
        ],
        "type": "object",
        "properties": {
          "visitor_id": {
            "title": "Visitor Id",
            "type": "integer"
          },
          "time": {
            "title": "Time",
            "type": "integer"
          }
        }
      },
      "forum_api__schemas__forums__User": {
        "title": "User",
        "required": [
          "follow",
          "user_id",
          "username"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "follow": {
            "$ref": "#/components/schemas/forum_api__schemas__forums__Follow"
          }
        }
      },
      "forum_api__schemas__navigation__Element": {
        "title": "Element",
        "required": [
          "has_sub_elements",
          "links",
          "navigation_id",
          "navigation_parent_id",
          "navigation_type",
          "permissions"
        ],
        "type": "object",
        "properties": {
          "category_id": {
            "title": "Category Id",
            "type": "integer"
          },
          "category_title": {
            "title": "Category Title",
            "type": "string"
          },
          "category_description": {
            "title": "Category Description",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__navigation__Links"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__navigation__Permissions"
          },
          "navigation_type": {
            "title": "Navigation Type",
            "type": "string"
          },
          "navigation_id": {
            "title": "Navigation Id",
            "type": "integer"
          },
          "navigation_parent_id": {
            "title": "Navigation Parent Id",
            "type": "integer"
          },
          "has_sub_elements": {
            "title": "Has Sub Elements",
            "type": "boolean"
          },
          "forum_id": {
            "title": "Forum Id",
            "type": "integer"
          },
          "forum_title": {
            "title": "Forum Title",
            "type": "string"
          },
          "forum_description": {
            "title": "Forum Description",
            "type": "string"
          },
          "forum_thread_count": {
            "title": "Forum Thread Count",
            "type": "integer"
          },
          "forum_post_count": {
            "title": "Forum Post Count",
            "type": "integer"
          },
          "forum_prefixes": {
            "title": "Forum Prefixes",
            "type": "array",
            "items": {}
          },
          "thread_default_prefix_id": {
            "title": "Thread Default Prefix Id",
            "type": "integer"
          },
          "thread_prefix_is_required": {
            "title": "Thread Prefix Is Required",
            "type": "boolean"
          },
          "forum_is_followed": {
            "title": "Forum Is Followed",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__navigation__Links": {
        "title": "Links",
        "required": [
          "detail",
          "permalink",
          "sub-categories",
          "sub-elements",
          "sub-forums"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "sub-categories": {
            "title": "Sub-Categories",
            "type": "string"
          },
          "sub-forums": {
            "title": "Sub-Forums",
            "type": "string"
          },
          "sub-elements": {
            "title": "Sub-Elements",
            "type": "string"
          },
          "threads": {
            "title": "Threads",
            "type": "string"
          },
          "followers": {
            "title": "Followers",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__navigation__Permissions": {
        "title": "Permissions",
        "required": [
          "delete",
          "edit",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "create_thread": {
            "title": "Create Thread",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          },
          "tag_thread": {
            "title": "Tag Thread",
            "type": "boolean"
          },
          "follow": {
            "title": "Follow",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__notification__Links": {
        "title": "Links",
        "required": [
          "content",
          "creator_avatar"
        ],
        "type": "object",
        "properties": {
          "content": {
            "title": "Content",
            "type": "string"
          },
          "creator_avatar": {
            "title": "Creator Avatar",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__notification__Links1": {
        "title": "Links1",
        "required": [
          "next",
          "page",
          "pages",
          "read"
        ],
        "type": "object",
        "properties": {
          "read": {
            "title": "Read",
            "type": "string"
          },
          "pages": {
            "title": "Pages",
            "type": "integer"
          },
          "page": {
            "title": "Page",
            "type": "integer"
          },
          "next": {
            "title": "Next",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__notification__SystemInfo": {
        "title": "SystemInfo",
        "required": [
          "time",
          "visitor_id"
        ],
        "type": "object",
        "properties": {
          "visitor_id": {
            "title": "Visitor Id",
            "type": "integer"
          },
          "time": {
            "title": "Time",
            "type": "integer"
          }
        }
      },
      "forum_api__schemas__pages__Links": {
        "title": "Links",
        "required": [
          "detail",
          "permalink",
          "sub-pages"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "sub-pages": {
            "title": "Sub-Pages",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__pages__Permissions": {
        "title": "Permissions",
        "required": [
          "delete",
          "edit",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__pages__SystemInfo": {
        "title": "SystemInfo",
        "required": [
          "time",
          "visitor_id"
        ],
        "type": "object",
        "properties": {
          "visitor_id": {
            "title": "Visitor Id",
            "type": "integer"
          },
          "time": {
            "title": "Time",
            "type": "integer"
          }
        }
      },
      "forum_api__schemas__posts__LikeUser": {
        "title": "LikeUser",
        "required": [
          "display_style_group_id",
          "is_banned",
          "uniq_username_css",
          "user_id",
          "username"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "display_style_group_id": {
            "title": "Display Style Group Id",
            "type": "integer"
          },
          "is_banned": {
            "title": "Is Banned",
            "type": "integer"
          },
          "uniq_username_css": {
            "title": "Uniq Username Css",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__posts__Links": {
        "title": "Links",
        "required": [
          "attachments",
          "detail",
          "likes",
          "permalink",
          "poster",
          "poster_avatar",
          "report",
          "thread"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "thread": {
            "title": "Thread",
            "type": "string"
          },
          "poster": {
            "title": "Poster",
            "type": "string"
          },
          "likes": {
            "title": "Likes",
            "type": "string"
          },
          "report": {
            "title": "Report",
            "type": "string"
          },
          "attachments": {
            "title": "Attachments",
            "type": "string"
          },
          "poster_avatar": {
            "title": "Poster Avatar",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__posts__Permissions": {
        "title": "Permissions",
        "required": [
          "delete",
          "edit",
          "like",
          "reply",
          "report",
          "upload_attachment",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "reply": {
            "title": "Reply",
            "type": "boolean"
          },
          "like": {
            "title": "Like",
            "type": "boolean"
          },
          "report": {
            "title": "Report",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__posts__Post": {
        "title": "Post",
        "required": [
          "like_users",
          "links",
          "permissions",
          "post_attachment_count",
          "post_body",
          "post_body_html",
          "post_body_plain_text",
          "post_create_date",
          "post_id",
          "post_is_deleted",
          "post_is_first_post",
          "post_is_published",
          "post_like_count",
          "post_update_date",
          "poster_user_id",
          "poster_username",
          "signature",
          "signature_html",
          "signature_plain_text",
          "thread_id",
          "user_is_ignored"
        ],
        "type": "object",
        "properties": {
          "post_id": {
            "title": "Post Id",
            "type": "integer"
          },
          "thread_id": {
            "title": "Thread Id",
            "type": "integer"
          },
          "poster_user_id": {
            "title": "Poster User Id",
            "type": "integer"
          },
          "poster_username": {
            "title": "Poster Username",
            "type": "string"
          },
          "post_create_date": {
            "title": "Post Create Date",
            "type": "integer"
          },
          "post_body": {
            "title": "Post Body",
            "type": "string"
          },
          "post_body_html": {
            "title": "Post Body Html",
            "type": "string"
          },
          "post_body_plain_text": {
            "title": "Post Body Plain Text",
            "type": "string"
          },
          "signature": {
            "title": "Signature",
            "type": "string"
          },
          "signature_html": {
            "title": "Signature Html",
            "type": "string"
          },
          "signature_plain_text": {
            "title": "Signature Plain Text",
            "type": "string"
          },
          "post_like_count": {
            "title": "Post Like Count",
            "type": "integer"
          },
          "post_attachment_count": {
            "title": "Post Attachment Count",
            "type": "integer"
          },
          "like_users": {
            "title": "Like Users",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__posts__LikeUser"
            }
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "post_is_published": {
            "title": "Post Is Published",
            "type": "boolean"
          },
          "post_is_deleted": {
            "title": "Post Is Deleted",
            "type": "boolean"
          },
          "post_update_date": {
            "title": "Post Update Date",
            "type": "integer"
          },
          "post_is_first_post": {
            "title": "Post Is First Post",
            "type": "boolean"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__posts__Links"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__posts__Permissions"
          }
        }
      },
      "forum_api__schemas__posts__SystemInfo": {
        "title": "SystemInfo",
        "required": [
          "time",
          "visitor_id"
        ],
        "type": "object",
        "properties": {
          "visitor_id": {
            "title": "Visitor Id",
            "type": "integer"
          },
          "time": {
            "title": "Time",
            "type": "integer"
          }
        }
      },
      "forum_api__schemas__posts__User": {
        "title": "User",
        "required": [
          "user_id",
          "username"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__profile_posts__CustomFields": {
        "title": "CustomFields",
        "required": [
          "discord",
          "jabber",
          "lztAwardUserTrophy",
          "lztCuratorNodeTitle",
          "lztCuratorNodeTitleEn",
          "lztInnovation20Link",
          "lztInnovation30Link",
          "lztInnovationLink",
          "lztSympathyIncreasing",
          "lztSympathyZeroing",
          "qiwi",
          "scamURL",
          "steam",
          "telegram",
          "vk"
        ],
        "type": "object",
        "properties": {
          "discord": {
            "title": "Discord",
            "type": "string"
          },
          "jabber": {
            "title": "Jabber",
            "type": "string"
          },
          "lztAwardUserTrophy": {
            "title": "Lztawardusertrophy",
            "type": "string"
          },
          "lztCuratorNodeTitle": {
            "title": "Lztcuratornodetitle",
            "type": "string"
          },
          "lztCuratorNodeTitleEn": {
            "title": "Lztcuratornodetitleen",
            "type": "string"
          },
          "lztInnovation20Link": {
            "title": "Lztinnovation20Link",
            "type": "string"
          },
          "lztInnovation30Link": {
            "title": "Lztinnovation30Link",
            "type": "string"
          },
          "lztInnovationLink": {
            "title": "Lztinnovationlink",
            "type": "string"
          },
          "lztSympathyIncreasing": {
            "title": "Lztsympathyincreasing",
            "type": "string"
          },
          "lztSympathyZeroing": {
            "title": "Lztsympathyzeroing",
            "type": "string"
          },
          "qiwi": {
            "title": "Qiwi",
            "type": "string"
          },
          "scamURL": {
            "title": "Scamurl",
            "type": "string"
          },
          "steam": {
            "title": "Steam",
            "type": "string"
          },
          "telegram": {
            "title": "Telegram",
            "type": "string"
          },
          "vk": {
            "title": "Vk",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__profile_posts__Datum": {
        "title": "Datum",
        "required": [
          "content_id",
          "content_type",
          "like_users",
          "links",
          "permissions",
          "post_attachment_count",
          "post_body",
          "post_body_html",
          "post_body_plain_text",
          "post_create_date",
          "post_id",
          "post_is_deleted",
          "post_is_first_post",
          "post_is_published",
          "post_like_count",
          "post_update_date",
          "poster_user_id",
          "poster_username",
          "signature",
          "signature_html",
          "signature_plain_text",
          "thread",
          "thread_id",
          "user_is_ignored"
        ],
        "type": "object",
        "properties": {
          "content_type": {
            "title": "Content Type",
            "type": "string"
          },
          "content_id": {
            "title": "Content Id",
            "type": "integer"
          },
          "post_id": {
            "title": "Post Id",
            "type": "integer"
          },
          "thread_id": {
            "title": "Thread Id",
            "type": "integer"
          },
          "poster_user_id": {
            "title": "Poster User Id",
            "type": "integer"
          },
          "poster_username": {
            "title": "Poster Username",
            "type": "string"
          },
          "post_create_date": {
            "title": "Post Create Date",
            "type": "integer"
          },
          "post_body": {
            "title": "Post Body",
            "type": "string"
          },
          "post_body_html": {
            "title": "Post Body Html",
            "type": "string"
          },
          "post_body_plain_text": {
            "title": "Post Body Plain Text",
            "type": "string"
          },
          "signature": {
            "title": "Signature",
            "type": "string"
          },
          "signature_html": {
            "title": "Signature Html",
            "type": "string"
          },
          "signature_plain_text": {
            "title": "Signature Plain Text",
            "type": "string"
          },
          "post_like_count": {
            "title": "Post Like Count",
            "type": "integer"
          },
          "post_attachment_count": {
            "title": "Post Attachment Count",
            "type": "integer"
          },
          "like_users": {
            "title": "Like Users",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__profile_posts__LikeUser"
            }
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "post_is_published": {
            "title": "Post Is Published",
            "type": "boolean"
          },
          "post_is_deleted": {
            "title": "Post Is Deleted",
            "type": "boolean"
          },
          "post_update_date": {
            "title": "Post Update Date",
            "type": "integer"
          },
          "post_is_first_post": {
            "title": "Post Is First Post",
            "type": "boolean"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__Links"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__Permissions"
          },
          "thread": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__Thread"
          }
        }
      },
      "forum_api__schemas__profile_posts__LikeUser": {
        "title": "LikeUser",
        "required": [
          "display_style_group_id",
          "is_banned",
          "uniq_username_css",
          "user_id",
          "username"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "display_style_group_id": {
            "title": "Display Style Group Id",
            "type": "integer"
          },
          "is_banned": {
            "title": "Is Banned",
            "type": "integer"
          },
          "uniq_username_css": {
            "title": "Uniq Username Css",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__profile_posts__Links": {
        "title": "Links",
        "required": [
          "attachments",
          "detail",
          "likes",
          "permalink",
          "poster",
          "poster_avatar",
          "report",
          "thread"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "thread": {
            "title": "Thread",
            "type": "string"
          },
          "poster": {
            "title": "Poster",
            "type": "string"
          },
          "likes": {
            "title": "Likes",
            "type": "string"
          },
          "report": {
            "title": "Report",
            "type": "string"
          },
          "attachments": {
            "title": "Attachments",
            "type": "string"
          },
          "poster_avatar": {
            "title": "Poster Avatar",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__profile_posts__Links1": {
        "title": "Links1",
        "required": [
          "detail",
          "first_post",
          "first_poster",
          "first_poster_avatar",
          "followers",
          "forum",
          "last_post",
          "last_poster",
          "permalink",
          "posts"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "followers": {
            "title": "Followers",
            "type": "string"
          },
          "forum": {
            "title": "Forum",
            "type": "string"
          },
          "posts": {
            "title": "Posts",
            "type": "string"
          },
          "first_poster": {
            "title": "First Poster",
            "type": "string"
          },
          "first_poster_avatar": {
            "title": "First Poster Avatar",
            "type": "string"
          },
          "first_post": {
            "title": "First Post",
            "type": "string"
          },
          "last_poster": {
            "title": "Last Poster",
            "type": "string"
          },
          "last_post": {
            "title": "Last Post",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__profile_posts__Links2": {
        "title": "Links2",
        "required": [
          "avatar",
          "avatar_big",
          "avatar_small",
          "detail",
          "followers",
          "followings",
          "ignore",
          "permalink",
          "timeline"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "avatar": {
            "title": "Avatar",
            "type": "string"
          },
          "avatar_big": {
            "title": "Avatar Big",
            "type": "string"
          },
          "avatar_small": {
            "title": "Avatar Small",
            "type": "string"
          },
          "followers": {
            "title": "Followers",
            "type": "string"
          },
          "followings": {
            "title": "Followings",
            "type": "string"
          },
          "ignore": {
            "title": "Ignore",
            "type": "string"
          },
          "timeline": {
            "title": "Timeline",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__profile_posts__Links3": {
        "title": "Links3",
        "required": [
          "next",
          "page",
          "pages"
        ],
        "type": "object",
        "properties": {
          "pages": {
            "title": "Pages",
            "type": "integer"
          },
          "page": {
            "title": "Page",
            "type": "integer"
          },
          "next": {
            "title": "Next",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__profile_posts__Permissions": {
        "title": "Permissions",
        "required": [
          "delete",
          "edit",
          "like",
          "reply",
          "report",
          "upload_attachment",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "reply": {
            "title": "Reply",
            "type": "boolean"
          },
          "like": {
            "title": "Like",
            "type": "boolean"
          },
          "report": {
            "title": "Report",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__profile_posts__Permissions1": {
        "title": "Permissions1",
        "required": [
          "delete",
          "follow",
          "post",
          "upload_attachment",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "follow": {
            "title": "Follow",
            "type": "boolean"
          },
          "post": {
            "title": "Post",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__profile_posts__Permissions2": {
        "title": "Permissions2",
        "required": [
          "edit",
          "follow",
          "ignore",
          "profile_post"
        ],
        "type": "object",
        "properties": {
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "follow": {
            "title": "Follow",
            "type": "boolean"
          },
          "ignore": {
            "title": "Ignore",
            "type": "boolean"
          },
          "profile_post": {
            "title": "Profile Post",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__profile_posts__SystemInfo": {
        "title": "SystemInfo",
        "required": [
          "time",
          "visitor_id"
        ],
        "type": "object",
        "properties": {
          "visitor_id": {
            "title": "Visitor Id",
            "type": "integer"
          },
          "time": {
            "title": "Time",
            "type": "integer"
          }
        }
      },
      "forum_api__schemas__profile_posts__Thread": {
        "title": "Thread",
        "required": [
          "creator_user_id",
          "creator_username",
          "forum_id",
          "links",
          "permissions",
          "thread_create_date",
          "thread_id",
          "thread_is_deleted",
          "thread_is_followed",
          "thread_is_published",
          "thread_is_sticky",
          "thread_post_count",
          "thread_prefixes",
          "thread_tags",
          "thread_title",
          "thread_update_date",
          "thread_view_count",
          "user_is_ignored"
        ],
        "type": "object",
        "properties": {
          "thread_id": {
            "title": "Thread Id",
            "type": "integer"
          },
          "forum_id": {
            "title": "Forum Id",
            "type": "integer"
          },
          "thread_title": {
            "title": "Thread Title",
            "type": "string"
          },
          "thread_view_count": {
            "title": "Thread View Count",
            "type": "integer"
          },
          "creator_user_id": {
            "title": "Creator User Id",
            "type": "integer"
          },
          "creator_username": {
            "title": "Creator Username",
            "type": "string"
          },
          "thread_create_date": {
            "title": "Thread Create Date",
            "type": "integer"
          },
          "thread_update_date": {
            "title": "Thread Update Date",
            "type": "integer"
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "thread_post_count": {
            "title": "Thread Post Count",
            "type": "integer"
          },
          "thread_is_published": {
            "title": "Thread Is Published",
            "type": "boolean"
          },
          "thread_is_deleted": {
            "title": "Thread Is Deleted",
            "type": "boolean"
          },
          "thread_is_sticky": {
            "title": "Thread Is Sticky",
            "type": "boolean"
          },
          "thread_is_followed": {
            "title": "Thread Is Followed",
            "type": "boolean"
          },
          "thread_prefixes": {
            "title": "Thread Prefixes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__profile_posts__ThreadPrefix"
            }
          },
          "thread_tags": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__ThreadTags"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__Links1"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__Permissions1"
          }
        }
      },
      "forum_api__schemas__profile_posts__ThreadPrefix": {
        "title": "ThreadPrefix",
        "required": [
          "prefix_id",
          "prefix_title"
        ],
        "type": "object",
        "properties": {
          "prefix_id": {
            "title": "Prefix Id",
            "type": "integer"
          },
          "prefix_title": {
            "title": "Prefix Title",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__profile_posts__ThreadTags": {
        "title": "ThreadTags",
        "required": [
          "3",
          "49306"
        ],
        "type": "object",
        "properties": {
          "3": {
            "title": "3",
            "type": "string"
          },
          "49306": {
            "title": "49306",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__profile_posts__User": {
        "title": "User",
        "required": [
          "custom_fields",
          "links",
          "permissions",
          "short_link",
          "user_group_id",
          "user_id",
          "user_is_followed",
          "user_is_ignored",
          "user_is_valid",
          "user_is_verified",
          "user_is_visitor",
          "user_last_seen_date",
          "user_like_count",
          "user_message_count",
          "user_register_date",
          "user_title",
          "username"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "user_message_count": {
            "title": "User Message Count",
            "type": "integer"
          },
          "user_register_date": {
            "title": "User Register Date",
            "type": "integer"
          },
          "user_like_count": {
            "title": "User Like Count",
            "type": "integer"
          },
          "short_link": {
            "title": "Short Link",
            "type": "string"
          },
          "user_title": {
            "title": "User Title",
            "type": "string"
          },
          "user_is_valid": {
            "title": "User Is Valid",
            "type": "boolean"
          },
          "user_is_verified": {
            "title": "User Is Verified",
            "type": "boolean"
          },
          "user_is_followed": {
            "title": "User Is Followed",
            "type": "boolean"
          },
          "user_last_seen_date": {
            "title": "User Last Seen Date",
            "type": "integer"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__Links2"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__Permissions2"
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "user_is_visitor": {
            "title": "User Is Visitor",
            "type": "boolean"
          },
          "user_group_id": {
            "title": "User Group Id",
            "type": "integer"
          },
          "custom_fields": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__CustomFields"
          }
        }
      },
      "forum_api__schemas__profile_posts__comments__Comment": {
        "title": "Comment",
        "required": [
          "comment_body",
          "comment_create_date",
          "comment_id",
          "comment_user_id",
          "comment_username",
          "links",
          "permissions",
          "profile_post_id",
          "timeline_user_id",
          "user_is_ignored"
        ],
        "type": "object",
        "properties": {
          "comment_id": {
            "title": "Comment Id",
            "type": "integer"
          },
          "profile_post_id": {
            "title": "Profile Post Id",
            "type": "integer"
          },
          "comment_user_id": {
            "title": "Comment User Id",
            "type": "integer"
          },
          "comment_username": {
            "title": "Comment Username",
            "type": "string"
          },
          "comment_create_date": {
            "title": "Comment Create Date",
            "type": "integer"
          },
          "comment_body": {
            "title": "Comment Body",
            "type": "string"
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "timeline_user_id": {
            "title": "Timeline User Id",
            "type": "integer"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__comments__Links"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__comments__Permissions"
          }
        }
      },
      "forum_api__schemas__profile_posts__comments__CustomFields": {
        "title": "CustomFields",
        "required": [
          "discord",
          "jabber",
          "lztAwardUserTrophy",
          "lztCuratorNodeTitle",
          "lztCuratorNodeTitleEn",
          "lztInnovation20Link",
          "lztInnovation30Link",
          "lztInnovationLink",
          "lztSympathyIncreasing",
          "lztSympathyZeroing",
          "qiwi",
          "scamURL",
          "steam",
          "telegram",
          "vk"
        ],
        "type": "object",
        "properties": {
          "discord": {
            "title": "Discord",
            "type": "string"
          },
          "jabber": {
            "title": "Jabber",
            "type": "string"
          },
          "lztAwardUserTrophy": {
            "title": "Lztawardusertrophy",
            "type": "string"
          },
          "lztCuratorNodeTitle": {
            "title": "Lztcuratornodetitle",
            "type": "string"
          },
          "lztCuratorNodeTitleEn": {
            "title": "Lztcuratornodetitleen",
            "type": "string"
          },
          "lztInnovation20Link": {
            "title": "Lztinnovation20Link",
            "type": "string"
          },
          "lztInnovation30Link": {
            "title": "Lztinnovation30Link",
            "type": "string"
          },
          "lztInnovationLink": {
            "title": "Lztinnovationlink",
            "type": "string"
          },
          "lztSympathyIncreasing": {
            "title": "Lztsympathyincreasing",
            "type": "string"
          },
          "lztSympathyZeroing": {
            "title": "Lztsympathyzeroing",
            "type": "string"
          },
          "qiwi": {
            "title": "Qiwi",
            "type": "string"
          },
          "scamURL": {
            "title": "Scamurl",
            "type": "string"
          },
          "steam": {
            "title": "Steam",
            "type": "string"
          },
          "telegram": {
            "title": "Telegram",
            "type": "string"
          },
          "vk": {
            "title": "Vk",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__profile_posts__comments__Links": {
        "title": "Links",
        "required": [
          "detail",
          "poster",
          "poster_avatar",
          "profile_post",
          "timeline",
          "timeline_user"
        ],
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "profile_post": {
            "title": "Profile Post",
            "type": "string"
          },
          "timeline": {
            "title": "Timeline",
            "type": "string"
          },
          "timeline_user": {
            "title": "Timeline User",
            "type": "string"
          },
          "poster": {
            "title": "Poster",
            "type": "string"
          },
          "poster_avatar": {
            "title": "Poster Avatar",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__profile_posts__comments__Links1": {
        "title": "Links1",
        "required": [
          "comments",
          "detail",
          "likes",
          "permalink",
          "poster",
          "poster_avatar",
          "report",
          "timeline",
          "timeline_user"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "timeline": {
            "title": "Timeline",
            "type": "string"
          },
          "timeline_user": {
            "title": "Timeline User",
            "type": "string"
          },
          "poster": {
            "title": "Poster",
            "type": "string"
          },
          "likes": {
            "title": "Likes",
            "type": "string"
          },
          "comments": {
            "title": "Comments",
            "type": "string"
          },
          "report": {
            "title": "Report",
            "type": "string"
          },
          "poster_avatar": {
            "title": "Poster Avatar",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__profile_posts__comments__Links2": {
        "title": "Links2",
        "required": [
          "avatar",
          "avatar_big",
          "avatar_small",
          "detail",
          "followers",
          "followings",
          "ignore",
          "permalink",
          "timeline"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "avatar": {
            "title": "Avatar",
            "type": "string"
          },
          "avatar_big": {
            "title": "Avatar Big",
            "type": "string"
          },
          "avatar_small": {
            "title": "Avatar Small",
            "type": "string"
          },
          "followers": {
            "title": "Followers",
            "type": "string"
          },
          "followings": {
            "title": "Followings",
            "type": "string"
          },
          "ignore": {
            "title": "Ignore",
            "type": "string"
          },
          "timeline": {
            "title": "Timeline",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__profile_posts__comments__Permissions": {
        "title": "Permissions",
        "required": [
          "delete",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__profile_posts__comments__Permissions1": {
        "title": "Permissions1",
        "required": [
          "comment",
          "delete",
          "edit",
          "like",
          "report",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "like": {
            "title": "Like",
            "type": "boolean"
          },
          "comment": {
            "title": "Comment",
            "type": "boolean"
          },
          "report": {
            "title": "Report",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__profile_posts__comments__Permissions2": {
        "title": "Permissions2",
        "required": [
          "edit",
          "follow",
          "ignore",
          "profile_post"
        ],
        "type": "object",
        "properties": {
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "follow": {
            "title": "Follow",
            "type": "boolean"
          },
          "ignore": {
            "title": "Ignore",
            "type": "boolean"
          },
          "profile_post": {
            "title": "Profile Post",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__profile_posts__comments__ProfilePost": {
        "title": "ProfilePost",
        "required": [
          "links",
          "permissions",
          "post_body",
          "post_comment_count",
          "post_create_date",
          "post_is_deleted",
          "post_is_published",
          "post_like_count",
          "poster_user_id",
          "poster_username",
          "profile_post_id",
          "timeline_user_id",
          "timeline_username",
          "user_is_ignored"
        ],
        "type": "object",
        "properties": {
          "profile_post_id": {
            "title": "Profile Post Id",
            "type": "integer"
          },
          "timeline_user_id": {
            "title": "Timeline User Id",
            "type": "integer"
          },
          "poster_user_id": {
            "title": "Poster User Id",
            "type": "integer"
          },
          "poster_username": {
            "title": "Poster Username",
            "type": "string"
          },
          "post_create_date": {
            "title": "Post Create Date",
            "type": "integer"
          },
          "post_body": {
            "title": "Post Body",
            "type": "string"
          },
          "post_like_count": {
            "title": "Post Like Count",
            "type": "integer"
          },
          "post_comment_count": {
            "title": "Post Comment Count",
            "type": "integer"
          },
          "timeline_username": {
            "title": "Timeline Username",
            "type": "string"
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "post_is_published": {
            "title": "Post Is Published",
            "type": "boolean"
          },
          "post_is_deleted": {
            "title": "Post Is Deleted",
            "type": "boolean"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__comments__Links1"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__comments__Permissions1"
          }
        }
      },
      "forum_api__schemas__profile_posts__comments__SystemInfo": {
        "title": "SystemInfo",
        "required": [
          "time",
          "visitor_id"
        ],
        "type": "object",
        "properties": {
          "visitor_id": {
            "title": "Visitor Id",
            "type": "integer"
          },
          "time": {
            "title": "Time",
            "type": "integer"
          }
        }
      },
      "forum_api__schemas__profile_posts__profile_post__Links": {
        "title": "Links",
        "required": [
          "comments",
          "detail",
          "likes",
          "permalink",
          "poster",
          "poster_avatar",
          "report",
          "timeline",
          "timeline_user"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "timeline": {
            "title": "Timeline",
            "type": "string"
          },
          "timeline_user": {
            "title": "Timeline User",
            "type": "string"
          },
          "poster": {
            "title": "Poster",
            "type": "string"
          },
          "likes": {
            "title": "Likes",
            "type": "string"
          },
          "comments": {
            "title": "Comments",
            "type": "string"
          },
          "report": {
            "title": "Report",
            "type": "string"
          },
          "poster_avatar": {
            "title": "Poster Avatar",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__profile_posts__profile_post__Permissions": {
        "title": "Permissions",
        "required": [
          "comment",
          "delete",
          "edit",
          "like",
          "report",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "like": {
            "title": "Like",
            "type": "boolean"
          },
          "comment": {
            "title": "Comment",
            "type": "boolean"
          },
          "report": {
            "title": "Report",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__profile_posts__profile_post__ProfilePost": {
        "title": "ProfilePost",
        "required": [
          "links",
          "permissions",
          "post_body",
          "post_comment_count",
          "post_create_date",
          "post_is_deleted",
          "post_is_published",
          "post_like_count",
          "poster_user_id",
          "poster_username",
          "profile_post_id",
          "timeline_user_id",
          "timeline_username",
          "user_is_ignored"
        ],
        "type": "object",
        "properties": {
          "profile_post_id": {
            "title": "Profile Post Id",
            "type": "integer"
          },
          "timeline_user_id": {
            "title": "Timeline User Id",
            "type": "integer"
          },
          "poster_user_id": {
            "title": "Poster User Id",
            "type": "integer"
          },
          "poster_username": {
            "title": "Poster Username",
            "type": "string"
          },
          "post_create_date": {
            "title": "Post Create Date",
            "type": "integer"
          },
          "post_body": {
            "title": "Post Body",
            "type": "string"
          },
          "post_like_count": {
            "title": "Post Like Count",
            "type": "integer"
          },
          "post_comment_count": {
            "title": "Post Comment Count",
            "type": "integer"
          },
          "timeline_username": {
            "title": "Timeline Username",
            "type": "string"
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "post_is_published": {
            "title": "Post Is Published",
            "type": "boolean"
          },
          "post_is_deleted": {
            "title": "Post Is Deleted",
            "type": "boolean"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__profile_post__Links"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__profile_posts__profile_post__Permissions"
          }
        }
      },
      "forum_api__schemas__profile_posts__profile_post__SystemInfo": {
        "title": "SystemInfo",
        "required": [
          "time",
          "visitor_id"
        ],
        "type": "object",
        "properties": {
          "visitor_id": {
            "title": "Visitor Id",
            "type": "integer"
          },
          "time": {
            "title": "Time",
            "type": "integer"
          }
        }
      },
      "forum_api__schemas__profile_posts__users__SystemInfo": {
        "title": "SystemInfo",
        "required": [
          "time",
          "visitor_id"
        ],
        "type": "object",
        "properties": {
          "visitor_id": {
            "title": "Visitor Id",
            "type": "integer"
          },
          "time": {
            "title": "Time",
            "type": "integer"
          }
        }
      },
      "forum_api__schemas__profile_posts__users__User": {
        "title": "User",
        "required": [
          "user_id",
          "username"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__post__Datum": {
        "title": "Datum",
        "required": [
          "content_id",
          "content_type",
          "creator_user_id",
          "creator_username",
          "first_post",
          "forum",
          "forum_id",
          "links",
          "permissions",
          "thread_create_date",
          "thread_id",
          "thread_is_deleted",
          "thread_is_followed",
          "thread_is_published",
          "thread_is_sticky",
          "thread_post_count",
          "thread_prefixes",
          "thread_tags",
          "thread_title",
          "thread_update_date",
          "thread_view_count",
          "user_is_ignored"
        ],
        "type": "object",
        "properties": {
          "content_type": {
            "title": "Content Type",
            "type": "string"
          },
          "content_id": {
            "title": "Content Id",
            "type": "integer"
          },
          "thread_id": {
            "title": "Thread Id",
            "type": "integer"
          },
          "forum_id": {
            "title": "Forum Id",
            "type": "integer"
          },
          "thread_title": {
            "title": "Thread Title",
            "type": "string"
          },
          "thread_view_count": {
            "title": "Thread View Count",
            "type": "integer"
          },
          "creator_user_id": {
            "title": "Creator User Id",
            "type": "integer"
          },
          "creator_username": {
            "title": "Creator Username",
            "type": "string"
          },
          "thread_create_date": {
            "title": "Thread Create Date",
            "type": "integer"
          },
          "thread_update_date": {
            "title": "Thread Update Date",
            "type": "integer"
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "thread_post_count": {
            "title": "Thread Post Count",
            "type": "integer"
          },
          "thread_is_published": {
            "title": "Thread Is Published",
            "type": "boolean"
          },
          "thread_is_deleted": {
            "title": "Thread Is Deleted",
            "type": "boolean"
          },
          "thread_is_sticky": {
            "title": "Thread Is Sticky",
            "type": "boolean"
          },
          "thread_is_followed": {
            "title": "Thread Is Followed",
            "type": "boolean"
          },
          "first_post": {
            "$ref": "#/components/schemas/forum_api__schemas__search__post__FirstPost"
          },
          "thread_prefixes": {
            "title": "Thread Prefixes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__search__post__ThreadPrefix"
            }
          },
          "thread_tags": {
            "title": "Thread Tags",
            "anyOf": [
              {
                "type": "array",
                "items": {}
              },
              {
                "$ref": "#/components/schemas/forum_api__schemas__search__post__ThreadTag"
              }
            ]
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__search__post__Links1"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__search__post__Permissions1"
          },
          "forum": {
            "$ref": "#/components/schemas/forum_api__schemas__search__post__Forum"
          }
        }
      },
      "forum_api__schemas__search__post__FirstPost": {
        "title": "FirstPost",
        "required": [
          "links",
          "permissions",
          "post_attachment_count",
          "post_body",
          "post_body_html",
          "post_body_plain_text",
          "post_create_date",
          "post_id",
          "post_is_deleted",
          "post_is_first_post",
          "post_is_published",
          "post_like_count",
          "post_update_date",
          "poster_user_id",
          "poster_username",
          "signature",
          "signature_html",
          "signature_plain_text",
          "thread_id",
          "user_is_ignored"
        ],
        "type": "object",
        "properties": {
          "post_id": {
            "title": "Post Id",
            "type": "integer"
          },
          "thread_id": {
            "title": "Thread Id",
            "type": "integer"
          },
          "poster_user_id": {
            "title": "Poster User Id",
            "type": "integer"
          },
          "poster_username": {
            "title": "Poster Username",
            "type": "string"
          },
          "post_create_date": {
            "title": "Post Create Date",
            "type": "integer"
          },
          "post_body": {
            "title": "Post Body",
            "type": "string"
          },
          "post_body_html": {
            "title": "Post Body Html",
            "type": "string"
          },
          "post_body_plain_text": {
            "title": "Post Body Plain Text",
            "type": "string"
          },
          "signature": {
            "title": "Signature",
            "type": "string"
          },
          "signature_html": {
            "title": "Signature Html",
            "type": "string"
          },
          "signature_plain_text": {
            "title": "Signature Plain Text",
            "type": "string"
          },
          "post_like_count": {
            "title": "Post Like Count",
            "type": "integer"
          },
          "post_attachment_count": {
            "title": "Post Attachment Count",
            "type": "integer"
          },
          "like_users": {
            "title": "Like Users",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__search__post__LikeUser"
            }
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "post_is_published": {
            "title": "Post Is Published",
            "type": "boolean"
          },
          "post_is_deleted": {
            "title": "Post Is Deleted",
            "type": "boolean"
          },
          "post_update_date": {
            "title": "Post Update Date",
            "type": "integer"
          },
          "post_is_first_post": {
            "title": "Post Is First Post",
            "type": "boolean"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__search__post__Links"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__search__post__Permissions"
          }
        }
      },
      "forum_api__schemas__search__post__Forum": {
        "title": "Forum",
        "required": [
          "forum_description",
          "forum_id",
          "forum_is_followed",
          "forum_post_count",
          "forum_prefixes",
          "forum_thread_count",
          "forum_title",
          "links",
          "permissions",
          "thread_default_prefix_id",
          "thread_prefix_is_required"
        ],
        "type": "object",
        "properties": {
          "forum_id": {
            "title": "Forum Id",
            "type": "integer"
          },
          "forum_title": {
            "title": "Forum Title",
            "type": "string"
          },
          "forum_description": {
            "title": "Forum Description",
            "type": "string"
          },
          "forum_thread_count": {
            "title": "Forum Thread Count",
            "type": "integer"
          },
          "forum_post_count": {
            "title": "Forum Post Count",
            "type": "integer"
          },
          "forum_prefixes": {
            "title": "Forum Prefixes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__search__post__ForumPrefix"
            }
          },
          "thread_default_prefix_id": {
            "title": "Thread Default Prefix Id",
            "type": "integer"
          },
          "thread_prefix_is_required": {
            "title": "Thread Prefix Is Required",
            "type": "boolean"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__search__post__Links2"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__search__post__Permissions2"
          },
          "forum_is_followed": {
            "title": "Forum Is Followed",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__search__post__ForumPrefix": {
        "title": "ForumPrefix",
        "required": [
          "group_prefixes",
          "group_title"
        ],
        "type": "object",
        "properties": {
          "group_title": {
            "title": "Group Title",
            "type": "string"
          },
          "group_prefixes": {
            "title": "Group Prefixes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__search__post__GroupPrefix"
            }
          }
        }
      },
      "forum_api__schemas__search__post__GroupPrefix": {
        "title": "GroupPrefix",
        "required": [
          "prefix_id",
          "prefix_title"
        ],
        "type": "object",
        "properties": {
          "prefix_id": {
            "title": "Prefix Id",
            "type": "integer"
          },
          "prefix_title": {
            "title": "Prefix Title",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__post__LikeUser": {
        "title": "LikeUser",
        "required": [
          "display_style_group_id",
          "is_banned",
          "uniq_username_css",
          "user_id",
          "username"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "display_style_group_id": {
            "title": "Display Style Group Id",
            "type": "integer"
          },
          "is_banned": {
            "title": "Is Banned",
            "type": "integer"
          },
          "uniq_username_css": {
            "title": "Uniq Username Css",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__post__Links": {
        "title": "Links",
        "required": [
          "attachments",
          "detail",
          "likes",
          "permalink",
          "poster",
          "poster_avatar",
          "report",
          "thread"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "thread": {
            "title": "Thread",
            "type": "string"
          },
          "poster": {
            "title": "Poster",
            "type": "string"
          },
          "likes": {
            "title": "Likes",
            "type": "string"
          },
          "report": {
            "title": "Report",
            "type": "string"
          },
          "attachments": {
            "title": "Attachments",
            "type": "string"
          },
          "poster_avatar": {
            "title": "Poster Avatar",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__post__Links1": {
        "title": "Links1",
        "required": [
          "detail",
          "first_post",
          "first_poster",
          "first_poster_avatar",
          "followers",
          "forum",
          "permalink",
          "posts"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "followers": {
            "title": "Followers",
            "type": "string"
          },
          "forum": {
            "title": "Forum",
            "type": "string"
          },
          "posts": {
            "title": "Posts",
            "type": "string"
          },
          "first_poster": {
            "title": "First Poster",
            "type": "string"
          },
          "first_poster_avatar": {
            "title": "First Poster Avatar",
            "type": "string"
          },
          "first_post": {
            "title": "First Post",
            "type": "string"
          },
          "last_poster": {
            "title": "Last Poster",
            "type": "string"
          },
          "last_post": {
            "title": "Last Post",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__post__Links2": {
        "title": "Links2",
        "required": [
          "detail",
          "followers",
          "permalink",
          "sub-categories",
          "sub-forums",
          "threads"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "sub-categories": {
            "title": "Sub-Categories",
            "type": "string"
          },
          "sub-forums": {
            "title": "Sub-Forums",
            "type": "string"
          },
          "threads": {
            "title": "Threads",
            "type": "string"
          },
          "followers": {
            "title": "Followers",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__post__Permissions": {
        "title": "Permissions",
        "required": [
          "delete",
          "edit",
          "like",
          "reply",
          "report",
          "upload_attachment",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "reply": {
            "title": "Reply",
            "type": "boolean"
          },
          "like": {
            "title": "Like",
            "type": "boolean"
          },
          "report": {
            "title": "Report",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__search__post__Permissions1": {
        "title": "Permissions1",
        "required": [
          "delete",
          "edit",
          "follow",
          "post",
          "upload_attachment",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "follow": {
            "title": "Follow",
            "type": "boolean"
          },
          "post": {
            "title": "Post",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__search__post__Permissions2": {
        "title": "Permissions2",
        "required": [
          "create_thread",
          "delete",
          "edit",
          "follow",
          "tag_thread",
          "upload_attachment",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "create_thread": {
            "title": "Create Thread",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          },
          "tag_thread": {
            "title": "Tag Thread",
            "type": "boolean"
          },
          "follow": {
            "title": "Follow",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__search__post__Post": {
        "title": "Post",
        "required": [
          "post_id"
        ],
        "type": "object",
        "properties": {
          "thread_id": {
            "title": "Thread Id",
            "type": "integer"
          },
          "post_id": {
            "title": "Post Id",
            "type": "integer"
          }
        }
      },
      "forum_api__schemas__search__post__ThreadPrefix": {
        "title": "ThreadPrefix",
        "required": [
          "prefix_id",
          "prefix_title"
        ],
        "type": "object",
        "properties": {
          "prefix_id": {
            "title": "Prefix Id",
            "type": "integer"
          },
          "prefix_title": {
            "title": "Prefix Title",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__post__ThreadTag": {
        "title": "ThreadTag",
        "type": "object",
        "properties": {
          "197": {
            "title": "197",
            "type": "string"
          },
          "737": {
            "title": "737",
            "type": "string"
          },
          "17681": {
            "title": "17681",
            "type": "string"
          },
          "36033": {
            "title": "36033",
            "type": "string"
          },
          "69493": {
            "title": "69493",
            "type": "string"
          },
          "89719": {
            "title": "89719",
            "type": "string"
          },
          "89853": {
            "title": "89853",
            "type": "string"
          },
          "92494": {
            "title": "92494",
            "type": "string"
          },
          "98619": {
            "title": "98619",
            "type": "string"
          },
          "116293": {
            "title": "116293",
            "type": "string"
          },
          "138202": {
            "title": "138202",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__search__Datum": {
        "title": "Datum",
        "required": [
          "content_id",
          "content_type",
          "creator_user_id",
          "creator_username",
          "first_post",
          "forum",
          "forum_id",
          "links",
          "permissions",
          "thread_create_date",
          "thread_id",
          "thread_is_deleted",
          "thread_is_followed",
          "thread_is_published",
          "thread_is_sticky",
          "thread_post_count",
          "thread_prefixes",
          "thread_tags",
          "thread_title",
          "thread_update_date",
          "thread_view_count",
          "user_is_ignored"
        ],
        "type": "object",
        "properties": {
          "content_type": {
            "title": "Content Type",
            "type": "string"
          },
          "content_id": {
            "title": "Content Id",
            "type": "integer"
          },
          "thread_id": {
            "title": "Thread Id",
            "type": "integer"
          },
          "forum_id": {
            "title": "Forum Id",
            "type": "integer"
          },
          "thread_title": {
            "title": "Thread Title",
            "type": "string"
          },
          "thread_view_count": {
            "title": "Thread View Count",
            "type": "integer"
          },
          "creator_user_id": {
            "title": "Creator User Id",
            "type": "integer"
          },
          "creator_username": {
            "title": "Creator Username",
            "type": "string"
          },
          "thread_create_date": {
            "title": "Thread Create Date",
            "type": "integer"
          },
          "thread_update_date": {
            "title": "Thread Update Date",
            "type": "integer"
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "thread_post_count": {
            "title": "Thread Post Count",
            "type": "integer"
          },
          "thread_is_published": {
            "title": "Thread Is Published",
            "type": "boolean"
          },
          "thread_is_deleted": {
            "title": "Thread Is Deleted",
            "type": "boolean"
          },
          "thread_is_sticky": {
            "title": "Thread Is Sticky",
            "type": "boolean"
          },
          "thread_is_followed": {
            "title": "Thread Is Followed",
            "type": "boolean"
          },
          "first_post": {
            "$ref": "#/components/schemas/forum_api__schemas__search__search__FirstPost"
          },
          "thread_prefixes": {
            "title": "Thread Prefixes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__search__search__ThreadPrefix"
            }
          },
          "thread_tags": {
            "title": "Thread Tags",
            "anyOf": [
              {
                "type": "array",
                "items": {}
              },
              {
                "$ref": "#/components/schemas/forum_api__schemas__search__search__ThreadTag"
              }
            ]
          },
          "links": {
            "$ref": "#/components/schemas/Links_1"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__search__search__Permissions1"
          },
          "forum": {
            "$ref": "#/components/schemas/forum_api__schemas__search__search__Forum"
          }
        }
      },
      "forum_api__schemas__search__search__FirstPost": {
        "title": "FirstPost",
        "required": [
          "links",
          "permissions",
          "post_attachment_count",
          "post_body",
          "post_body_html",
          "post_body_plain_text",
          "post_create_date",
          "post_id",
          "post_is_deleted",
          "post_is_first_post",
          "post_is_published",
          "post_like_count",
          "post_update_date",
          "poster_user_id",
          "poster_username",
          "signature",
          "signature_html",
          "signature_plain_text",
          "thread_id",
          "user_is_ignored"
        ],
        "type": "object",
        "properties": {
          "post_id": {
            "title": "Post Id",
            "type": "integer"
          },
          "thread_id": {
            "title": "Thread Id",
            "type": "integer"
          },
          "poster_user_id": {
            "title": "Poster User Id",
            "type": "integer"
          },
          "poster_username": {
            "title": "Poster Username",
            "type": "string"
          },
          "post_create_date": {
            "title": "Post Create Date",
            "type": "integer"
          },
          "post_body": {
            "title": "Post Body",
            "type": "string"
          },
          "post_body_html": {
            "title": "Post Body Html",
            "type": "string"
          },
          "post_body_plain_text": {
            "title": "Post Body Plain Text",
            "type": "string"
          },
          "signature": {
            "title": "Signature",
            "type": "string"
          },
          "signature_html": {
            "title": "Signature Html",
            "type": "string"
          },
          "signature_plain_text": {
            "title": "Signature Plain Text",
            "type": "string"
          },
          "post_like_count": {
            "title": "Post Like Count",
            "type": "integer"
          },
          "post_attachment_count": {
            "title": "Post Attachment Count",
            "type": "integer"
          },
          "like_users": {
            "title": "Like Users",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__search__search__LikeUser"
            }
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "post_is_published": {
            "title": "Post Is Published",
            "type": "boolean"
          },
          "post_is_deleted": {
            "title": "Post Is Deleted",
            "type": "boolean"
          },
          "post_update_date": {
            "title": "Post Update Date",
            "type": "integer"
          },
          "post_is_first_post": {
            "title": "Post Is First Post",
            "type": "boolean"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__search__search__Links"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__search__search__Permissions"
          }
        }
      },
      "forum_api__schemas__search__search__Forum": {
        "title": "Forum",
        "required": [
          "forum_description",
          "forum_id",
          "forum_is_followed",
          "forum_post_count",
          "forum_prefixes",
          "forum_thread_count",
          "forum_title",
          "links",
          "permissions",
          "thread_default_prefix_id",
          "thread_prefix_is_required"
        ],
        "type": "object",
        "properties": {
          "forum_id": {
            "title": "Forum Id",
            "type": "integer"
          },
          "forum_title": {
            "title": "Forum Title",
            "type": "string"
          },
          "forum_description": {
            "title": "Forum Description",
            "type": "string"
          },
          "forum_thread_count": {
            "title": "Forum Thread Count",
            "type": "integer"
          },
          "forum_post_count": {
            "title": "Forum Post Count",
            "type": "integer"
          },
          "forum_prefixes": {
            "title": "Forum Prefixes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__search__search__ForumPrefix"
            }
          },
          "thread_default_prefix_id": {
            "title": "Thread Default Prefix Id",
            "type": "integer"
          },
          "thread_prefix_is_required": {
            "title": "Thread Prefix Is Required",
            "type": "boolean"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__search__search__Links2"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__search__search__Permissions2"
          },
          "forum_is_followed": {
            "title": "Forum Is Followed",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__search__search__ForumPrefix": {
        "title": "ForumPrefix",
        "required": [
          "group_prefixes",
          "group_title"
        ],
        "type": "object",
        "properties": {
          "group_title": {
            "title": "Group Title",
            "type": "string"
          },
          "group_prefixes": {
            "title": "Group Prefixes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__search__search__GroupPrefix"
            }
          }
        }
      },
      "forum_api__schemas__search__search__GroupPrefix": {
        "title": "GroupPrefix",
        "required": [
          "prefix_id",
          "prefix_title"
        ],
        "type": "object",
        "properties": {
          "prefix_id": {
            "title": "Prefix Id",
            "type": "integer"
          },
          "prefix_title": {
            "title": "Prefix Title",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__search__LikeUser": {
        "title": "LikeUser",
        "required": [
          "display_style_group_id",
          "is_banned",
          "uniq_username_css",
          "user_id",
          "username"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "display_style_group_id": {
            "title": "Display Style Group Id",
            "type": "integer"
          },
          "is_banned": {
            "title": "Is Banned",
            "type": "integer"
          },
          "uniq_username_css": {
            "title": "Uniq Username Css",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__search__Links": {
        "title": "Links",
        "required": [
          "attachments",
          "detail",
          "likes",
          "permalink",
          "poster",
          "poster_avatar",
          "report",
          "thread"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "thread": {
            "title": "Thread",
            "type": "string"
          },
          "poster": {
            "title": "Poster",
            "type": "string"
          },
          "likes": {
            "title": "Likes",
            "type": "string"
          },
          "report": {
            "title": "Report",
            "type": "string"
          },
          "attachments": {
            "title": "Attachments",
            "type": "string"
          },
          "poster_avatar": {
            "title": "Poster Avatar",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__search__Links2": {
        "title": "Links2",
        "required": [
          "detail",
          "followers",
          "permalink",
          "sub-categories",
          "sub-forums",
          "threads"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "sub-categories": {
            "title": "Sub-Categories",
            "type": "string"
          },
          "sub-forums": {
            "title": "Sub-Forums",
            "type": "string"
          },
          "threads": {
            "title": "Threads",
            "type": "string"
          },
          "followers": {
            "title": "Followers",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__search__Permissions": {
        "title": "Permissions",
        "required": [
          "delete",
          "edit",
          "like",
          "reply",
          "report",
          "upload_attachment",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "reply": {
            "title": "Reply",
            "type": "boolean"
          },
          "like": {
            "title": "Like",
            "type": "boolean"
          },
          "report": {
            "title": "Report",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__search__search__Permissions1": {
        "title": "Permissions1",
        "required": [
          "delete",
          "edit",
          "follow",
          "post",
          "upload_attachment",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "follow": {
            "title": "Follow",
            "type": "boolean"
          },
          "post": {
            "title": "Post",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__search__search__Permissions2": {
        "title": "Permissions2",
        "required": [
          "create_thread",
          "delete",
          "edit",
          "follow",
          "tag_thread",
          "upload_attachment",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "create_thread": {
            "title": "Create Thread",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          },
          "tag_thread": {
            "title": "Tag Thread",
            "type": "boolean"
          },
          "follow": {
            "title": "Follow",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__search__search__ThreadPrefix": {
        "title": "ThreadPrefix",
        "required": [
          "prefix_id",
          "prefix_title"
        ],
        "type": "object",
        "properties": {
          "prefix_id": {
            "title": "Prefix Id",
            "type": "integer"
          },
          "prefix_title": {
            "title": "Prefix Title",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__search__ThreadTag": {
        "title": "ThreadTag",
        "required": [
          "116293"
        ],
        "type": "object",
        "properties": {
          "116293": {
            "title": "116293",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__tagged__Datum": {
        "title": "Datum",
        "required": [
          "content_id",
          "content_type",
          "creator_user_id",
          "creator_username",
          "first_post",
          "forum",
          "forum_id",
          "links",
          "permissions",
          "thread_create_date",
          "thread_id",
          "thread_is_deleted",
          "thread_is_followed",
          "thread_is_published",
          "thread_is_sticky",
          "thread_post_count",
          "thread_prefixes",
          "thread_tags",
          "thread_title",
          "thread_update_date",
          "thread_view_count",
          "user_is_ignored"
        ],
        "type": "object",
        "properties": {
          "content_type": {
            "title": "Content Type",
            "type": "string"
          },
          "content_id": {
            "title": "Content Id",
            "type": "integer"
          },
          "thread_id": {
            "title": "Thread Id",
            "type": "integer"
          },
          "forum_id": {
            "title": "Forum Id",
            "type": "integer"
          },
          "thread_title": {
            "title": "Thread Title",
            "type": "string"
          },
          "thread_view_count": {
            "title": "Thread View Count",
            "type": "integer"
          },
          "creator_user_id": {
            "title": "Creator User Id",
            "type": "integer"
          },
          "creator_username": {
            "title": "Creator Username",
            "type": "string"
          },
          "thread_create_date": {
            "title": "Thread Create Date",
            "type": "integer"
          },
          "thread_update_date": {
            "title": "Thread Update Date",
            "type": "integer"
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "thread_post_count": {
            "title": "Thread Post Count",
            "type": "integer"
          },
          "thread_is_published": {
            "title": "Thread Is Published",
            "type": "boolean"
          },
          "thread_is_deleted": {
            "title": "Thread Is Deleted",
            "type": "boolean"
          },
          "thread_is_sticky": {
            "title": "Thread Is Sticky",
            "type": "boolean"
          },
          "thread_is_followed": {
            "title": "Thread Is Followed",
            "type": "boolean"
          },
          "first_post": {
            "$ref": "#/components/schemas/forum_api__schemas__search__tagged__FirstPost"
          },
          "thread_prefixes": {
            "title": "Thread Prefixes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__search__tagged__ThreadPrefix"
            }
          },
          "thread_tags": {
            "$ref": "#/components/schemas/forum_api__schemas__search__tagged__ThreadTags"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__search__tagged__Links1"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__search__tagged__Permissions1"
          },
          "forum": {
            "$ref": "#/components/schemas/forum_api__schemas__search__tagged__Forum"
          }
        }
      },
      "forum_api__schemas__search__tagged__FirstPost": {
        "title": "FirstPost",
        "required": [
          "links",
          "permissions",
          "post_attachment_count",
          "post_body",
          "post_body_html",
          "post_body_plain_text",
          "post_create_date",
          "post_id",
          "post_is_deleted",
          "post_is_first_post",
          "post_is_published",
          "post_like_count",
          "post_update_date",
          "poster_user_id",
          "poster_username",
          "signature",
          "signature_html",
          "signature_plain_text",
          "thread_id",
          "user_is_ignored"
        ],
        "type": "object",
        "properties": {
          "post_id": {
            "title": "Post Id",
            "type": "integer"
          },
          "thread_id": {
            "title": "Thread Id",
            "type": "integer"
          },
          "poster_user_id": {
            "title": "Poster User Id",
            "type": "integer"
          },
          "poster_username": {
            "title": "Poster Username",
            "type": "string"
          },
          "post_create_date": {
            "title": "Post Create Date",
            "type": "integer"
          },
          "post_body": {
            "title": "Post Body",
            "type": "string"
          },
          "post_body_html": {
            "title": "Post Body Html",
            "type": "string"
          },
          "post_body_plain_text": {
            "title": "Post Body Plain Text",
            "type": "string"
          },
          "signature": {
            "title": "Signature",
            "type": "string"
          },
          "signature_html": {
            "title": "Signature Html",
            "type": "string"
          },
          "signature_plain_text": {
            "title": "Signature Plain Text",
            "type": "string"
          },
          "post_like_count": {
            "title": "Post Like Count",
            "type": "integer"
          },
          "post_attachment_count": {
            "title": "Post Attachment Count",
            "type": "integer"
          },
          "like_users": {
            "title": "Like Users",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__search__tagged__LikeUser"
            }
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "post_is_published": {
            "title": "Post Is Published",
            "type": "boolean"
          },
          "post_is_deleted": {
            "title": "Post Is Deleted",
            "type": "boolean"
          },
          "post_update_date": {
            "title": "Post Update Date",
            "type": "integer"
          },
          "post_is_first_post": {
            "title": "Post Is First Post",
            "type": "boolean"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__search__tagged__Links"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__search__tagged__Permissions"
          }
        }
      },
      "forum_api__schemas__search__tagged__Forum": {
        "title": "Forum",
        "required": [
          "forum_description",
          "forum_id",
          "forum_is_followed",
          "forum_post_count",
          "forum_prefixes",
          "forum_thread_count",
          "forum_title",
          "links",
          "permissions",
          "thread_default_prefix_id",
          "thread_prefix_is_required"
        ],
        "type": "object",
        "properties": {
          "forum_id": {
            "title": "Forum Id",
            "type": "integer"
          },
          "forum_title": {
            "title": "Forum Title",
            "type": "string"
          },
          "forum_description": {
            "title": "Forum Description",
            "type": "string"
          },
          "forum_thread_count": {
            "title": "Forum Thread Count",
            "type": "integer"
          },
          "forum_post_count": {
            "title": "Forum Post Count",
            "type": "integer"
          },
          "forum_prefixes": {
            "title": "Forum Prefixes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__search__tagged__ForumPrefix"
            }
          },
          "thread_default_prefix_id": {
            "title": "Thread Default Prefix Id",
            "type": "integer"
          },
          "thread_prefix_is_required": {
            "title": "Thread Prefix Is Required",
            "type": "boolean"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__search__tagged__Links2"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__search__tagged__Permissions2"
          },
          "forum_is_followed": {
            "title": "Forum Is Followed",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__search__tagged__ForumPrefix": {
        "title": "ForumPrefix",
        "required": [
          "group_prefixes",
          "group_title"
        ],
        "type": "object",
        "properties": {
          "group_title": {
            "title": "Group Title",
            "type": "string"
          },
          "group_prefixes": {
            "title": "Group Prefixes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__search__tagged__GroupPrefix"
            }
          }
        }
      },
      "forum_api__schemas__search__tagged__GroupPrefix": {
        "title": "GroupPrefix",
        "required": [
          "prefix_id",
          "prefix_title"
        ],
        "type": "object",
        "properties": {
          "prefix_id": {
            "title": "Prefix Id",
            "type": "integer"
          },
          "prefix_title": {
            "title": "Prefix Title",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__tagged__LikeUser": {
        "title": "LikeUser",
        "required": [
          "display_style_group_id",
          "is_banned",
          "uniq_username_css",
          "user_id",
          "username"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "display_style_group_id": {
            "title": "Display Style Group Id",
            "type": "integer"
          },
          "is_banned": {
            "title": "Is Banned",
            "type": "integer"
          },
          "uniq_username_css": {
            "title": "Uniq Username Css",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__tagged__Links": {
        "title": "Links",
        "required": [
          "attachments",
          "detail",
          "likes",
          "permalink",
          "poster",
          "poster_avatar",
          "report",
          "thread"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "thread": {
            "title": "Thread",
            "type": "string"
          },
          "poster": {
            "title": "Poster",
            "type": "string"
          },
          "likes": {
            "title": "Likes",
            "type": "string"
          },
          "report": {
            "title": "Report",
            "type": "string"
          },
          "attachments": {
            "title": "Attachments",
            "type": "string"
          },
          "poster_avatar": {
            "title": "Poster Avatar",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__tagged__Links1": {
        "title": "Links1",
        "required": [
          "detail",
          "first_post",
          "first_poster",
          "first_poster_avatar",
          "followers",
          "forum",
          "permalink",
          "posts"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "followers": {
            "title": "Followers",
            "type": "string"
          },
          "forum": {
            "title": "Forum",
            "type": "string"
          },
          "posts": {
            "title": "Posts",
            "type": "string"
          },
          "first_poster": {
            "title": "First Poster",
            "type": "string"
          },
          "first_poster_avatar": {
            "title": "First Poster Avatar",
            "type": "string"
          },
          "first_post": {
            "title": "First Post",
            "type": "string"
          },
          "last_poster": {
            "title": "Last Poster",
            "type": "string"
          },
          "last_post": {
            "title": "Last Post",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__tagged__Links2": {
        "title": "Links2",
        "required": [
          "detail",
          "followers",
          "permalink",
          "sub-categories",
          "sub-forums",
          "threads"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "sub-categories": {
            "title": "Sub-Categories",
            "type": "string"
          },
          "sub-forums": {
            "title": "Sub-Forums",
            "type": "string"
          },
          "threads": {
            "title": "Threads",
            "type": "string"
          },
          "followers": {
            "title": "Followers",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__tagged__Permissions": {
        "title": "Permissions",
        "required": [
          "delete",
          "edit",
          "like",
          "reply",
          "report",
          "upload_attachment",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "reply": {
            "title": "Reply",
            "type": "boolean"
          },
          "like": {
            "title": "Like",
            "type": "boolean"
          },
          "report": {
            "title": "Report",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__search__tagged__Permissions1": {
        "title": "Permissions1",
        "required": [
          "delete",
          "edit",
          "follow",
          "post",
          "upload_attachment",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "follow": {
            "title": "Follow",
            "type": "boolean"
          },
          "post": {
            "title": "Post",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__search__tagged__Permissions2": {
        "title": "Permissions2",
        "required": [
          "create_thread",
          "delete",
          "edit",
          "follow",
          "tag_thread",
          "upload_attachment",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "create_thread": {
            "title": "Create Thread",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          },
          "tag_thread": {
            "title": "Tag Thread",
            "type": "boolean"
          },
          "follow": {
            "title": "Follow",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__search__tagged__ThreadPrefix": {
        "title": "ThreadPrefix",
        "required": [
          "prefix_id",
          "prefix_title"
        ],
        "type": "object",
        "properties": {
          "prefix_id": {
            "title": "Prefix Id",
            "type": "integer"
          },
          "prefix_title": {
            "title": "Prefix Title",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__tagged__ThreadTags": {
        "title": "ThreadTags",
        "required": [
          "36033"
        ],
        "type": "object",
        "properties": {
          "197": {
            "title": "197",
            "type": "string"
          },
          "737": {
            "title": "737",
            "type": "string"
          },
          "6478": {
            "title": "6478",
            "type": "string"
          },
          "17681": {
            "title": "17681",
            "type": "string"
          },
          "36033": {
            "title": "36033",
            "type": "string"
          },
          "41193": {
            "title": "41193",
            "type": "string"
          },
          "81829": {
            "title": "81829",
            "type": "string"
          },
          "89719": {
            "title": "89719",
            "type": "string"
          },
          "89853": {
            "title": "89853",
            "type": "string"
          },
          "92494": {
            "title": "92494",
            "type": "string"
          },
          "97279": {
            "title": "97279",
            "type": "string"
          },
          "114834": {
            "title": "114834",
            "type": "string"
          },
          "118125": {
            "title": "118125",
            "type": "string"
          },
          "136446": {
            "title": "136446",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__thread__Datum": {
        "title": "Datum",
        "required": [
          "content_id",
          "content_type",
          "creator_user_id",
          "creator_username",
          "first_post",
          "forum",
          "forum_id",
          "links",
          "permissions",
          "thread_create_date",
          "thread_id",
          "thread_is_deleted",
          "thread_is_followed",
          "thread_is_published",
          "thread_is_sticky",
          "thread_post_count",
          "thread_prefixes",
          "thread_tags",
          "thread_title",
          "thread_update_date",
          "thread_view_count",
          "user_is_ignored"
        ],
        "type": "object",
        "properties": {
          "content_type": {
            "title": "Content Type",
            "type": "string"
          },
          "content_id": {
            "title": "Content Id",
            "type": "integer"
          },
          "thread_id": {
            "title": "Thread Id",
            "type": "integer"
          },
          "forum_id": {
            "title": "Forum Id",
            "type": "integer"
          },
          "thread_title": {
            "title": "Thread Title",
            "type": "string"
          },
          "thread_view_count": {
            "title": "Thread View Count",
            "type": "integer"
          },
          "creator_user_id": {
            "title": "Creator User Id",
            "type": "integer"
          },
          "creator_username": {
            "title": "Creator Username",
            "type": "string"
          },
          "thread_create_date": {
            "title": "Thread Create Date",
            "type": "integer"
          },
          "thread_update_date": {
            "title": "Thread Update Date",
            "type": "integer"
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "thread_post_count": {
            "title": "Thread Post Count",
            "type": "integer"
          },
          "thread_is_published": {
            "title": "Thread Is Published",
            "type": "boolean"
          },
          "thread_is_deleted": {
            "title": "Thread Is Deleted",
            "type": "boolean"
          },
          "thread_is_sticky": {
            "title": "Thread Is Sticky",
            "type": "boolean"
          },
          "thread_is_followed": {
            "title": "Thread Is Followed",
            "type": "boolean"
          },
          "first_post": {
            "$ref": "#/components/schemas/forum_api__schemas__search__thread__FirstPost"
          },
          "thread_prefixes": {
            "title": "Thread Prefixes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__search__thread__ThreadPrefix"
            }
          },
          "thread_tags": {
            "title": "Thread Tags",
            "anyOf": [
              {
                "type": "array",
                "items": {}
              },
              {
                "$ref": "#/components/schemas/forum_api__schemas__search__thread__ThreadTag"
              }
            ]
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__search__thread__Links1"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__search__thread__Permissions1"
          },
          "forum": {
            "$ref": "#/components/schemas/forum_api__schemas__search__thread__Forum"
          }
        }
      },
      "forum_api__schemas__search__thread__FirstPost": {
        "title": "FirstPost",
        "required": [
          "links",
          "permissions",
          "post_attachment_count",
          "post_body",
          "post_body_html",
          "post_body_plain_text",
          "post_create_date",
          "post_id",
          "post_is_deleted",
          "post_is_first_post",
          "post_is_published",
          "post_like_count",
          "post_update_date",
          "poster_user_id",
          "poster_username",
          "signature",
          "signature_html",
          "signature_plain_text",
          "thread_id",
          "user_is_ignored"
        ],
        "type": "object",
        "properties": {
          "post_id": {
            "title": "Post Id",
            "type": "integer"
          },
          "thread_id": {
            "title": "Thread Id",
            "type": "integer"
          },
          "poster_user_id": {
            "title": "Poster User Id",
            "type": "integer"
          },
          "poster_username": {
            "title": "Poster Username",
            "type": "string"
          },
          "post_create_date": {
            "title": "Post Create Date",
            "type": "integer"
          },
          "post_body": {
            "title": "Post Body",
            "type": "string"
          },
          "post_body_html": {
            "title": "Post Body Html",
            "type": "string"
          },
          "post_body_plain_text": {
            "title": "Post Body Plain Text",
            "type": "string"
          },
          "signature": {
            "title": "Signature",
            "type": "string"
          },
          "signature_html": {
            "title": "Signature Html",
            "type": "string"
          },
          "signature_plain_text": {
            "title": "Signature Plain Text",
            "type": "string"
          },
          "post_like_count": {
            "title": "Post Like Count",
            "type": "integer"
          },
          "post_attachment_count": {
            "title": "Post Attachment Count",
            "type": "integer"
          },
          "like_users": {
            "title": "Like Users",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__search__thread__LikeUser"
            }
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "post_is_published": {
            "title": "Post Is Published",
            "type": "boolean"
          },
          "post_is_deleted": {
            "title": "Post Is Deleted",
            "type": "boolean"
          },
          "post_update_date": {
            "title": "Post Update Date",
            "type": "integer"
          },
          "post_is_first_post": {
            "title": "Post Is First Post",
            "type": "boolean"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__search__thread__Links"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__search__thread__Permissions"
          }
        }
      },
      "forum_api__schemas__search__thread__Forum": {
        "title": "Forum",
        "required": [
          "forum_description",
          "forum_id",
          "forum_is_followed",
          "forum_post_count",
          "forum_prefixes",
          "forum_thread_count",
          "forum_title",
          "links",
          "permissions",
          "thread_default_prefix_id",
          "thread_prefix_is_required"
        ],
        "type": "object",
        "properties": {
          "forum_id": {
            "title": "Forum Id",
            "type": "integer"
          },
          "forum_title": {
            "title": "Forum Title",
            "type": "string"
          },
          "forum_description": {
            "title": "Forum Description",
            "type": "string"
          },
          "forum_thread_count": {
            "title": "Forum Thread Count",
            "type": "integer"
          },
          "forum_post_count": {
            "title": "Forum Post Count",
            "type": "integer"
          },
          "forum_prefixes": {
            "title": "Forum Prefixes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__search__thread__ForumPrefix"
            }
          },
          "thread_default_prefix_id": {
            "title": "Thread Default Prefix Id",
            "type": "integer"
          },
          "thread_prefix_is_required": {
            "title": "Thread Prefix Is Required",
            "type": "boolean"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__search__thread__Links2"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__search__thread__Permissions2"
          },
          "forum_is_followed": {
            "title": "Forum Is Followed",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__search__thread__ForumPrefix": {
        "title": "ForumPrefix",
        "required": [
          "group_prefixes",
          "group_title"
        ],
        "type": "object",
        "properties": {
          "group_title": {
            "title": "Group Title",
            "type": "string"
          },
          "group_prefixes": {
            "title": "Group Prefixes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__search__thread__GroupPrefix"
            }
          }
        }
      },
      "forum_api__schemas__search__thread__GroupPrefix": {
        "title": "GroupPrefix",
        "required": [
          "prefix_id",
          "prefix_title"
        ],
        "type": "object",
        "properties": {
          "prefix_id": {
            "title": "Prefix Id",
            "type": "integer"
          },
          "prefix_title": {
            "title": "Prefix Title",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__thread__LikeUser": {
        "title": "LikeUser",
        "required": [
          "display_style_group_id",
          "is_banned",
          "uniq_username_css",
          "user_id",
          "username"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "display_style_group_id": {
            "title": "Display Style Group Id",
            "type": "integer"
          },
          "is_banned": {
            "title": "Is Banned",
            "type": "integer"
          },
          "uniq_username_css": {
            "title": "Uniq Username Css",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__thread__Links": {
        "title": "Links",
        "required": [
          "attachments",
          "detail",
          "likes",
          "permalink",
          "poster",
          "poster_avatar",
          "report",
          "thread"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "thread": {
            "title": "Thread",
            "type": "string"
          },
          "poster": {
            "title": "Poster",
            "type": "string"
          },
          "likes": {
            "title": "Likes",
            "type": "string"
          },
          "report": {
            "title": "Report",
            "type": "string"
          },
          "attachments": {
            "title": "Attachments",
            "type": "string"
          },
          "poster_avatar": {
            "title": "Poster Avatar",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__thread__Links1": {
        "title": "Links1",
        "required": [
          "detail",
          "first_post",
          "first_poster",
          "first_poster_avatar",
          "followers",
          "forum",
          "permalink",
          "posts"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "followers": {
            "title": "Followers",
            "type": "string"
          },
          "forum": {
            "title": "Forum",
            "type": "string"
          },
          "posts": {
            "title": "Posts",
            "type": "string"
          },
          "first_poster": {
            "title": "First Poster",
            "type": "string"
          },
          "first_poster_avatar": {
            "title": "First Poster Avatar",
            "type": "string"
          },
          "first_post": {
            "title": "First Post",
            "type": "string"
          },
          "last_poster": {
            "title": "Last Poster",
            "type": "string"
          },
          "last_post": {
            "title": "Last Post",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__thread__Links2": {
        "title": "Links2",
        "required": [
          "detail",
          "followers",
          "permalink",
          "sub-categories",
          "sub-forums",
          "threads"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "sub-categories": {
            "title": "Sub-Categories",
            "type": "string"
          },
          "sub-forums": {
            "title": "Sub-Forums",
            "type": "string"
          },
          "threads": {
            "title": "Threads",
            "type": "string"
          },
          "followers": {
            "title": "Followers",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__thread__Permissions": {
        "title": "Permissions",
        "required": [
          "delete",
          "edit",
          "like",
          "reply",
          "report",
          "upload_attachment",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "reply": {
            "title": "Reply",
            "type": "boolean"
          },
          "like": {
            "title": "Like",
            "type": "boolean"
          },
          "report": {
            "title": "Report",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__search__thread__Permissions1": {
        "title": "Permissions1",
        "required": [
          "delete",
          "edit",
          "follow",
          "post",
          "upload_attachment",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "follow": {
            "title": "Follow",
            "type": "boolean"
          },
          "post": {
            "title": "Post",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__search__thread__Permissions2": {
        "title": "Permissions2",
        "required": [
          "create_thread",
          "delete",
          "edit",
          "follow",
          "tag_thread",
          "upload_attachment",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "create_thread": {
            "title": "Create Thread",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          },
          "tag_thread": {
            "title": "Tag Thread",
            "type": "boolean"
          },
          "follow": {
            "title": "Follow",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__search__thread__Thread": {
        "title": "Thread",
        "required": [
          "thread_id"
        ],
        "type": "object",
        "properties": {
          "thread_id": {
            "title": "Thread Id",
            "type": "integer"
          }
        }
      },
      "forum_api__schemas__search__thread__ThreadPrefix": {
        "title": "ThreadPrefix",
        "required": [
          "prefix_id",
          "prefix_title"
        ],
        "type": "object",
        "properties": {
          "prefix_id": {
            "title": "Prefix Id",
            "type": "integer"
          },
          "prefix_title": {
            "title": "Prefix Title",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__search__thread__ThreadTag": {
        "title": "ThreadTag",
        "type": "object",
        "properties": {
          "197": {
            "title": "197",
            "type": "string"
          },
          "737": {
            "title": "737",
            "type": "string"
          },
          "17681": {
            "title": "17681",
            "type": "string"
          },
          "36033": {
            "title": "36033",
            "type": "string"
          },
          "69493": {
            "title": "69493",
            "type": "string"
          },
          "89719": {
            "title": "89719",
            "type": "string"
          },
          "89853": {
            "title": "89853",
            "type": "string"
          },
          "92494": {
            "title": "92494",
            "type": "string"
          },
          "98619": {
            "title": "98619",
            "type": "string"
          },
          "116293": {
            "title": "116293",
            "type": "string"
          },
          "138202": {
            "title": "138202",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__tags__Links": {
        "title": "Links",
        "required": [
          "next",
          "page",
          "pages"
        ],
        "type": "object",
        "properties": {
          "pages": {
            "title": "Pages",
            "type": "integer"
          },
          "page": {
            "title": "Page",
            "type": "integer"
          },
          "next": {
            "title": "Next",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__tags__SystemInfo": {
        "title": "SystemInfo",
        "required": [
          "time",
          "visitor_id"
        ],
        "type": "object",
        "properties": {
          "visitor_id": {
            "title": "Visitor Id",
            "type": "integer"
          },
          "time": {
            "title": "Time",
            "type": "integer"
          }
        }
      },
      "forum_api__schemas__tags__filter_tags__SystemInfo": {
        "title": "SystemInfo",
        "required": [
          "time",
          "visitor_id"
        ],
        "type": "object",
        "properties": {
          "visitor_id": {
            "title": "Visitor Id",
            "type": "integer"
          },
          "time": {
            "title": "Time",
            "type": "integer"
          }
        }
      },
      "forum_api__schemas__tags__tags__FirstPost": {
        "title": "FirstPost",
        "required": [
          "links",
          "permissions",
          "post_attachment_count",
          "post_body",
          "post_body_html",
          "post_body_plain_text",
          "post_create_date",
          "post_id",
          "post_is_deleted",
          "post_is_first_post",
          "post_is_published",
          "post_like_count",
          "post_update_date",
          "poster_user_id",
          "poster_username",
          "signature",
          "signature_html",
          "signature_plain_text",
          "thread_id",
          "user_is_ignored"
        ],
        "type": "object",
        "properties": {
          "post_id": {
            "title": "Post Id",
            "type": "integer"
          },
          "thread_id": {
            "title": "Thread Id",
            "type": "integer"
          },
          "poster_user_id": {
            "title": "Poster User Id",
            "type": "integer"
          },
          "poster_username": {
            "title": "Poster Username",
            "type": "string"
          },
          "post_create_date": {
            "title": "Post Create Date",
            "type": "integer"
          },
          "post_body": {
            "title": "Post Body",
            "type": "string"
          },
          "post_body_html": {
            "title": "Post Body Html",
            "type": "string"
          },
          "post_body_plain_text": {
            "title": "Post Body Plain Text",
            "type": "string"
          },
          "signature": {
            "title": "Signature",
            "type": "string"
          },
          "signature_html": {
            "title": "Signature Html",
            "type": "string"
          },
          "signature_plain_text": {
            "title": "Signature Plain Text",
            "type": "string"
          },
          "post_like_count": {
            "title": "Post Like Count",
            "type": "integer"
          },
          "post_attachment_count": {
            "title": "Post Attachment Count",
            "type": "integer"
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "post_is_published": {
            "title": "Post Is Published",
            "type": "boolean"
          },
          "post_is_deleted": {
            "title": "Post Is Deleted",
            "type": "boolean"
          },
          "post_update_date": {
            "title": "Post Update Date",
            "type": "integer"
          },
          "post_is_first_post": {
            "title": "Post Is First Post",
            "type": "boolean"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__tags__tags__Links1"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__tags__tags__Permissions"
          }
        }
      },
      "forum_api__schemas__tags__tags__Forum": {
        "title": "Forum",
        "required": [
          "forum_description",
          "forum_id",
          "forum_is_followed",
          "forum_post_count",
          "forum_prefixes",
          "forum_thread_count",
          "forum_title",
          "links",
          "permissions",
          "thread_default_prefix_id",
          "thread_prefix_is_required"
        ],
        "type": "object",
        "properties": {
          "forum_id": {
            "title": "Forum Id",
            "type": "integer"
          },
          "forum_title": {
            "title": "Forum Title",
            "type": "string"
          },
          "forum_description": {
            "title": "Forum Description",
            "type": "string"
          },
          "forum_thread_count": {
            "title": "Forum Thread Count",
            "type": "integer"
          },
          "forum_post_count": {
            "title": "Forum Post Count",
            "type": "integer"
          },
          "forum_prefixes": {
            "title": "Forum Prefixes",
            "type": "array",
            "items": {}
          },
          "thread_default_prefix_id": {
            "title": "Thread Default Prefix Id",
            "type": "integer"
          },
          "thread_prefix_is_required": {
            "title": "Thread Prefix Is Required",
            "type": "boolean"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__tags__tags__Links3"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__tags__tags__Permissions2"
          },
          "forum_is_followed": {
            "title": "Forum Is Followed",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__tags__tags__Links": {
        "title": "Links",
        "required": [
          "detail",
          "permalink"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__tags__tags__Links1": {
        "title": "Links1",
        "required": [
          "attachments",
          "detail",
          "likes",
          "permalink",
          "poster",
          "poster_avatar",
          "report",
          "thread"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "thread": {
            "title": "Thread",
            "type": "string"
          },
          "poster": {
            "title": "Poster",
            "type": "string"
          },
          "likes": {
            "title": "Likes",
            "type": "string"
          },
          "report": {
            "title": "Report",
            "type": "string"
          },
          "attachments": {
            "title": "Attachments",
            "type": "string"
          },
          "poster_avatar": {
            "title": "Poster Avatar",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__tags__tags__Links2": {
        "title": "Links2",
        "required": [
          "detail",
          "first_post",
          "first_poster",
          "first_poster_avatar",
          "followers",
          "forum",
          "last_post",
          "last_poster",
          "permalink",
          "posts"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "followers": {
            "title": "Followers",
            "type": "string"
          },
          "forum": {
            "title": "Forum",
            "type": "string"
          },
          "posts": {
            "title": "Posts",
            "type": "string"
          },
          "first_poster": {
            "title": "First Poster",
            "type": "string"
          },
          "first_poster_avatar": {
            "title": "First Poster Avatar",
            "type": "string"
          },
          "first_post": {
            "title": "First Post",
            "type": "string"
          },
          "last_poster": {
            "title": "Last Poster",
            "type": "string"
          },
          "last_post": {
            "title": "Last Post",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__tags__tags__Links3": {
        "title": "Links3",
        "required": [
          "detail",
          "followers",
          "permalink",
          "sub-categories",
          "sub-forums",
          "threads"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "sub-categories": {
            "title": "Sub-Categories",
            "type": "string"
          },
          "sub-forums": {
            "title": "Sub-Forums",
            "type": "string"
          },
          "threads": {
            "title": "Threads",
            "type": "string"
          },
          "followers": {
            "title": "Followers",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__tags__tags__Permissions": {
        "title": "Permissions",
        "required": [
          "delete",
          "edit",
          "like",
          "reply",
          "report",
          "upload_attachment",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "reply": {
            "title": "Reply",
            "type": "boolean"
          },
          "like": {
            "title": "Like",
            "type": "boolean"
          },
          "report": {
            "title": "Report",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__tags__tags__Permissions1": {
        "title": "Permissions1",
        "required": [
          "delete",
          "edit",
          "follow",
          "post",
          "upload_attachment",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "follow": {
            "title": "Follow",
            "type": "boolean"
          },
          "post": {
            "title": "Post",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__tags__tags__Permissions2": {
        "title": "Permissions2",
        "required": [
          "create_thread",
          "delete",
          "edit",
          "follow",
          "tag_thread",
          "upload_attachment",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "create_thread": {
            "title": "Create Thread",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          },
          "tag_thread": {
            "title": "Tag Thread",
            "type": "boolean"
          },
          "follow": {
            "title": "Follow",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__tags__tags__SystemInfo": {
        "title": "SystemInfo",
        "required": [
          "time",
          "visitor_id"
        ],
        "type": "object",
        "properties": {
          "visitor_id": {
            "title": "Visitor Id",
            "type": "integer"
          },
          "time": {
            "title": "Time",
            "type": "integer"
          }
        }
      },
      "forum_api__schemas__tags__tags__ThreadTags": {
        "title": "ThreadTags",
        "required": [
          "101",
          "1097",
          "14",
          "355"
        ],
        "type": "object",
        "properties": {
          "14": {
            "title": "14",
            "type": "string"
          },
          "101": {
            "title": "101",
            "type": "string"
          },
          "355": {
            "title": "355",
            "type": "string"
          },
          "1097": {
            "title": "1097",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__threads__FirstPost": {
        "title": "FirstPost",
        "required": [
          "like_users",
          "links",
          "permissions",
          "post_attachment_count",
          "post_body",
          "post_body_html",
          "post_body_plain_text",
          "post_create_date",
          "post_id",
          "post_is_deleted",
          "post_is_first_post",
          "post_is_published",
          "post_like_count",
          "post_update_date",
          "poster_user_id",
          "poster_username",
          "signature",
          "signature_html",
          "signature_plain_text",
          "thread_id",
          "user_is_ignored"
        ],
        "type": "object",
        "properties": {
          "post_id": {
            "title": "Post Id",
            "type": "integer"
          },
          "thread_id": {
            "title": "Thread Id",
            "type": "integer"
          },
          "poster_user_id": {
            "title": "Poster User Id",
            "type": "integer"
          },
          "poster_username": {
            "title": "Poster Username",
            "type": "string"
          },
          "post_create_date": {
            "title": "Post Create Date",
            "type": "integer"
          },
          "post_body": {
            "title": "Post Body",
            "type": "string"
          },
          "post_body_html": {
            "title": "Post Body Html",
            "type": "string"
          },
          "post_body_plain_text": {
            "title": "Post Body Plain Text",
            "type": "string"
          },
          "signature": {
            "title": "Signature",
            "type": "string"
          },
          "signature_html": {
            "title": "Signature Html",
            "type": "string"
          },
          "signature_plain_text": {
            "title": "Signature Plain Text",
            "type": "string"
          },
          "post_like_count": {
            "title": "Post Like Count",
            "type": "integer"
          },
          "post_attachment_count": {
            "title": "Post Attachment Count",
            "type": "integer"
          },
          "like_users": {
            "title": "Like Users",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__threads__LikeUser"
            }
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "post_is_published": {
            "title": "Post Is Published",
            "type": "boolean"
          },
          "post_is_deleted": {
            "title": "Post Is Deleted",
            "type": "boolean"
          },
          "post_update_date": {
            "title": "Post Update Date",
            "type": "integer"
          },
          "post_is_first_post": {
            "title": "Post Is First Post",
            "type": "boolean"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__threads__Links"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__threads__Permissions"
          }
        }
      },
      "forum_api__schemas__threads__Follow": {
        "title": "Follow",
        "required": [
          "alert",
          "email"
        ],
        "type": "object",
        "properties": {
          "alert": {
            "title": "Alert",
            "type": "boolean"
          },
          "email": {
            "title": "Email",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__threads__Forum": {
        "title": "Forum",
        "required": [
          "forum_description",
          "forum_id",
          "forum_is_followed",
          "forum_post_count",
          "forum_prefixes",
          "forum_thread_count",
          "forum_title",
          "links",
          "permissions",
          "thread_default_prefix_id",
          "thread_prefix_is_required"
        ],
        "type": "object",
        "properties": {
          "forum_id": {
            "title": "Forum Id",
            "type": "integer"
          },
          "forum_title": {
            "title": "Forum Title",
            "type": "string"
          },
          "forum_description": {
            "title": "Forum Description",
            "type": "string"
          },
          "forum_thread_count": {
            "title": "Forum Thread Count",
            "type": "integer"
          },
          "forum_post_count": {
            "title": "Forum Post Count",
            "type": "integer"
          },
          "forum_prefixes": {
            "title": "Forum Prefixes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__threads__ForumPrefix"
            }
          },
          "thread_default_prefix_id": {
            "title": "Thread Default Prefix Id",
            "type": "integer"
          },
          "thread_prefix_is_required": {
            "title": "Thread Prefix Is Required",
            "type": "boolean"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__threads__Links2"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__threads__Permissions2"
          },
          "forum_is_followed": {
            "title": "Forum Is Followed",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__threads__ForumPrefix": {
        "title": "ForumPrefix",
        "required": [
          "group_prefixes",
          "group_title"
        ],
        "type": "object",
        "properties": {
          "group_title": {
            "title": "Group Title",
            "type": "string"
          },
          "group_prefixes": {
            "title": "Group Prefixes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__threads__GroupPrefix"
            }
          }
        }
      },
      "forum_api__schemas__threads__GroupPrefix": {
        "title": "GroupPrefix",
        "required": [
          "prefix_id",
          "prefix_title"
        ],
        "type": "object",
        "properties": {
          "prefix_id": {
            "title": "Prefix Id",
            "type": "integer"
          },
          "prefix_title": {
            "title": "Prefix Title",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__threads__LikeUser": {
        "title": "LikeUser",
        "required": [
          "user_id",
          "username"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "display_style_group_id": {
            "title": "Display Style Group Id",
            "type": "integer"
          },
          "is_banned": {
            "title": "Is Banned",
            "type": "integer"
          },
          "uniq_username_css": {
            "title": "Uniq Username Css",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__threads__Links": {
        "title": "Links",
        "required": [
          "attachments",
          "detail",
          "likes",
          "permalink",
          "poster",
          "poster_avatar",
          "report",
          "thread"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "thread": {
            "title": "Thread",
            "type": "string"
          },
          "poster": {
            "title": "Poster",
            "type": "string"
          },
          "likes": {
            "title": "Likes",
            "type": "string"
          },
          "report": {
            "title": "Report",
            "type": "string"
          },
          "attachments": {
            "title": "Attachments",
            "type": "string"
          },
          "poster_avatar": {
            "title": "Poster Avatar",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__threads__Links1": {
        "title": "Links1",
        "required": [
          "detail",
          "first_post",
          "first_poster",
          "first_poster_avatar",
          "followers",
          "forum",
          "last_post",
          "last_poster",
          "permalink",
          "posts"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "followers": {
            "title": "Followers",
            "type": "string"
          },
          "forum": {
            "title": "Forum",
            "type": "string"
          },
          "posts": {
            "title": "Posts",
            "type": "string"
          },
          "first_poster": {
            "title": "First Poster",
            "type": "string"
          },
          "first_poster_avatar": {
            "title": "First Poster Avatar",
            "type": "string"
          },
          "first_post": {
            "title": "First Post",
            "type": "string"
          },
          "last_poster": {
            "title": "Last Poster",
            "type": "string"
          },
          "last_post": {
            "title": "Last Post",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__threads__Links2": {
        "title": "Links2",
        "required": [
          "detail",
          "followers",
          "permalink",
          "sub-categories",
          "sub-forums",
          "threads"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "sub-categories": {
            "title": "Sub-Categories",
            "type": "string"
          },
          "sub-forums": {
            "title": "Sub-Forums",
            "type": "string"
          },
          "threads": {
            "title": "Threads",
            "type": "string"
          },
          "followers": {
            "title": "Followers",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__threads__Permissions": {
        "title": "Permissions",
        "required": [
          "delete",
          "edit",
          "like",
          "reply",
          "report",
          "upload_attachment",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "reply": {
            "title": "Reply",
            "type": "boolean"
          },
          "like": {
            "title": "Like",
            "type": "boolean"
          },
          "report": {
            "title": "Report",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__threads__Permissions1": {
        "title": "Permissions1",
        "required": [
          "delete",
          "edit",
          "follow",
          "post",
          "upload_attachment",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "follow": {
            "title": "Follow",
            "type": "boolean"
          },
          "post": {
            "title": "Post",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__threads__Permissions2": {
        "title": "Permissions2",
        "required": [
          "create_thread",
          "delete",
          "edit",
          "follow",
          "tag_thread",
          "upload_attachment",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "create_thread": {
            "title": "Create Thread",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          },
          "tag_thread": {
            "title": "Tag Thread",
            "type": "boolean"
          },
          "follow": {
            "title": "Follow",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__threads__SystemInfo": {
        "title": "SystemInfo",
        "required": [
          "time",
          "visitor_id"
        ],
        "type": "object",
        "properties": {
          "visitor_id": {
            "title": "Visitor Id",
            "type": "integer"
          },
          "time": {
            "title": "Time",
            "type": "integer"
          }
        }
      },
      "forum_api__schemas__threads__Thread": {
        "title": "Thread",
        "required": [
          "creator_user_id",
          "creator_username",
          "first_post",
          "forum",
          "forum_id",
          "links",
          "permissions",
          "thread_create_date",
          "thread_id",
          "thread_is_deleted",
          "thread_is_followed",
          "thread_is_published",
          "thread_is_sticky",
          "thread_post_count",
          "thread_prefixes",
          "thread_tags",
          "thread_title",
          "thread_update_date",
          "thread_view_count",
          "user_is_ignored"
        ],
        "type": "object",
        "properties": {
          "thread_id": {
            "title": "Thread Id",
            "type": "integer"
          },
          "forum_id": {
            "title": "Forum Id",
            "type": "integer"
          },
          "thread_title": {
            "title": "Thread Title",
            "type": "string"
          },
          "thread_view_count": {
            "title": "Thread View Count",
            "type": "integer"
          },
          "creator_user_id": {
            "title": "Creator User Id",
            "type": "integer"
          },
          "creator_username": {
            "title": "Creator Username",
            "type": "string"
          },
          "thread_create_date": {
            "title": "Thread Create Date",
            "type": "integer"
          },
          "thread_update_date": {
            "title": "Thread Update Date",
            "type": "integer"
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "thread_post_count": {
            "title": "Thread Post Count",
            "type": "integer"
          },
          "thread_is_published": {
            "title": "Thread Is Published",
            "type": "boolean"
          },
          "thread_is_deleted": {
            "title": "Thread Is Deleted",
            "type": "boolean"
          },
          "thread_is_sticky": {
            "title": "Thread Is Sticky",
            "type": "boolean"
          },
          "thread_is_followed": {
            "title": "Thread Is Followed",
            "type": "boolean"
          },
          "first_post": {
            "$ref": "#/components/schemas/forum_api__schemas__threads__FirstPost"
          },
          "thread_prefixes": {
            "title": "Thread Prefixes",
            "type": "array",
            "items": {}
          },
          "thread_tags": {
            "title": "Thread Tags",
            "type": "array",
            "items": {}
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__threads__Links1"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__threads__Permissions1"
          },
          "forum": {
            "$ref": "#/components/schemas/forum_api__schemas__threads__Forum"
          }
        }
      },
      "forum_api__schemas__threads__User": {
        "title": "User",
        "required": [
          "follow",
          "user_id",
          "username"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "follow": {
            "$ref": "#/components/schemas/forum_api__schemas__threads__Follow"
          }
        }
      },
      "forum_api__schemas__threads__navigation__Element": {
        "title": "Element",
        "required": [
          "has_sub_elements",
          "links",
          "navigation_depth",
          "navigation_id",
          "navigation_parent_id",
          "navigation_type",
          "permissions"
        ],
        "type": "object",
        "properties": {
          "category_id": {
            "title": "Category Id",
            "type": "integer"
          },
          "category_title": {
            "title": "Category Title",
            "type": "string"
          },
          "category_description": {
            "title": "Category Description",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__threads__navigation__Links"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__threads__navigation__Permissions"
          },
          "navigation_type": {
            "title": "Navigation Type",
            "type": "string"
          },
          "navigation_id": {
            "title": "Navigation Id",
            "type": "integer"
          },
          "navigation_depth": {
            "title": "Navigation Depth",
            "type": "integer"
          },
          "navigation_parent_id": {
            "title": "Navigation Parent Id",
            "type": "integer"
          },
          "has_sub_elements": {
            "title": "Has Sub Elements",
            "type": "boolean"
          },
          "forum_id": {
            "title": "Forum Id",
            "type": "integer"
          },
          "forum_title": {
            "title": "Forum Title",
            "type": "string"
          },
          "forum_description": {
            "title": "Forum Description",
            "type": "string"
          },
          "forum_thread_count": {
            "title": "Forum Thread Count",
            "type": "integer"
          },
          "forum_post_count": {
            "title": "Forum Post Count",
            "type": "integer"
          },
          "forum_prefixes": {
            "title": "Forum Prefixes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__threads__navigation__ForumPrefix"
            }
          },
          "thread_default_prefix_id": {
            "title": "Thread Default Prefix Id",
            "type": "integer"
          },
          "thread_prefix_is_required": {
            "title": "Thread Prefix Is Required",
            "type": "boolean"
          },
          "forum_is_followed": {
            "title": "Forum Is Followed",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__threads__navigation__ForumPrefix": {
        "title": "ForumPrefix",
        "required": [
          "group_prefixes",
          "group_title"
        ],
        "type": "object",
        "properties": {
          "group_title": {
            "title": "Group Title",
            "type": "string"
          },
          "group_prefixes": {
            "title": "Group Prefixes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/forum_api__schemas__threads__navigation__GroupPrefix"
            }
          }
        }
      },
      "forum_api__schemas__threads__navigation__GroupPrefix": {
        "title": "GroupPrefix",
        "required": [
          "prefix_id",
          "prefix_title"
        ],
        "type": "object",
        "properties": {
          "prefix_id": {
            "title": "Prefix Id",
            "type": "integer"
          },
          "prefix_title": {
            "title": "Prefix Title",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__threads__navigation__Links": {
        "title": "Links",
        "required": [
          "detail",
          "permalink",
          "sub-categories",
          "sub-forums"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "sub-categories": {
            "title": "Sub-Categories",
            "type": "string"
          },
          "sub-forums": {
            "title": "Sub-Forums",
            "type": "string"
          },
          "sub-elements": {
            "title": "Sub-Elements",
            "type": "string"
          },
          "threads": {
            "title": "Threads",
            "type": "string"
          },
          "followers": {
            "title": "Followers",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__threads__navigation__Permissions": {
        "title": "Permissions",
        "required": [
          "delete",
          "edit",
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean"
          },
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "delete": {
            "title": "Delete",
            "type": "boolean"
          },
          "create_thread": {
            "title": "Create Thread",
            "type": "boolean"
          },
          "upload_attachment": {
            "title": "Upload Attachment",
            "type": "boolean"
          },
          "tag_thread": {
            "title": "Tag Thread",
            "type": "boolean"
          },
          "follow": {
            "title": "Follow",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__threads__navigation__SystemInfo": {
        "title": "SystemInfo",
        "required": [
          "time",
          "visitor_id"
        ],
        "type": "object",
        "properties": {
          "visitor_id": {
            "title": "Visitor Id",
            "type": "integer"
          },
          "time": {
            "title": "Time",
            "type": "integer"
          }
        }
      },
      "forum_api__schemas__threads__polls__Links": {
        "title": "Links",
        "required": [
          "votes"
        ],
        "type": "object",
        "properties": {
          "votes": {
            "title": "Votes",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__threads__polls__Permissions": {
        "title": "Permissions",
        "required": [
          "result",
          "vote"
        ],
        "type": "object",
        "properties": {
          "vote": {
            "title": "Vote",
            "type": "boolean"
          },
          "result": {
            "title": "Result",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__users__CustomFields": {
        "title": "CustomFields",
        "required": [
          "discord",
          "jabber",
          "lztAwardUserTrophy",
          "lztCuratorNodeTitle",
          "lztCuratorNodeTitleEn",
          "lztInnovation20Link",
          "lztInnovation30Link",
          "lztInnovationLink",
          "lztSympathyIncreasing",
          "lztSympathyZeroing",
          "qiwi",
          "scamURL",
          "steam",
          "telegram",
          "vk"
        ],
        "type": "object",
        "properties": {
          "discord": {
            "title": "Discord",
            "type": "string"
          },
          "jabber": {
            "title": "Jabber",
            "type": "string"
          },
          "lztAwardUserTrophy": {
            "title": "Lztawardusertrophy",
            "type": "string"
          },
          "lztCuratorNodeTitle": {
            "title": "Lztcuratornodetitle",
            "type": "string"
          },
          "lztCuratorNodeTitleEn": {
            "title": "Lztcuratornodetitleen",
            "type": "string"
          },
          "lztInnovation20Link": {
            "title": "Lztinnovation20Link",
            "type": "string"
          },
          "lztInnovation30Link": {
            "title": "Lztinnovation30Link",
            "type": "string"
          },
          "lztInnovationLink": {
            "title": "Lztinnovationlink",
            "type": "string"
          },
          "lztSympathyIncreasing": {
            "title": "Lztsympathyincreasing",
            "type": "string"
          },
          "lztSympathyZeroing": {
            "title": "Lztsympathyzeroing",
            "type": "string"
          },
          "qiwi": {
            "title": "Qiwi",
            "type": "string"
          },
          "scamURL": {
            "title": "Scamurl",
            "type": "string"
          },
          "steam": {
            "title": "Steam",
            "type": "string"
          },
          "telegram": {
            "title": "Telegram",
            "type": "string"
          },
          "vk": {
            "title": "Vk",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__users__Links": {
        "title": "Links",
        "required": [
          "avatar",
          "avatar_big",
          "avatar_small",
          "detail",
          "followers",
          "followings",
          "ignore",
          "permalink",
          "timeline"
        ],
        "type": "object",
        "properties": {
          "permalink": {
            "title": "Permalink",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "avatar": {
            "title": "Avatar",
            "type": "string"
          },
          "avatar_big": {
            "title": "Avatar Big",
            "type": "string"
          },
          "avatar_small": {
            "title": "Avatar Small",
            "type": "string"
          },
          "followers": {
            "title": "Followers",
            "type": "string"
          },
          "followings": {
            "title": "Followings",
            "type": "string"
          },
          "ignore": {
            "title": "Ignore",
            "type": "string"
          },
          "timeline": {
            "title": "Timeline",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__users__Links1": {
        "title": "Links1",
        "required": [
          "next",
          "page",
          "pages"
        ],
        "type": "object",
        "properties": {
          "pages": {
            "title": "Pages",
            "type": "integer"
          },
          "page": {
            "title": "Page",
            "type": "integer"
          },
          "next": {
            "title": "Next",
            "type": "string"
          }
        }
      },
      "forum_api__schemas__users__Permissions": {
        "title": "Permissions",
        "required": [
          "edit",
          "follow",
          "ignore",
          "profile_post"
        ],
        "type": "object",
        "properties": {
          "edit": {
            "title": "Edit",
            "type": "boolean"
          },
          "follow": {
            "title": "Follow",
            "type": "boolean"
          },
          "ignore": {
            "title": "Ignore",
            "type": "boolean"
          },
          "profile_post": {
            "title": "Profile Post",
            "type": "boolean"
          }
        }
      },
      "forum_api__schemas__users__SystemInfo": {
        "title": "SystemInfo",
        "required": [
          "time",
          "visitor_id"
        ],
        "type": "object",
        "properties": {
          "visitor_id": {
            "title": "Visitor Id",
            "type": "integer"
          },
          "time": {
            "title": "Time",
            "type": "integer"
          }
        }
      },
      "forum_api__schemas__users__UserMe": {
        "title": "UserMe",
        "required": [
          "custom_fields",
          "links",
          "permissions",
          "short_link",
          "user_dob_day",
          "user_dob_month",
          "user_dob_year",
          "user_email",
          "user_group_id",
          "user_has_password",
          "user_id",
          "user_is_followed",
          "user_is_ignored",
          "user_is_valid",
          "user_is_verified",
          "user_is_visitor",
          "user_last_seen_date",
          "user_like_count",
          "user_message_count",
          "user_register_date",
          "user_timezone_offset",
          "user_title",
          "user_unread_conversation_count",
          "user_unread_notification_count",
          "username",
          "username_html"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "username_html": {
            "title": "Username Html",
            "type": "string"
          },
          "user_message_count": {
            "title": "User Message Count",
            "type": "integer"
          },
          "user_register_date": {
            "title": "User Register Date",
            "type": "integer"
          },
          "user_like_count": {
            "title": "User Like Count",
            "type": "integer"
          },
          "short_link": {
            "title": "Short Link",
            "type": "string"
          },
          "user_email": {
            "title": "User Email",
            "type": "string"
          },
          "user_unread_notification_count": {
            "title": "User Unread Notification Count",
            "type": "integer"
          },
          "user_dob_day": {
            "title": "User Dob Day",
            "type": "integer"
          },
          "user_dob_month": {
            "title": "User Dob Month",
            "type": "integer"
          },
          "user_dob_year": {
            "title": "User Dob Year",
            "type": "integer"
          },
          "user_unread_conversation_count": {
            "title": "User Unread Conversation Count",
            "type": "integer"
          },
          "user_title": {
            "title": "User Title",
            "type": "string"
          },
          "user_is_valid": {
            "title": "User Is Valid",
            "type": "boolean"
          },
          "user_is_verified": {
            "title": "User Is Verified",
            "type": "boolean"
          },
          "user_is_followed": {
            "title": "User Is Followed",
            "type": "boolean"
          },
          "user_last_seen_date": {
            "title": "User Last Seen Date",
            "type": "integer"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__users__Links"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__users__Permissions"
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "user_is_visitor": {
            "title": "User Is Visitor",
            "type": "boolean"
          },
          "user_group_id": {
            "title": "User Group Id",
            "type": "integer"
          },
          "user_timezone_offset": {
            "title": "User Timezone Offset",
            "type": "integer"
          },
          "user_has_password": {
            "title": "User Has Password",
            "type": "boolean"
          },
          "custom_fields": {
            "$ref": "#/components/schemas/forum_api__schemas__users__CustomFields"
          }
        }
      },
      "forum_api__schemas__users__User": {
        "title": "User",
        "required": [
          "custom_fields",
          "links",
          "permissions",
          "short_link",
          "user_group_id",
          "user_id",
          "user_is_followed",
          "user_is_ignored",
          "user_is_valid",
          "user_is_verified",
          "user_is_visitor",
          "user_last_seen_date",
          "user_like_count",
          "user_message_count",
          "user_register_date",
          "user_title",
          "username"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "user_message_count": {
            "title": "User Message Count",
            "type": "integer"
          },
          "user_register_date": {
            "title": "User Register Date",
            "type": "integer"
          },
          "user_like_count": {
            "title": "User Like Count",
            "type": "integer"
          },
          "short_link": {
            "title": "Short Link",
            "type": "string"
          },
          "user_title": {
            "title": "User Title",
            "type": "string"
          },
          "user_is_valid": {
            "title": "User Is Valid",
            "type": "boolean"
          },
          "user_is_verified": {
            "title": "User Is Verified",
            "type": "boolean"
          },
          "user_is_followed": {
            "title": "User Is Followed",
            "type": "boolean"
          },
          "user_last_seen_date": {
            "title": "User Last Seen Date",
            "type": "integer"
          },
          "links": {
            "$ref": "#/components/schemas/forum_api__schemas__users__Links"
          },
          "permissions": {
            "$ref": "#/components/schemas/forum_api__schemas__users__Permissions"
          },
          "user_is_ignored": {
            "title": "User Is Ignored",
            "type": "boolean"
          },
          "user_is_visitor": {
            "title": "User Is Visitor",
            "type": "boolean"
          },
          "user_group_id": {
            "title": "User Group Id",
            "type": "integer"
          },
          "custom_fields": {
            "$ref": "#/components/schemas/forum_api__schemas__users__CustomFields"
          }
        }
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "description": "You can get your token [here](https://zelenka.guru/account/api).",
        "scheme": "bearer"
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true,
    "samples-enabled": true
  }
}